{"version":3,"sources":["./src/app/pages/login/login.component.html","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n  <div class=\\\"theme-container\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-3\\\">\\r\\n      <mat-card [style.max-width.px]=\\\"500\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"uppercase\\\">{{'COMMON.SIGN_IN' | translate }}</h1>\\r\\n          <a mat-button [routerLink]=\\\"['/register', action]\\\" color=\\\"accent\\\" class=\\\"w-100\\\">{{'COMMON.NEW_REGISTER' | translate }}</a>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">person</mat-icon>\\r\\n            <mat-label>{{'COMMON.E_MAIL' | translate }}</mat-label>\\r\\n           <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n          <mat-error *ngIf=\\\"loginForm.controls.email.errors?.required\\\">\\r\\n          {{'VALIDATION.EMAIL_REQUIRED' | translate }}</mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.controls.email.hasError('invalidEmail')\\\">\\r\\n              {{'VALIDATION.EMAIL_INVALID' | translate }}\\r\\n          </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n            <mat-label>{{'COMMON.PASSWORD' | translate }}</mat-label>\\r\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required\\r\\n              [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">\\r\\n              {{'VALIDATION.PASSWORD_REQUIRED' | translate }}</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">\\r\\n              {{'VALIDATION.MINIMUM_LENGTH' | translate }} 6</mat-error>\\r\\n            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" class=\\\"uppercase\\\" type=\\\"submit\\\">\\r\\n              {{'COMMON.SIGN_IN' | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\" *ngIf=\\\"error\\\">\\r\\n          <a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{error}}</a>\\r\\n        </div>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-button (click) =\\\"sendPassword()\\\"> \\r\\n            <mat-icon class=\\\"text-muted\\\">vpn_key</mat-icon>\\r\\n            <span class=\\\"mx-1\\\">{{'MESSAGE.SEND_PASSWORD' | translate }}</span>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\";","export default \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoe1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHBhZGRpbmc6IDdweCAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDsgICAgXHJcbn0iLCIuYXV0aCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6IDdweCAxNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User } from 'src/app/app.models';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public hide = true;\r\n  error: '';\r\n  public action = 0;\r\n  constructor(public fb: FormBuilder,\r\n    public router: Router,\r\n    private tokenStorage: TokenStorage,\r\n    public translate: TranslateService,\r\n    public appService: AppService,\r\n    private route: ActivatedRoute) {\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.action = params.action;\r\n      console.log('action =' + this.action);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      rememberMe: false\r\n    });\r\n  }\r\n\r\n  public onLoginFormSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n\r\n  public login(values: any) {\r\n    if (this.loginForm.valid) {\r\n      const user: User = new User();\r\n      user.userName = this.loginForm.controls.email.value;\r\n      user.password = this.loginForm.controls.password.value;\r\n      try {\r\n        this.error = ''\r\n        user.lang = this.translate.currentLang;\r\n        console.log('Current lang=' + this.translate.currentLang);\r\n        this.appService.authenticate(user)\r\n          .subscribe(data => {\r\n            console.log(data);\r\n            if (data.token !== '' && data.token !== null) {\r\n              console.log('login successful');\r\n              this.tokenStorage.saveAuthData(data);\r\n              this.appService.updateToken();\r\n              console.log('action = '+this.action);\r\n              if (this.action == 1) {\r\n                this.router.navigate(['/submit-project/0']);\r\n              } else {\r\n                this.router.navigate(['/account/user/'+this.tokenStorage.getUserId()]);\r\n              }\r\n              // this.router.navigate([this.tokenStorage.getHomePage()]);\r\n            } else {\r\n              console.log('login failed');\r\n              this.translate.get(['MESSAGE.INVALID_USER_PASS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.error = res['MESSAGE.INVALID_USER_PASS'];\r\n              });\r\n            }\r\n          });\r\n      } catch (e) {\r\n        console.log('Exception during login...');\r\n        this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n          this.error = res['MESSAGE.ERROR_OCCURRED'];\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public sendPassword() {\r\n    try {\r\n      const user: User = new User();\r\n      user.userName = this.loginForm.controls.userName.value;\r\n      console.log('Sending password for user: ' + user.userName);\r\n      if (user.userName === null || user.userName === '') {\r\n        this.translate.get(['VALIDATION.USER_NAME_REQUIRED', 'COMMON.ERROR']).subscribe(res => {\r\n          this.error = res['VALIDATION.USER_NAME_REQUIRED'];\r\n        });\r\n      } else {\r\n        this.appService.resetPassword(user)\r\n          .subscribe(() => {\r\n            this.translate.get(['MESSAGE.PASSWORD_SENT', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.error = res['MESSAGE.PASSWORD_SENT'];\r\n            })\r\n          });\r\n      }\r\n    } catch (e) {\r\n      this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n        this.error = res['MESSAGE.ERROR_OCCURRED'];\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { TranslateModule} from '@ngx-translate/core';\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}