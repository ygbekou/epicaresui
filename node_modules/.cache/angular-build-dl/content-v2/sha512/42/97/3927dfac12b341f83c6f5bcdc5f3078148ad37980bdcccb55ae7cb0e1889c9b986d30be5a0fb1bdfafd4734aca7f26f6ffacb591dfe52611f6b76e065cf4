{"version":3,"sources":["./src/app/pages/payment/payment.component.html","./src/app/pages/payment/payment.component.ts","./src/app/pages/payment/payment.module.ts"],"names":[],"mappings":"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","file":"pages-payment-payment-module-es2015.js","sourcesContent":["export default \"<div class=\\\"theme-container\\\">\\r\\n\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" *ngIf=\\\"action === 'processing'\\\" #stepper>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.PROJECT'|translate}}</ng-template>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_PROJECT'|translate}}\\\" aria-label=\\\"Number\\\"\\r\\n            name=\\\"currentProjectOption\\\" matInput [matAutocomplete]=\\\"projectOptionAuto\\\"\\r\\n            [(ngModel)]=\\\"currentProjectOption\\\" required (ngModelChange)=\\\"filterProjectOptions(currentProjectOption)\\\"\\r\\n            [disabled]=\\\"projectId && projectId !== 0\\\">\\r\\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n          <mat-autocomplete id=\\\"projOption\\\" #projectOptionAuto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let pOption of filteredProjectOptions \\\" [value]=\\\"pOption.title\\\"\\r\\n              (onSelectionChange)=\\\"transaction.project = pOption;\\\">\\r\\n              {{pOption.title}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n            [disabled]=\\\"!transaction.project\\\" type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </mat-step>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.AMOUNT'|translate}}</ng-template>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"amount\\\" [(ngModel)]=\\\"transaction.amount\\\" name=\\\"amount\\\"\\r\\n              #amount=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"amount.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mb-3\\\">\\r\\n            <mat-label>{{'COMMON.CURRENCY' | translate}}</mat-label>\\r\\n            <mat-select placeholder=\\\"{{'COMMON.SELECT' | translate}}\\\" [compareWith]=\\\"compareObjects\\\" id=\\\"currency\\\"\\r\\n              name=\\\"currency\\\" [(ngModel)]=\\\"transaction.currencyCode\\\">\\r\\n              <mat-option [value]=\\\"'USD'\\\">\\r\\n                USD\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'XOF'\\\">\\r\\n                CFA\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'EUR'\\\">\\r\\n                EUR\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n            [disabled]=\\\"amount.invalid\\\" type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>{{'COMMON.PAY'|translate}}</ng-template>\\r\\n\\r\\n      <mat-radio-group [(ngModel)]=\\\"transaction.paymentMethod\\\">\\r\\n        <mat-radio-button value=\\\"CARD\\\" *ngIf=\\\"appService.company.acceptCardPayment\\\" style=\\\"margin-right: 50px;\\\">\\r\\n          {{'COMMON.CREDIT_CARD'|translate}}\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button value=\\\"TMONEY\\\" *ngIf=\\\"appService.company.acceptTmoneyPayment\\\" style=\\\"margin-right: 50px;\\\">\\r\\n          TMoney\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button value=\\\"FLOOZ\\\" *ngIf=\\\"appService.company.acceptFloozPayment\\\" style=\\\"margin-right: 50px;\\\">\\r\\n          Flooz\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n\\r\\n      <br />\\r\\n      <br />\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'CARD'\\\">\\r\\n        <form id=\\\"payment-form\\\">\\r\\n          <div id=\\\"card-element\\\">\\r\\n            <!--Stripe.js injects the Card Element-->\\r\\n          </div>\\r\\n          <br />\\r\\n          <br />\\r\\n          <button id=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\r\\n            <div class=\\\"spinner hidden\\\" id=\\\"spinner\\\"></div>\\r\\n            <span id=\\\"button-text\\\">{{'COMMON.PAY'|translate}}</span>\\r\\n            <!-- <mat-icon>save</mat-icon> -->\\r\\n            <span id=\\\"order-amount\\\"></span>\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'TMONEY' && transaction.paymentMethod !== 'FLOOZ'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"transaction.phone\\\" name=\\\"phone\\\"\\r\\n            #phone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"phone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                (click)=\\\"saveTransaction()\\\">\\r\\n                <span class=\\\"mx-1 uppercase\\\">{{'COMMON.PAY' | translate}}</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n\\r\\n      <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-spinner *ngIf=\\\"!messages && !errors\\\"> Payment processing. Please don't close ...</mat-spinner>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}: {{transaction.project.title}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.AMOUNT' | translate}}: {{transaction.amount}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.CURRENCY' | translate}}: {{transaction.currencyCode}} </mat-label>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"action === 'complete'\\\" style=\\\"height: 100px;\\\">\\r\\n    <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n  </div>\\r\\n\\r\\n</div>\";","import { Component, OnInit, EventEmitter, Output, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Transaction, User, Project } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'app-payment-component',\r\n  templateUrl: './payment.component.html'\r\n})\r\nexport class PaymentComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('stepper') private myStepper: MatStepper;\r\n\r\n  transaction: Transaction = new Transaction();\r\n  result = {};\r\n  @Output() saveEvent = new EventEmitter<any>();\r\n\r\n  currentProjectOption: string;\r\n  projectOptions: Project[];\r\n  filteredProjectOptions: Project[];\r\n\r\n  stripe;\r\n  errors: string;\r\n  data: any;\r\n\r\n  @Input()\r\n  projectId: number;\r\n\r\n  @Input()\r\n  eventId: number;\r\n\r\n  action = 'processing';\r\n\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('I am here ...')\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.projectId !== 0) {\r\n        this.projectId = params.projectId;\r\n      }\r\n    });\r\n    this.getActiveProjects();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.setStripeSecret();\r\n    }, 500);\r\n\r\n    this.transaction.currencyCode = 'USD';\r\n  }\r\n\r\n  setStripeSecret() {\r\n    this.appService.getObject('/service/Payment/stripe-key').toPromise()\r\n      .then(result => {\r\n        this.stripe = Stripe(result.publishableKey);\r\n      });\r\n  }\r\n\r\n  createPaymentIntent() {\r\n\r\n    this.appService.saveWithUrl('/service/Payment/clientSecret', this.transaction).toPromise()\r\n      .then(result => {\r\n        return result;\r\n      })\r\n      .then(data => {\r\n        return this.setupElements(data);\r\n      })\r\n      .then(data => {\r\n        this.data = data;\r\n        document.querySelector('button').disabled = false;\r\n        document.getElementById('submit').removeAttribute('disabled');\r\n\r\n        const form = document.getElementById('payment-form');\r\n        form.addEventListener('submit', this.handleCardSave.bind(this));\r\n      });\r\n  }\r\n\r\n  setupElements(data) {\r\n    // this.stripe = Stripe(data.publishableKey);\r\n\r\n    /* ------- Set up Stripe Elements to use in checkout form ------- */\r\n    const elements = this.stripe.elements();\r\n    const style = {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#aab7c4'\r\n        }\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a'\r\n      }\r\n    };\r\n\r\n    const card = elements.create('card', { style });\r\n    const element = document.getElementById('card-element')\r\n    card.mount('#card-element');\r\n\r\n    return {\r\n      stripe: this.stripe,\r\n      card,\r\n      clientSecret: data.clientSecret\r\n    };\r\n  }\r\n\r\n  handleCardSave(event) {\r\n    event.preventDefault();\r\n    document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n    this.submitPayment(this.data.stripe, this.data.card, this.data.clientSecret, this.translate,\r\n      this.result, this.myStepper, this.save, this.appService, this.transaction, this.tokenStorage.getUserId(), this.processResult);\r\n  }\r\n\r\n  submitPayment(stripe, card, clientSecret, translate, myResult, myStepper, saveFct, appService, transaction, userId, processResult) {\r\n    this.errors = '';\r\n    stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card\r\n        }\r\n      })\r\n      .then(function (result) {\r\n        if (result.error) {\r\n          // Show error to your customer\r\n          //showError(result.error.message);\r\n          translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n          });\r\n          document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n        } else {\r\n          // The payment succeeded!\r\n          //orderComplete(result.paymentIntent.id);\r\n          translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n          });\r\n          saveFct(appService, transaction, userId, translate, myResult);\r\n        }\r\n        myStepper.selected.completed = true;\r\n        myStepper.next();\r\n      });\r\n  }\r\n\r\n  public getActiveProjects() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.projectOptions = data;\r\n      this.filteredProjectOptions = data;\r\n\r\n      if (this.projectId) {\r\n        for (let p of this.projectOptions) {\r\n          if (p.id === Number(this.projectId)) {\r\n            this.currentProjectOption = p.title;\r\n            this.transaction.project = p;\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  save(appService, transaction, userId, translate, myResult) {\r\n\r\n    myResult.errors = undefined;\r\n    myResult.messages = undefined;\r\n\r\n    transaction.modifiedBy = +userId;\r\n    transaction.user = new User();\r\n    transaction.user.id = +userId;\r\n    transaction.io = 0;\r\n\r\n    appService.save(transaction, 'Transaction')\r\n      .subscribe(result => {\r\n        if (result.errors === null || result.errors.length === 0) {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n          });\r\n        } else {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  filterProjectOptions(val) {\r\n    if (val) {\r\n      const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();\r\n      this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n      this.filteredProjectOptions = this.projectOptions;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.transaction = new Transaction();\r\n  }\r\n\r\n  goBack() {\r\n    this.myStepper.previous();\r\n  }\r\n\r\n  goForward() {\r\n    this.myStepper.selected.completed = true;\r\n    this.myStepper.next();\r\n\r\n    if (this.myStepper.selectedIndex === 2) {\r\n      this.createPaymentIntent();\r\n    }\r\n  }\r\n\r\n  saveTransaction() {\r\n\r\n    this.myStepper.next();\r\n    this.transaction.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.transaction.user = new User();\r\n    this.transaction.user.id = +this.tokenStorage.getUserId();\r\n\r\n\r\n    this.appService.saveWithUrl('/service/Payment/saveTransaction', this.transaction)\r\n      .subscribe(data => {\r\n        if (data.errors === null || data.errors.length === 0) {\r\n          this.translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.CARD_PAYMENT_FAILED', 'MESSAGE.' + data.errors[0]]).subscribe(res => {\r\n            this.errors = res['MESSAGE.' + data.errors[0]];\r\n          });\r\n        }\r\n        this.action = 'complete';\r\n        this.myStepper.selected.completed = true;\r\n        this.myStepper.next();\r\n      });\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { MatVideoModule } from 'mat-video';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PaymentComponent } from './payment.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nexport const routes = [\r\n  { path: '', component: PaymentComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaymentComponent\r\n  ],\r\n  exports: [\r\n    PaymentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n    AgmCoreModule,\r\n    MatVideoModule,\r\n    SharedModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class PaymentModule { }\r\n"],"sourceRoot":"webpack:///"}