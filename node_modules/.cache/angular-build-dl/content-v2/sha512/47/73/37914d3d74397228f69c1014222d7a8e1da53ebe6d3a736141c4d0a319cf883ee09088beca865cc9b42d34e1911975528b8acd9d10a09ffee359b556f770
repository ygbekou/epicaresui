{"version":3,"sources":["webpack:///src/app/pages/account/account.component.html","webpack:///src/app/pages/account/admin/admin.component.html","webpack:///src/app/pages/account/cmessage-list/cmessage-list.component.html","webpack:///src/app/pages/account/cmessage/cmessage.component.html","webpack:///src/app/pages/account/configs/configs.component.html","webpack:///src/app/pages/account/dashboard/dashboard.component.html","webpack:///src/app/pages/account/email/email.component.html","webpack:///src/app/pages/account/event-list/event-list.component.html","webpack:///src/app/pages/account/event/event.component.html","webpack:///src/app/pages/account/faq-list/faq-list.component.html","webpack:///src/app/pages/account/faq/faqi.component.html","webpack:///src/app/pages/account/favorites/favorites.component.html","webpack:///src/app/pages/account/image/Images.component.html","webpack:///src/app/pages/account/job-appli-list/job-appli-list.component.html","webpack:///src/app/pages/account/job-appli/job-appli.component.html","webpack:///src/app/pages/account/job-position-list/job-position-list.component.html","webpack:///src/app/pages/account/job-position/job-position.component.html","webpack:///src/app/pages/account/meetingReport/MeetingReports.component.html","webpack:///src/app/pages/account/my-properties/my-properties.component.html","webpack:///src/app/pages/account/news-list/news-list.component.html","webpack:///src/app/pages/account/news/news.component.html","webpack:///src/app/pages/account/poll/PollQuestions.component.html","webpack:///src/app/pages/account/poll/Polls.component.html","webpack:///src/app/pages/account/pollType/PollTypes.component.html","webpack:///src/app/pages/account/positions/Positions.component.html","webpack:///src/app/pages/account/profile/profile.component.html","webpack:///src/app/pages/account/projects-list/project-list.component.html","webpack:///src/app/pages/account/projects/project.component.html","webpack:///src/app/pages/account/publicity/Publicities.component.html","webpack:///src/app/pages/account/regulation/regulation.component.html","webpack:///src/app/pages/account/section-items/section-items.component.html","webpack:///src/app/pages/account/sections/sections.component.html","webpack:///src/app/pages/account/settings/Settings.component.html","webpack:///src/app/pages/account/slider-items/slider-items.component.html","webpack:///src/app/pages/account/sliders/sliders.component.html","webpack:///src/app/pages/account/statusText/statusText.component.html","webpack:///src/app/pages/account/transaction-list/transaction-list.component.html","webpack:///src/app/pages/account/transaction/online-payment.component.html","webpack:///src/app/pages/account/transaction/transaction.component.html","webpack:///src/app/pages/account/user-list/user-list.component.html","webpack:///src/app/pages/account/user/user.component.html","webpack:///src/app/pages/account/video/Videos.component.html","webpack:///src/app/pages/account/account.component.scss","webpack:///src/app/pages/account/account.component.ts","webpack:///src/app/pages/account/account.module.ts","webpack:///src/app/pages/account/admin/admin.component.scss","webpack:///src/app/pages/account/admin/admin.component.ts","webpack:///src/app/pages/account/cmessage-list/cmessage-list.component.scss","webpack:///src/app/pages/account/cmessage-list/cmessage-list.component.ts","webpack:///src/app/pages/account/cmessage/cmessage.component.scss","webpack:///src/app/pages/account/cmessage/cmessage.component.ts","webpack:///src/app/pages/account/configs/configs.component.scss","webpack:///src/app/pages/account/configs/configs.component.ts","webpack:///src/app/pages/account/dashboard/dashboard.component.scss","webpack:///src/app/pages/account/dashboard/dashboard.component.ts","webpack:///src/app/pages/account/email/email.component.scss","webpack:///src/app/pages/account/email/email.component.ts","webpack:///src/app/pages/account/event-list/event-list.component.scss","webpack:///src/app/pages/account/event-list/event-list.component.ts","webpack:///src/app/pages/account/event/event.component.scss","webpack:///src/app/pages/account/event/event.component.ts","webpack:///src/app/pages/account/faq-list/faq-list.component.scss","webpack:///src/app/pages/account/faq-list/faq-list.component.ts","webpack:///src/app/pages/account/faq/faqi.component.scss","webpack:///src/app/pages/account/faq/faqi.component.ts","webpack:///src/app/pages/account/favorites/favorites.component.scss","webpack:///src/app/pages/account/favorites/favorites.component.ts","webpack:///src/app/pages/account/image/Images.component.scss","webpack:///src/app/pages/account/image/Images.component.ts","webpack:///src/app/pages/account/job-appli-list/job-appli-list.component.scss","webpack:///src/app/pages/account/job-appli-list/job-appli-list.component.ts","webpack:///src/app/pages/account/job-appli/job-appli.component.scss","webpack:///src/app/pages/account/job-appli/job-appli.component.ts","webpack:///src/app/pages/account/job-position-list/job-position-list.component.scss","webpack:///src/app/pages/account/job-position-list/job-position-list.component.ts","webpack:///src/app/pages/account/job-position/job-position.component.scss","webpack:///src/app/pages/account/job-position/job-position.component.ts","webpack:///src/app/pages/account/meetingReport/MeetingReports.component.scss","webpack:///src/app/pages/account/meetingReport/MeetingReports.component.ts","webpack:///src/app/pages/account/my-properties/my-properties.component.scss","webpack:///src/app/pages/account/my-properties/my-properties.component.ts","webpack:///src/app/pages/account/news-list/news-list.component.scss","webpack:///src/app/pages/account/news-list/news-list.component.ts","webpack:///src/app/pages/account/news/news.component.scss","webpack:///src/app/pages/account/news/news.component.ts","webpack:///src/app/pages/account/poll/PollQuestions.component.ts","webpack:///src/app/pages/account/poll/Polls.component.scss","webpack:///src/app/pages/account/poll/Polls.component.ts","webpack:///src/app/pages/account/pollType/PollTypes.component.scss","webpack:///src/app/pages/account/pollType/PollTypes.component.ts","webpack:///src/app/pages/account/positions/Positions.component.scss","webpack:///src/app/pages/account/positions/Positions.component.ts","webpack:///src/app/pages/account/profile/profile.component.scss","webpack:///src/app/pages/account/profile/profile.component.ts","webpack:///src/app/pages/account/projects-list/project-list.component.scss","webpack:///src/app/pages/account/projects-list/project-list.component.ts","webpack:///src/app/pages/account/projects/project.component.scss","webpack:///src/app/pages/account/projects/project.component.ts","webpack:///src/app/pages/account/publicity/Publicities.component.scss","webpack:///src/app/pages/account/publicity/Publicities.component.ts","webpack:///src/app/pages/account/regulation/regulation.component.scss","webpack:///src/app/pages/account/regulation/regulation.component.ts","webpack:///src/app/pages/account/section-items/section-items.component.scss","webpack:///src/app/pages/account/section-items/section-items.component.ts","webpack:///src/app/pages/account/sections/sections.component.scss","webpack:///src/app/pages/account/sections/sections.component.ts","webpack:///src/app/pages/account/settings/Settings.component.scss","webpack:///src/app/pages/account/settings/Settings.component.ts","webpack:///src/app/pages/account/slider-items/slider-items.component.scss","webpack:///src/app/pages/account/slider-items/slider-items.component.ts","webpack:///src/app/pages/account/sliders/sliders.component.scss","webpack:///src/app/pages/account/sliders/sliders.component.ts","webpack:///src/app/pages/account/statusText/statusText.component.scss","webpack:///src/app/pages/account/statusText/statusText.component.ts","webpack:///src/app/pages/account/transaction-list/transaction-list.component.scss","webpack:///src/app/pages/account/transaction-list/transaction-list.component.ts","webpack:///src/app/pages/account/transaction/online-payment.component.ts","webpack:///src/app/pages/account/transaction/transaction.component.scss","webpack:///src/app/pages/account/transaction/transaction.component.ts","webpack:///src/app/pages/account/user-list/user-list.component.scss","webpack:///src/app/pages/account/user-list/user-list.component.ts","webpack:///src/app/pages/account/user/user.component.scss","webpack:///src/app/pages/account/user/user.component.ts","webpack:///src/app/pages/account/video/Videos.component.scss","webpack:///src/app/pages/account/video/Videos.component.ts"],"names":["AccountComponent","router","tokenStorage","psConfig","wheelPropagation","sidenavOpen","lang","links","name","href","getUserId","icon","console","log","hasToken","logout","navigator","language","substring","get","getRole","window","innerWidth","events","subscribe","event","sidenav","close","clearAuthData","navigate","selector","template","routes","path","component","children","redirectTo","pathMatch","AccountModule","declarations","imports","forChild","forRoot","theme","modules","syntax","toolbar","header","list","script","indent","direction","size","color","background","font","align","exports","AdminComponent","appService","appSettings","translate","CmessageListComponent","displayedColumns","parameters","getAllByCriteriaWithFiles","data","dataSource","paginator","sort","contactUsMessage","index","indexOf","id","processDeleteResult","messages","splice","filterValue","filter","trim","toLowerCase","firstPage","CmessageComponent","activatedRoute","toolbarTypes","headerTypes","flags","image","code","cmessage","params","getCmessage","cmessageId","getOneWithChildsAndFiles","result","res","error","ConfigsComponent","footerTypes","formData","FormData","company","companies","location","selectedTab","selectedMainTabIndex","settings","si","themeColor","headerTextPosition","headerImageType","footerType","flag","found","forEach","aCompany","getAllByCriteria","length","$event","nbFiles","isNew","fixedMenu","toString","leftToRight","i","favicons","append","file","logos","careers","polls","projects","prj","saveWithFile","initCompany","push","save","e","resp","DashboardComponent","EmailComponent","email","saveWithUrl","processResult","errors","EventListComponent","searchCrit","getFlag","eventDesc","EventComponent","clear","getActiveUsers","getDescriptions","minutes","hours","activeUsers","eventDescs","ed","eventId","setHours","images","fileNames","item","link","preview","files","status","beginHour","Date","beginDate","getHours","beginMinute","getMinutes","endHour","endDate","endMinute","modifiedBy","remainingFileNames","pathSplitArray","split","setToggles","beginDateStr","toISOString","endDateStr","thisEvent","cleanDescriptions","onSave","element","undefined","eDesc","ev","edesc","FaqListComponent","faq","FaqiComponent","getFaq","faqId","FavoritesComponent","Data","favorites","property","ImagesComponent","selected","getAll","imageId","setValue","im","updateDatasourceData","JobAppliListComponent","Number","jobPositionId","getJobApplis","JobAppliComponent","jobAppli","jobPositionDesc","action","getJobAppli","jobPositionDescId","jobAppliId","userId","applicant","jobPosition","processResultBasedOnId","JobPositionListComponent","info","JobPositionComponent","jobPositionDescs","jpd","thisJobposition","jp","jpDesc","jobPos","jpdesc","MeetingReportsComponent","meetingReport","meetingReportDescs","mrd","title","meetingReportId","thisMeetingReport","mr","mrDesc","mReport","mrdesc","MyPropertiesComponent","getProperties","NewsListComponent","news","NewsComponent","newss","videos","removeItem","fileName","vo","deleteFile","removeElement","getNews","newsId","author","featured","PollQuestionsComponent","pollQuestion","pollQuestions","pollQuestionDescs","getActivePositions","activePositions","pollId","poll","pollChoices","pqd","description","pcd","pollChoiceDescs","pollChoice","pollQuestionId","thisPollQuestion","pq","pqDesc","value","PollsComponent","changeDetectedRef","getPolls","getPollTypes","pollTypes","pollDescs","pd","endNote","detectChanges","setTimeout","pollQuestionsView","getPollQuestions","thisPoll","p","pDesc","PollTypesComponent","pollType","pollTypeDescs","pollTypeId","thispollType","pol","pdesc","PositionsComponent","position","positionDescs","positionId","leadership","thisposition","pos","ProfileComponent","formBuilder","snackBar","infoForm","group","compose","required","minLength","phone","currentPassword","newPassword","organization","facebook","twitter","linkedin","instagram","website","shortResume","longResume","confirmNewPassword","validator","values","valid","open","panelClass","verticalPosition","duration","passwordForm","ProjectListComponent","proj","ProjectComponent","project","getProject","projectId","PublicitiesComponent","publicity","publicityId","pub","RegulationComponent","regulation","getRegulation","SectionItemsComponent","section","menus","sectionItem","icons","setLang","getSection","sectionId","getOne","sectionImages","img","showInMenu","SectionsComponent","SettingsComponent","SliderItemsComponent","slider","getSlider","sliderId","sliderImages","SlidersComponent","StatusTextComponent","statusText","getStatusText","TransactionListComponent","transaction","transactionView","getTransaction","trans","OnlinePaymentComponent","saveEvent","getActiveProjects","setStripeSecret","currencyCode","getObject","toPromise","then","stripe","Stripe","publishableKey","setupElements","document","querySelector","disabled","getElementById","removeAttribute","form","addEventListener","handleCardSave","bind","elements","style","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","card","create","mount","clientSecret","preventDefault","setAttribute","submitPayment","myStepper","myResult","saveFct","confirmCardPayment","payment_method","completed","next","projectOptions","filteredProjectOptions","user","io","val","startsWith","previous","selectedIndex","createPaymentIntent","TransactionComponent","userOptions","filteredUserOptions","transactionId","currentUserOption","currentProjectOption","emit","UserListComponent","UserComponent","userGroups","picture","currentLang","type","getUser","confirmPassword","password","employees","resume","userGroup","employee","VideosComponent","video","videoId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe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","file":"pages-account-account-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n\\r\\n        <mat-sidenav-container class=\\\"account\\\">\\r\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"account-sidenav\\\">\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\">\\r\\n                    <button fxHide=\\\"false\\\" fxHide.gt-sm mat-mini-fab color=\\\"warn\\\" class=\\\"close\\\"\\r\\n                        (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-card-header fxLayoutAlign=\\\"start center\\\">\\r\\n                        <img *ngIf=\\\"tokenStorage.getPicture()\\\" mat-card-avatar\\r\\n                            src=\\\"assets/images/users/{{tokenStorage.getUserId()}}/{{tokenStorage.getPicture()}}\\\" alt=\\\"\\\">\\r\\n                        <img *ngIf=\\\"!tokenStorage.getPicture()\\\" mat-card-avatar\\r\\n                            src=\\\"assets/images/avatars/user_blue.jpg\\\" alt=\\\"\\\">\\r\\n\\r\\n                        <mat-card-title class=\\\"text-muted mb-0\\\">{{tokenStorage.getName()}}</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                    <div class=\\\"divider my-3\\\"></div>\\r\\n                    <div *ngFor=\\\"let link of links\\\">\\r\\n                        <a matLine [routerLink]=\\\"link.href\\\" routerLinkActive=\\\"horizontal-active-link\\\"\\r\\n                            [routerLinkActiveOptions]=\\\"{exact:true}\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n                            class=\\\"p-3\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">{{link.icon}}</mat-icon>\\r\\n                            <span class=\\\"mx-2\\\">{{ link.name }}</span>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n            </mat-sidenav>\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n                <mat-card *ngIf=\\\"!sidenavOpen\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\"\\r\\n                    class=\\\"text-muted mb-3\\\">\\r\\n                    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                    </button>\\r\\n                    <h3> My Account</h3>\\r\\n                </mat-card>\\r\\n                <mat-card class=\\\"account-wrapper\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </mat-card>\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n   <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.STATUS' | translate}}\\\">\\r\\n      <app-statusText-component></app-statusText-component>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.REGULATIONS' | translate}}\\\">\\r\\n      <app-regulation-component></app-regulation-component>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.POSITION' | translate}}\\\">\\r\\n      <app-positions-component></app-positions-component>\\r\\n    </mat-tab> \\r\\n    <mat-tab label=\\\"{{'COMMON.POLL_TYPE' | translate}}\\\">\\r\\n      <app-pollTypes-component></app-pollTypes-component>\\r\\n    </mat-tab> \\r\\n  </mat-tab-group>\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.FILTER_CMESSAGE' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/cmessage', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\"> {{cmessage.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\"> {{cmessage.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.EMAIL' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">{{cmessage.email}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Phone Column -->\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">{{cmessage.phone}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">\\r\\n        <a [routerLink]=\\\"['/account/cmessage', cmessage.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(faq)\\\" \\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let faq; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"cmessage.name\\\" name=\\\"name\\\"\\r\\n                  #name=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.name}}</mat-label> -->\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"cmessage.email\\\" name=\\\"email\\\"\\r\\n                  #email=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.email}}</mat-label> -->\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"cmessage.phone\\\" name=\\\"phone\\\"\\r\\n                  #phone=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.phone}}</mat-label> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}}</mat-label>\\r\\n          <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"message\\\" [(ngModel)]=\\\"cmessage.message\\\" name=\\\"message\\\" \\r\\n            #message=\\\"ngModel\\\" rows=\\\"10\\\" readonly></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n  <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n  <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n  <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n</a>\\r\\n<mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n  <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n    <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n      <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n    </button>\\r\\n  </span>\\r\\n</mat-menu>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group  [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n      <mat-tab label=\\\"Essentiel\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"company.name\\\" name=\\\"name\\\"\\r\\n                #name=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.ADDRESS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" [(ngModel)]=\\\"company.address\\\" name=\\\"address\\\"\\r\\n                #address=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && address.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.EMAIL' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"company.email\\\"\\r\\n                name=\\\"email\\\" #email=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && email.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.WEBSITE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"website\\\" [(ngModel)]=\\\"company.website\\\"\\r\\n                name=\\\"website\\\" #website=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && website.errors && website.invalid\\\" severity=\\\"error\\\" text=\\\"Website is required\\\">\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.PHONE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"company.phone\\\"\\r\\n                name=\\\"phone\\\" #phone=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && phone.errors && phone.invalid\\\" severity=\\\"error\\\" text=\\\"Phone is required\\\">\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.PHONE' | translate}} 2\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone2\\\" [(ngModel)]=\\\"company.phone2\\\"\\r\\n                name=\\\"phone2\\\" #phone2=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.FAX' | translate}}\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fax\\\" [(ngModel)]=\\\"company.fax\\\"\\r\\n                name=\\\"fax\\\" #fax=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"company.description\\\" #description=\\\"ngModel\\\">\\r\\n          </quill-editor>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Social Media\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"twitterApi\\\">Youtube</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterApi\\\" [(ngModel)]=\\\"company.twitterApi\\\"\\r\\n                name=\\\"twitterApi\\\" #twitterApi=\\\"ngModel\\\" name=\\\"twitterApi\\\" #twitterApi=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"twitterUrl\\\">{{'COMMON.TWITTER_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterUrl\\\" [(ngModel)]=\\\"company.twitterUrl\\\"\\r\\n                name=\\\"twitterUrl\\\" #twitterUrl=\\\"ngModel\\\" name=\\\"twitterUrl\\\" #twitterUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"linkedInUrl\\\">LinkedIn</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"linkedInUrl\\\" [(ngModel)]=\\\"company.linkedInUrl\\\"\\r\\n                name=\\\"linkedInUrl\\\" #linkedInUrl=\\\"ngModel\\\" name=\\\"linkedInUrl\\\" #linkedInUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"googlePlusUrl\\\">{{'COMMON.GOOGLE_PLUS_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"googlePlusUrl\\\" [(ngModel)]=\\\"company.googlePlusUrl\\\"\\r\\n                name=\\\"googlePlusUrl\\\" #googlePlusUrl=\\\"ngModel\\\" name=\\\"googlePlusUrl\\\" #googlePlusUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"facebookUrl\\\">{{'COMMON.FACEBOOK_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"facebookUrl\\\" [(ngModel)]=\\\"company.facebookUrl\\\"\\r\\n                name=\\\"facebookUrl\\\" #facebookUrl=\\\"ngModel\\\" name=\\\"facebookUrl\\\" #facebookUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"instagramUrl\\\">{{'COMMON.INSTAGRAM_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"instagramUrl\\\" [(ngModel)]=\\\"company.instagramUrl\\\"\\r\\n                name=\\\"instagramUrl\\\" #instagramUrl=\\\"ngModel\\\" name=\\\"instagramUrl\\\" #instagramUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"googleMap\\\">{{'COMMON.GOOGLE_MAP' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"googleMap\\\" [(ngModel)]=\\\"company.googleMap\\\"\\r\\n                name=\\\"googleMap\\\" #googleMap=\\\"ngModel\\\" name=\\\"googleMap\\\" #googleMap=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Web site\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"copyright\\\">{{'COMMON.COPYRIGHT' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.copyright\\\" name=\\\"copyright\\\" #copyright=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"bannerContentHeader\\\">{{'COMMON.BANNER_CONTENT_PARAGRAPH' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.bannerContentHeader\\\" name=\\\"bannerContentHeader\\\"\\r\\n                #bannerContentHeader=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"bannerContentParagraph\\\">{{'COMMON.BANNER_CONTENT_SUFFIX' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.bannerContentParagraph\\\" name=\\\"bannerContentParagraph\\\"\\r\\n                #bannerContentParagraph=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph1\\\">{{'COMMON.FOOTER_PARAGRAPH_1' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph1\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph1\\\" name=\\\"footerParagraph1\\\" #footerParagraph1=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph2\\\">{{'COMMON.FOOTER_PARAGRAPH_2' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph2\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph2\\\" name=\\\"footerParagraph2\\\" #footerParagraph2=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"careerBannerTitle\\\">{{'COMMON.CAREER_BANNER_TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"careerBannerTitle\\\"\\r\\n                [(ngModel)]=\\\"company.careerBannerTitle\\\" name=\\\"careerBannerTitle\\\" #careerBannerTitle=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayAuthor\\\" name=\\\"displayAuthor\\\" #displayAuthor=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_AUTHOR' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMission\\\" name=\\\"displayMission\\\" #displayMission=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MISSION' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            \\r\\n            <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayTestimonial\\\" name=\\\"displayTestimonial\\\"\\r\\n              #displayTestimonial=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TESTIMONIAL' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayServices\\\" name=\\\"displayServices\\\" #displayServices=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_SERVICES' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayShortLang\\\" name=\\\"displayShortLang\\\" #displayShortLang=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_SHORT_LANG' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuProject\\\" name=\\\"displayMenuProject\\\"\\r\\n              #displayMenuProject=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_PROJECT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuEvent\\\" name=\\\"displayMenuEvent\\\"\\r\\n              #displayMenuEvent=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_EVENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayProjects\\\" name=\\\"displayProjects\\\"\\r\\n              #displayProjects=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_HOME_PROJECTS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayPolls\\\" name=\\\"displayPolls\\\"\\r\\n              #displayPolls=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_HOME_POLLS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n             <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFooterContact\\\" name=\\\"displayFooterContact\\\"\\r\\n              #displayFooterContact=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FOOTER_CONTACT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          -->\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph3\\\">{{'COMMON.FOOTER_PARAGRAPH_3' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph3\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph3\\\" name=\\\"footerParagraph3\\\" #footerParagraph3=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"fromEmail\\\">{{'COMMON.FROM_EMAIL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromEmail\\\" [(ngModel)]=\\\"company.fromEmail\\\"\\r\\n                name=\\\"fromEmail\\\" #fromEmail=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"toEmail\\\">{{'COMMON.TO_EMAIL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toEmail\\\" [(ngModel)]=\\\"company.toEmail\\\" name=\\\"toEmail\\\"\\r\\n                #toEmail=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"metaKeyword\\\">{{ 'COMMON.META_KEYWORD' | translate }}</mat-label>\\r\\n              <input matInput id=\\\"metaKeyword\\\" [(ngModel)]=\\\"company.metaKeyword\\\" name=\\\"metaKeyword\\\"\\r\\n                #metaKeyword=\\\"ngModel\\\" />\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"metaDescription\\\">{{ 'COMMON.META_DESCRIPTION' | translate }}</mat-label>\\r\\n              <textarea matInput id=\\\"metaDescription\\\" [(ngModel)]=\\\"company.metaDescription\\\" name=\\\"metaDescription\\\"\\r\\n                #metaDescription=\\\"ngModel\\\"> </textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"careerBannerText\\\">{{ 'COMMON.CAREER_BANNER_TEXT' | translate }}</mat-label>\\r\\n              <textarea matInput id=\\\"careerBannerText\\\" [(ngModel)]=\\\"company.careerBannerText\\\" name=\\\"careerBannerText\\\"\\r\\n                #careerBannerText=\\\"ngModel\\\"> </textarea>\\r\\n            </mat-form-field>\\r\\n<!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayClientLogos\\\" name=\\\"displayClientLogos\\\"\\r\\n              #displayClientLogos=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_CLIENT_LOGOS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n                         \\r\\n          -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayTeams\\\" name=\\\"displayTeams\\\" #displayTeams=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TEAMS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n        \\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayExpertise\\\" name=\\\"displayExpertise\\\" #displayExpertise=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_EXPERTISE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFeatured\\\" name=\\\"displayFeatured\\\" #displayFeatured=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FEATURED' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n           \\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayBlogs\\\" name=\\\"displayBlogs\\\" #displayBlogs=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_BLOGS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayToolbar\\\" name=\\\"displayToolbar\\\" #displayToolbar=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TOOLBAR' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n              -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFeaturedBlogs\\\" name=\\\"displayFeaturedBlogs\\\"\\r\\n              #displayFeaturedBlogs=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FEATURED_BLOGS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayLangMenu\\\" name=\\\"displayLangMenu\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_LANG_MENU' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuCareer\\\" name=\\\"displayMenuCareer\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_CAREER' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuBlog\\\" name=\\\"displayMenuBlog\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_BLOG' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuPoll\\\" name=\\\"displayMenuPoll\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_POLL' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptCardPayment\\\" name=\\\"acceptCardPayment\\\"\\r\\n              #acceptCardPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_CARD_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptTmoneyPayment\\\" name=\\\"acceptTmoneyPayment\\\"\\r\\n              #acceptTmoneyPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_TMONEY_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptFloozPayment\\\" name=\\\"acceptFloozPayment\\\"\\r\\n              #acceptFloozPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_FLOOZ_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          \\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"Images\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.LOGO' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"logos\\\" name=\\\"logo\\\" #logo=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/logo.png\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.FAVICON' | translate}}</span>\\r\\n          </p>\\r\\n          <input-file [(ngModel)]=\\\"favicons\\\" name=\\\"favicon\\\" #favicon=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/favicon.ico\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.CAREER' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"careers\\\" name=\\\"career\\\" #career=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/careers.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.POLL' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"polls\\\" name=\\\"poll\\\" #poll=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/polls.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PROJECT' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"projects\\\" name=\\\"project\\\" #project=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/projects.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Template\\\">\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>Menu</h4>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.fixedMenu\\\" name=\\\"fixedMenu\\\" #fixedMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.FIXED_MENU' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.leftToRight\\\" name=\\\"leftToRight\\\" #leftToRight=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.LEFTY' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_TOOLBAR' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.headerTextPosition\\\" name=\\\"headerTextPosition\\\"\\r\\n            #headerTextPosition=\\\"ngModel\\\" (change)=\\\"chooseToolbarType()\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let toolbarType of toolbarTypes\\\" [value]=\\\"toolbarType\\\">\\r\\n              {{ 'COMMON.HEADER' | translate }}-{{toolbarType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_HEADER' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.headerImageType\\\" (change)=\\\"chooseHeaderType()\\\" name=\\\"headerImageType\\\"\\r\\n            #headerImageType=\\\"ngModel\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let headerType of headerTypes\\\" [value]=\\\"headerType\\\">{{headerType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_FOOTER' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.footerType\\\" (change)=\\\"chooseFooterType()\\\" name=\\\"footerType\\\"\\r\\n            #footerType=\\\"ngModel\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let footerType of footerTypes\\\" [value]=\\\"footerType\\\">{{footerType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_COLOR' | translate }} : {{company.themeColor}}</h4>\\r\\n          <div class=\\\"example-button-row\\\">\\r\\n            <button (click)=\\\"changeTheme('blue')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#1976d2; border: 1px solid #1976d2;color: white;\\\">{{'COLOR.BLUE' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('green')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#689f38; border: 1px solid #689f38;color: white;\\\">{{'COLOR.GREEN' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('red')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#d32f2f; border: 1px solid #d32f2f;color: white;\\\">{{'COLOR.RED' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('pink')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#c2185b; border: 1px solid #c2185b;color: white;\\\">{{'COLOR.PINK' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('purple')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#7b1fa2; border: 1px solid #7b1fa2;color: white;\\\">{{'COLOR.PURPLE' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('grey')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#455a64; border: 1px solid #455a64;color: white;\\\">{{'COLOR.GRAY' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('orange-dark')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#303030; border: 1px solid #303030;color: white;\\\">{{'COLOR.DARK' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('orange-grey')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#FF3D00; border: 1px solid #FF3D00;color: white;\\\">{{'COLOR.ORANGE_GREY' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('dark-blue')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#1A237E; border: 1px solid #1A237E;color: white;\\\">{{'COLOR.DARK_BLUE' | translate}}</button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n\\r\\n      <mat-tab label=\\\"Location\\\">\\r\\n        <mat-tab-group [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n          <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n              <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n                    placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n                <a (click)=\\\"addLocation()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"table-wrapper\\\">\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n                <!-- ID Column -->\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Image Column -->\\r\\n               <ng-container matColumnDef=\\\"name\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.name}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Published Column -->\\r\\n                <ng-container matColumnDef=\\\"telephone\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.telephone}} </td>\\r\\n                </ng-container> \\r\\n\\r\\n                <!-- Actions Column -->\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\">\\r\\n                    <a (click)=\\\"edit(location)\\\" mat-icon-button color=\\\"primary\\\"\\r\\n                      matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </a>\\r\\n                    &nbsp;&nbsp;\\r\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(location)\\\"\\r\\n                      matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let location; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n              </table>\\r\\n              <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}\\r\\n              </p>\\r\\n            </div>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n            <form name=\\\"fform\\\" (ngSubmit)=\\\"ff.form.valid && saveLocation()\\\" #ff=\\\"ngForm\\\" validate>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title2\\\" [(ngModel)]=\\\"location.name\\\"\\r\\n                      name=\\\"title2\\\" #title2=\\\"ngModel\\\" required>\\r\\n                    <mat-error *ngIf=\\\"ff.submitted && title2.invalid\\\" severity=\\\"error\\\">\\r\\n                      {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.PHONE' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title3\\\" [(ngModel)]=\\\"location.telephone\\\"\\r\\n                      name=\\\"title3\\\" #title3=\\\"ngModel\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n                   \\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.RANK' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank2\\\" [(ngModel)]=\\\"location.rank\\\"\\r\\n                      name=\\\"rank2\\\" #rank2=\\\"ngModel\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                  <mat-label>{{'COMMON.ADDRESS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                  </mat-label>\\r\\n                  <quill-editor id=\\\"summary\\\" name=\\\"summary\\\" [(ngModel)]=\\\"location.address\\\" #summary=\\\"ngModel\\\">\\r\\n                  </quill-editor>\\r\\n                </div> \\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                  <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                      type=\\\"submit\\\">\\r\\n                      <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button> </div>\\r\\n                  <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n                    <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </mat-tab-group>\\r\\n\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"selectedMainTabIndex!==5\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && sendEmail()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.EMAIL' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <mat-label> {{'COMMON.SUBJECT' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject\\\" [(ngModel)]=\\\"email.subject\\\" name=\\\"subject\\\"\\r\\n                #subject=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && subject.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n            <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"email.sendEmail\\\" id=\\\"email\\\" name=\\\"email\\\">\\r\\n              E-mail\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n            <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"email.sendSms\\\" id=\\\"sms\\\" name=\\\"sms\\\">\\r\\n              SMS\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n          <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"email.body\\\" name=\\\"body\\\" #body=\\\"ngModel\\\" required></quill-editor>\\r\\n          <mat-error *ngIf=\\\"f.submitted && body.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </div>\\r\\n\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SEND' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>{{'COMMON.EVENTS' | translate}}</h2>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/event', 0]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n      matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\"> {{eventDesc.event.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">{{eventDesc.event.rank}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">{{eventDesc.title}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"desc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        <div [innerHTML]=\\\"eventDesc.shortDesc | safehtml\\\"></div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"startDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.START_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        {{eventDesc.event.startDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"endDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.END_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        {{eventDesc.event.endDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/event', eventDesc.event.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(eventDesc)\\\"\\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let eventDesc; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.EVENT' | translate}}\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"event.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.LOCATION' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" [(ngModel)]=\\\"event.location\\\" name=\\\"location\\\"\\r\\n              #location=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && location.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"event.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.STATUS' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"20\\\" fxFlex.lg=\\\"20\\\" fxFlex.xl=\\\"20\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.START_DATE' | translate}}</mat-label><br />\\r\\n            <input matInput [matDatepicker]=\\\"beginDatePicker\\\" class=\\\"form-control\\\" id=\\\"beginDate\\\"\\r\\n              [(ngModel)]=\\\"event.beginDate\\\" name=\\\"beginDate\\\" #beginDate=\\\"ngModel\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"beginDatePicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #beginDatePicker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"HH\\\" id=\\\"beginHr\\\" name=\\\"beginHr\\\" [(ngModel)]=\\\"event.beginHour\\\" #beginHrs=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"hourSelectionChange($event)\\\"  required>\\r\\n              <mat-option *ngFor=\\\"let hr of hours\\\" [value]=\\\"hr\\\">\\r\\n                {{hr}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"2\\\" fxFlex.lg=\\\"2\\\" fxFlex.xl=\\\"2\\\" class=\\\"p-1\\\"></div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"MM\\\" id=\\\"beginMn\\\" name=\\\"beginMn\\\" [(ngModel)]=\\\"event.beginMinute\\\" #beginMn=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"minuteSelectionChange($event)\\\" required>\\r\\n              <mat-option *ngFor=\\\"let minute of minutes\\\" [value]=\\\"minute\\\">\\r\\n                {{minute}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"10\\\" fxFlex.lg=\\\"10\\\" fxFlex.xl=\\\"10\\\" class=\\\"p-1\\\"></div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"20\\\" fxFlex.lg=\\\"20\\\" fxFlex.xl=\\\"20\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n            <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" id=\\\"endDate\\\"\\r\\n              [(ngModel)]=\\\"event.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"HH\\\" id=\\\"endHr\\\" name=\\\"endHr\\\" [(ngModel)]=\\\"event.endHour\\\" #endHrs=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"hourSelectionChange($event)\\\"  required>\\r\\n              <mat-option *ngFor=\\\"let hr of hours\\\" [value]=\\\"hr\\\">\\r\\n                {{hr}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"2\\\" fxFlex.lg=\\\"2\\\" fxFlex.xl=\\\"2\\\" class=\\\"p-1\\\"></div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"MM\\\" id=\\\"endMn\\\" name=\\\"endMn\\\" [(ngModel)]=\\\"event.endMinute\\\" #endMn=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"minuteSelectionChange($event)\\\" required>\\r\\n              <mat-option *ngFor=\\\"let minute of minutes\\\" [value]=\\\"minute\\\">\\r\\n                {{minute}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label>{{'COMMON.USER' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER' | translate }}\\\" id=\\\"user\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"user\\\" [(ngModel)]=\\\"event.coordinator\\\" #user=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let u of activeUsers\\\" [value]=\\\"u\\\">\\r\\n              {{u.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n      <mat-tab-group>\\r\\n        <mat-tab label=\\\"{{'COMMON.TITLE' | translate}} - {{flag.name}}\\\"\\r\\n          *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\" [(ngModel)]=\\\"event.eventDescs[i].title\\\"\\r\\n                name=\\\"title{{i}}\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <p>\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n            </p>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"description{{i}}\\\" [(ngModel)]=\\\"event.eventDescs[i].description\\\"\\r\\n              name=\\\"description{{i}}\\\" #description=\\\"ngModel\\\" required>\\r\\n            </quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n        <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n            class=\\\"text-muted mx-3\\\">(max: 25 images)</span></p>\\r\\n        <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"25\\\" fileAccept=\\\"image/*\\\"\\r\\n          [linkEnabled]=\\\"false\\\" multiple>\\r\\n        </input-file>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</form>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/faq', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"language\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.LANGUAGE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Question Column -->\\r\\n    <ng-container matColumnDef=\\\"question\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.QUESTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">{{faq.question}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Answer Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"answer\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.ANSWER' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.answer}} </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <!-- Question Column -->\\r\\n    <ng-container matColumnDef=\\\"yesCount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.YES' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">{{faq.yesCount}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Answer Column -->\\r\\n    <ng-container matColumnDef=\\\"noCount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NO' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.noCount}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">\\r\\n        <a [routerLink]=\\\"['/account/faq', faq.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(faq)\\\" \\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let faq; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\"> \\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> Total {{'COMMON.YES' | translate}}:</mat-label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        <mat-label> {{faq.yesCount}}</mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> Total {{'COMMON.NO' | translate}}:</mat-label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        <mat-label> {{faq.noCount}}</mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.QUESTION' | translate}}</mat-label>\\r\\n          <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"question\\\" [(ngModel)]=\\\"faq.question\\\" name=\\\"question\\\" \\r\\n            #question=\\\"ngModel\\\" required></textarea>\\r\\n          <mat-error *ngIf=\\\"f.submitted && question.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> {{'COMMON.ANSWER' | translate}}<font color=\\\"white\\\">*</font></mat-label>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"answer\\\" [(ngModel)]=\\\"faq.answer\\\" name=\\\"answer\\\" #answer=\\\"ngModel\\\"\\r\\n          required></quill-editor>\\r\\n        <mat-error *ngIf=\\\"f.submitted && answer.invalid\\\" severity=\\\"error\\\">\\r\\n          {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field> \\r\\n<div class=\\\"table-wrapper\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Image Column -->\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property.id ]\\\" class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Remove </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> \\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button> \\r\\n        </td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table> \\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p> \\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cost\\\" [(ngModel)]=\\\"image.title\\\" name=\\\"cost\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"image.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"image.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"66\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"image.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n              <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n                  class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n              <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"100\\\" fileAccept=\\\"image/*\\\"\\r\\n                [linkEnabled]=\\\"false\\\" multiple>\\r\\n              </input-file>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let image\\\"> {{image.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{image.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n              {{image?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let image\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getImage(image.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(image)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let image; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\"> {{jobAppli.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.APPLICANT' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.firstName}} {{jobAppli.lastName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.phone}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.EMAIL' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.email}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"createDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n        {{jobAppli.createDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n       {{jobAppli.status===1?('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-appli', jobAppli.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        \\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let jobAppli; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"theme-container\\\" *ngIf=\\\"action === 'submitting'\\\">\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FIRST_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"jobAppli.firstName\\\"\\r\\n            name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && firstName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LAST_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"jobAppli.lastName\\\" name=\\\"lastName\\\"\\r\\n            #lastName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && lastName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MIDDLE_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middleName\\\" [(ngModel)]=\\\"jobAppli.middleName\\\"\\r\\n            name=\\\"middleName\\\" #middleName=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"jobAppli.phone\\\" name=\\\"phone\\\"\\r\\n            #phone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && phone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"jobAppli.email\\\" name=\\\"email\\\"\\r\\n            #email=\\\"ngModel\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-label> {{'COMMON.RESUME' | translate}} ({{'COMMON.CLICK_TO_DOWNLOAD' | translate}})</mat-label>\\r\\n        <br />\\r\\n        <a href=\\\"assets/docs/jobapplis/{{jobAppli.id}}/{{jobAppli.doc}}\\\" download>\\r\\n          <img src=\\\"assets/docs/jobapplis/{{jobAppli.id}}/{{jobAppli.doc}}\\\" style=\\\"height: 100px; width: 200px;\\\"\\r\\n            alt=\\\"{{'COMMON.RESUME' | translate}}\\\">\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.xl=\\\"100\\\" class=\\\"p-1\\\">\\r\\n        <p>\\r\\n          <mat-label> {{'COMMON.NOTES' | translate}}</mat-label>\\r\\n        </p>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"notes\\\" [(ngModel)]=\\\"jobAppli.notes\\\" name=\\\"notes\\\" #notes=\\\"ngModel\\\">\\r\\n        </quill-editor>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <br />\\r\\n</div>\\r\\n\\r\\n<div class=\\\"theme-container\\\" *ngIf=\\\"action === 'success'\\\">\\r\\n  <h2>{{'COMMON.RESUME_SUBMISSION_SUCCESS' | translate}}</h2>\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>{{'COMMON.JOB_POSTINGS' | translate}}</h2>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/job-position', 0]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n      matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\"> {{jobPositionDesc.jobPosition.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">{{jobPositionDesc.jobPosition.rank}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">{{jobPositionDesc.title}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"desc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <div [innerHTML]=\\\"jobPositionDesc.shortDesc | safehtml\\\"></div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"createDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        {{jobPositionDesc.createDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"resumeCnt\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Resume Count </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-appli-list', jobPositionDesc.jobPosition.id]\\\">\\r\\n          {{jobPositionDesc.jobAppliCnt }} \\r\\n        </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-position', jobPositionDesc.jobPosition.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(jobPositionDesc)\\\"\\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let jobPosition; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"jobPosition.rank\\\" name=\\\"rank\\\"\\r\\n          #rank=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.LOCATION' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" [(ngModel)]=\\\"jobPosition.location\\\" name=\\\"location\\\"\\r\\n          #location=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && location.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field> \\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"jobPosition.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.STATUS' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n  </div>\\r\\n  <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.TITLE' | translate}} - {{flag.name}}\\\"\\r\\n      *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\"\\r\\n            [(ngModel)]=\\\"jobPosition.jobPositionDescs[i].title\\\" name=\\\"title{{i}}\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div fxFlex=\\\"5\\\"></div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <p>\\r\\n          <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n        </p>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"description{{i}}\\\"\\r\\n          [(ngModel)]=\\\"jobPosition.jobPositionDescs[i].description\\\" name=\\\"description{{i}}\\\" #description=\\\"ngModel\\\"\\r\\n          required>\\r\\n        </quill-editor>\\r\\n        <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n          {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</form>\";","export default \"\\r\\n<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.MEETING_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"meetingDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"meetingDatePicker\\\" [(ngModel)]=\\\"meetingReport.meetingDate\\\"\\r\\n                name=\\\"meetingDatePicker\\\" #meetingDatePicker=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"meetingDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #meetingDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.AUTHOR' | translate}}</mat-label><br />\\r\\n              <mat-select placeholder=\\\"{{'COMMON.AUTHOR' | translate }}\\\" id=\\\"author\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n                  name=\\\"author\\\" [(ngModel)]=\\\"meetingReport.author\\\" #author=\\\"ngModel\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let user of activeUsers\\\" [value]=\\\"user\\\">\\r\\n                    {{user.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"f.submitted && author.invalid\\\" severity=\\\"error\\\">\\r\\n                    {{'VALIDATION.REQUIRED' | translate }}\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"meetingReport.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                  {{ 'COMMON.STATUS' | translate }}\\r\\n              </mat-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex=\\\"50\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n                  <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"meetingReport.meetingReportDescs[i].title\\\" \\r\\n                    name=\\\"name{{i}}\\\" required>\\r\\n              </mat-form-field>\\r\\n              <div fxFlex=\\\"5\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}} - {{flag.name}}</mat-label>\\r\\n          <quill-editor class=\\\"form-control\\\" id=\\\"message{{i}}\\\" [(ngModel)]=\\\"meetingReport.meetingReportDescs[i].message\\\" \\r\\n          name=\\\"message{{i}}\\\" required></quill-editor>\\r\\n        \\r\\n          <br/>\\r\\n          <br/>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-tab>\\r\\n\\r\\n    \\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n       <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"table-wrapper\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"meetingDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.MEETING_DATE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.meetingReport.meetingDate | date: 'mediumDate'}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.title}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"author\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AUTHOR' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.authorName}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Status Column -->\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\">\\r\\n                {{meetingReportDesc?.meetingReport?.status === 1 ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(meetingReportDesc.meetingReport.id)\\\" \\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n              </button>\\r\\n              &nbsp;&nbsp;\\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(meetingReportDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let meetingReportDesc; columns: displayedColumns;\\\"\\r\\n              >\\r\\n            </tr>\\r\\n          </table>\\r\\n          <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n        </div>\\r\\n        <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\"\\r\\n          class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/blogs', property.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Published Column -->\\r\\n    <ng-container matColumnDef=\\\"published\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd/MM/yyyy\\\"}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Views Column -->\\r\\n    <ng-container matColumnDef=\\\"views\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Rating Column -->\\r\\n    <ng-container matColumnDef=\\\"rating\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Rating </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.ratingsCount}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\">\\r\\n        <a [routerLink]=\\\"['/account/my-articles', property.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"Edit Article\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/news', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"><img [src]=\\\"'assets/images/news/' + news.id + '/'+news.fileNames[0]\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"lang\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"><a [routerLink]=\\\"['/blogs', news.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{news.shortTitle}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Publication Date time Column -->\\r\\n    <ng-container matColumnDef=\\\"publicationDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PUBLISHED' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.publicationDatetime | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\">\\r\\n        <a [routerLink]=\\\"['/account/news', news.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(news)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let news; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.ARTICLE' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\" *ngIf=\\\"flag\\\">\\r\\n            <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n              <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n              <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n            </a>\\r\\n            <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n              <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n                  <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                    class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n                </button>\\r\\n              </span>\\r\\n            </mat-menu>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"news.title\\\" name=\\\"title\\\"\\r\\n                #title=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && title.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\"></div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.AUTHOR' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"authorText\\\" [(ngModel)]=\\\"news.authorText\\\" name=\\\"authorText\\\"\\r\\n                #authorText=\\\"ngModel\\\"> \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"news.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ENABLE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"news.featured\\\" name=\\\"featured\\\" #featured=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.FEATURED' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            {{ 'COMMON.RATING' | translate }}\\r\\n            <app-rating [ratingsCount]=\\\"news.ratingCount\\\" [ratingsValue]=\\\"news.rating\\\">\\r\\n            </app-rating>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            {{ 'COMMON.VIEWS' | translate }}\\r\\n            <button mat-fab color=\\\"accent\\\">{{news?.viewCount}} </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <mat-label> {{'COMMON.CONTENT' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor [styles]=\\\"{height: '450px'}\\\"  class=\\\"form-control\\\" id=\\\"content\\\" [(ngModel)]=\\\"news.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\"\\r\\n            required></quill-editor>\\r\\n          <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n          <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"\\r\\n            [linkEnabled]=\\\"false\\\" multiple>\\r\\n          </input-file>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"{{'COMMON.VIDEO' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.VIDEO' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">({{'COMMON.YOUTUBE_LINK'|translate}})</span></p>\\r\\n          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewsVideo()\\\" matTooltip=\\\"Add New NewsVideo\\\"\\r\\n            matTooltipPosition=\\\"after\\\">\\r\\n            <mat-icon>add_circle</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div id=\\\"newsVideos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">\\r\\n          <div *ngFor=\\\"let newsVideo of news.videos; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n            <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n            <div fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                <mat-label>{{'COMMON.NAME' | translate}}</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'COMMON.NAME' | translate}}\\\" [(ngModel)]=\\\"newsVideo.name\\\"\\r\\n                  name=\\\"newsVideoName + {{i}}\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                <mat-label>{{'COMMON.LINK' | translate}}</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'COMMON.LINK_TO_VIDEO' | translate}}\\\" [(ngModel)]=\\\"newsVideo.link\\\"\\r\\n                  name=\\\"newsVideoLink + {{i}}\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n              <button type=\\\"button\\\" mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteNewsVideo(newsVideo.id, i)\\\"\\r\\n                matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\">\\r\\n                <mat-icon>cancel</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"\\r\\n\\r\\n\\r\\n<mat-card *ngFor=\\\"let pollQuestionDesc of pollQuestionDescs\\\">\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    {{pollQuestionDesc.description}}\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(pollQuestionDesc.pollQuestion.id)\\\" type=\\\"button\\\"\\r\\n        matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">edit</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n          matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"90\\\" fxFlex.lg=\\\"90\\\" fxFlex.xl=\\\"90\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n        </button> \\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n      <div *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n        <mat-error *ngIf=\\\"f.submitted && (pollQuestion.pollQuestionDescs[i].description === undefined \\r\\n          || pollQuestion.pollQuestionDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n            {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n        </mat-error>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let pollChoice of pollQuestion.pollChoices;\\\">\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollChoice.pollChoiceDescs[i].description === undefined \\r\\n            || pollChoice.pollChoiceDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'COMMON.CHOICE' | translate }} - {{ i + 1}} : {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n          </mat-error>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>{{'COMMON.POSITION' | translate }}</mat-label>\\r\\n      <mat-select placeholder=\\\"{{'COMMON.POSITION' | translate }}\\\" id=\\\"position\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n        name=\\\"position\\\" [(ngModel)]=\\\"pollQuestion.position\\\" #position=\\\"ngModel\\\" required>\\r\\n        <mat-option *ngFor=\\\"let posDesc of activePositions\\\" [value]=\\\"posDesc.position\\\">\\r\\n          {{posDesc.name}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"f.submitted && position.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n      <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n      <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"pollQuestion.rank\\\" name=\\\"rank\\\" #rank=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel *ngFor=\\\"let flag of appService.flags; let i = index\\\" \\r\\n                      (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n      {{'COMMON.CLICK_HERE_FOR' | translate}} - {{flag.name}}\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description{{i}}\\\" \\r\\n          [(ngModel)]=\\\"pollQuestion.pollQuestionDescs[i].description\\\" name=\\\"description{{i}}\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollQuestion.pollQuestionDescs[i].description === undefined \\r\\n            || pollQuestion.pollQuestionDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n      </mat-form-field>\\r\\n      <div fxFlex=\\\"5\\\"></div>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion> \\r\\n\\r\\n\\r\\n<br/>\\r\\n<br/>\\r\\n</form>\\r\\n\\r\\n<fieldset>\\r\\n  <legend>\\r\\n    <h5 style=\\\"color:#00008b\\\">{{'COMMON.CHOICES' | translate}}</h5>\\r\\n  </legend>\\r\\n  \\r\\n  <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let pollChoice of pollQuestion.pollChoices;\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"pollChoice.rank\\\" name=\\\"rank\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollChoice.rank === undefined)\\\" severity=\\\"error\\\">\\r\\n                {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label>{{'COMMON.USER' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER' | translate }}\\\" id=\\\"user\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"user\\\" [(ngModel)]=\\\"pollChoice.user\\\" #user=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let u of activeUsers\\\" [value]=\\\"u\\\">\\r\\n              {{u.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <mat-card>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n            <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description{{i}}\\\" \\r\\n            [(ngModel)]=\\\"pollChoice.pollChoiceDescs[i].description\\\" name=\\\"description{{i}}\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && (pollChoice.pollChoiceDescs[i].description === undefined \\r\\n              || pollChoice.pollChoiceDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n                {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addChoice()\\\" type=\\\"button\\\"\\r\\n        matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <br/>\\r\\n  <br/>\\r\\n</fieldset>\\r\\n\\r\\n\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n            autocomplete=\\\"off\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\" type=\\\"button\\\"\\r\\n          matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n      <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-wrapper\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        <!-- Name Column -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"pollTypeDescName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.POLL_TYPE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\"> {{pollDesc.pollTypeDescName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\"> {{pollDesc.title}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Status Column -->\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\">\\r\\n            <span *ngIf=\\\"pollDesc.status === 0\\\" style=\\\"color: #ff0000;\\\">{{'COMMON.INACTIVE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 1\\\" style=\\\"color: #283593;\\\">{{'COMMON.ACTIVE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 2\\\" style=\\\"color: green;\\\">{{'COMMON.CLOSE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 5\\\" style=\\\"color: green;\\\">{{'COMMON.TERMINATE'|translate}}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(pollDesc.poll.id)\\\"\\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(pollDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let pollDesc; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n    </div>\\r\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\" *ngIf=\\\"poll\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n            matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"75\\\" fxFlex.lg=\\\"75\\\" fxFlex.xl=\\\"75\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n          <div *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n            <mat-error *ngIf=\\\"f.submitted && (poll.pollDescs[i].description === undefined \\r\\n                  || poll.pollDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.POLL_TYPE' | translate}}</mat-label><br />\\r\\n            <mat-select placeholder=\\\"{{'COMMON.POLL_TYPE' | translate }}\\\" id=\\\"pollType\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n              name=\\\"pollType\\\" [(ngModel)]=\\\"poll.pollType\\\" #pollType=\\\"ngModel\\\" required>\\r\\n              <mat-option *ngFor=\\\"let ptd of pollTypes\\\" [value]=\\\"ptd.pollType\\\">\\r\\n                {{ptd.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"f.submitted && pollType.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\"></div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.STATUS' | translate}}: </mat-label><br />\\r\\n          <mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\" [(ngModel)]=\\\"poll.status\\\"\\r\\n            (change)=\\\"onToggleGroupChange($event)\\\">\\r\\n            <mat-button-toggle [value]=\\\"0\\\">\\r\\n              {{'COMMON.INACTIVE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"1\\\">\\r\\n              {{'COMMON.ACTIVE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"2\\\">\\r\\n              {{'COMMON.CLOSE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"5\\\">\\r\\n              {{'COMMON.TERMINATE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n          </mat-button-toggle-group>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel *ngFor=\\\"let flag of appService.flags; let i = index\\\" (opened)=\\\"panelOpenState = true\\\"\\r\\n          (closed)=\\\"panelOpenState = false\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{'COMMON.CLICK_HERE_FOR' | translate}} - {{flag.name}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].title\\\"\\r\\n                name=\\\"title{{i}}\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.BEGIN_NOTE' | translate}}</mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"beginNote{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].description\\\"\\r\\n              name=\\\"beginNote{{i}}\\\" required></quill-editor>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.END_NOTE' | translate}}</mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"endNote{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].endNote\\\"\\r\\n              name=\\\"endNote{{i}}\\\" required></quill-editor>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.QUESTIONS' | translate}}\\\" *ngIf=\\\"poll && poll.id > 0\\\">\\r\\n    <app-pollquestion-component></app-pollquestion-component>\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n</mat-tab-group>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n         <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n            matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n         </button>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n         <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n          </button> \\r\\n        </div>\\r\\n         <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n         <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   \\r\\n   <div fxLayout=\\\"row\\\">\\r\\n      <div fxFlex=\\\"33\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n         <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n            <mat-label> {{'COMMON.NAME' | translate}} - {{flag.name}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"pollType.pollTypeDescs[i].name\\\" \\r\\n               name=\\\"name{{i}}\\\" required>\\r\\n         </mat-form-field>\\r\\n         <div fxFlex=\\\"5\\\"></div>\\r\\n      </div>\\r\\n   </div>\\r\\n\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n         <mat-slide-toggle [(ngModel)]=\\\"pollType.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.STATUS' | translate }}\\r\\n         </mat-slide-toggle>\\r\\n      </div>\\r\\n   </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<fieldset>\\r\\n  <legend><h5 style=\\\"color:#00008b\\\">{{'COMMON.LIST' | translate}}</h5></legend>\\r\\n\\r\\n  <div class=\\\"table-wrapper\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\"> {{pollTypeDesc.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Status Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\">\\r\\n          {{pollTypeDesc?.pollType?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(pollTypeDesc.pollType.id)\\\" \\r\\n         matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n          class=\\\"remove\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        &nbsp;&nbsp;\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(pollTypeDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n          class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let pollTypeDesc; columns: displayedColumns;\\\"\\r\\n        >\\r\\n      </tr>\\r\\n    </table>\\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n  </div>\\r\\n  <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</fieldset>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex=\\\"33\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.NAME' | translate}} - {{flag.name}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"position.positionDescs[i].name\\\"\\r\\n          name=\\\"name{{i}}\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div fxFlex=\\\"5\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"33\\\" fxFlex.lg=\\\"33\\\" fxFlex.xl=\\\"33\\\" class=\\\"p-3\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"position.rank\\\" name=\\\"rank\\\" #rank=\\\"ngModel\\\"\\r\\n          required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"position.leadership\\\" name=\\\"leadership\\\" #leadership=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.LEADERSHIP' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"position.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.STATUS' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<fieldset>\\r\\n  <legend>\\r\\n    <h5 style=\\\"color:#00008b\\\">{{'COMMON.LIST' | translate}}</h5>\\r\\n  </legend>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n          autocomplete=\\\"off\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n    <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-wrapper\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\"> {{positionDesc.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Description Column -->\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\"> {{positionDesc.description}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Status Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\">\\r\\n          {{positionDesc?.position?.status === 1 ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(positionDesc.position.id)\\\"\\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          &nbsp;&nbsp;\\r\\n          <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(positionDesc)\\\"\\r\\n            matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let positionDesc; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table>\\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n  </div>\\r\\n  <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</fieldset>\";","export default \"<form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"onInfoFormSubmit(infoForm.value)\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Account details</h2>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Name</mat-label>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.name.errors?.required\\\">Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.name.hasError('minlength')\\\">Name isn't long enough, minimum of 3\\r\\n                    characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Phone</mat-label>\\r\\n                <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required onlyNumber autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Current Password</mat-label>\\r\\n                <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" type=\\\"password\\\"\\r\\n                    minlength=\\\"6\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.currentPassword.errors?.required\\\">Current Password is required\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.currentPassword.hasError('minlength')\\\">Current Password isn't\\r\\n                    long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>New Password</mat-label>\\r\\n                <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\"\\r\\n                    required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.newPassword.errors?.required\\\">New Password is required\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.newPassword.hasError('minlength')\\\">New Password isn't long\\r\\n                    enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Confirm New Password</mat-label>\\r\\n                <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\"\\r\\n                    required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.confirmNewPassword.errors?.required\\\">Confirm New Password is\\r\\n                    required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\\\">Passwords do\\r\\n                    not match</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Social media</h2>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Organization</mat-label>\\r\\n                <input matInput placeholder=\\\"organization\\\" formControlName=\\\"organization\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Facebook</mat-label>\\r\\n                <input matInput placeholder=\\\"facebook\\\" formControlName=\\\"facebook\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Twitter</mat-label>\\r\\n                <input matInput placeholder=\\\"twitter\\\" formControlName=\\\"twitter\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Linkedin</mat-label>\\r\\n                <input matInput placeholder=\\\"linkedin\\\" formControlName=\\\"linkedin\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Instagram</mat-label>\\r\\n                <input matInput placeholder=\\\"instagram\\\" formControlName=\\\"instagram\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Website</mat-label>\\r\\n                <input matInput placeholder=\\\"website\\\" formControlName=\\\"website\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"mb-3\\\">\\r\\n                <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\"\\r\\n                    fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Short Resume</h2>\\r\\n            <quill-editor formControlName=\\\"shortResume\\\" ></quill-editor>\\r\\n\\r\\n\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Long Resume</h2>\\r\\n            <quill-editor formControlName=\\\"longResume\\\" ></quill-editor>\\r\\n\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Save</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/project', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> N<sup>o</sup> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.id|number:'3.0'}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"><a [routerLink]=\\\"['/projects', project.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{project.title}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- budget Column -->\\r\\n    <ng-container matColumnDef=\\\"budget\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.BUDGET' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.budget}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Projected Start Date Column -->\\r\\n    <ng-container matColumnDef=\\\"owner\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AUTHOR' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\">\\r\\n        {{project.user? (project.user.firstName  +' '+ project.user.lastName):'' }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Start Date Column -->\\r\\n    <ng-container matColumnDef=\\\"createDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.SUBMITTED_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.createDate |date:'longDate'}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Projected End Date Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\">\\r\\n\\r\\n        <span *ngIf=\\\"project.status === 0\\\" style=\\\"color: #ff0000;\\\">{{'COMMON.SUBMITTED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 1\\\" style=\\\"color: #283593;\\\">{{'COMMON.IN_REVIEW'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 5\\\" style=\\\"color: green;\\\">{{'COMMON.APPROVED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 10\\\" style=\\\"color: green;\\\">{{'COMMON.IN_PROGRESS'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 90\\\" style=\\\"color: green;\\\">{{'COMMON.COMPLETED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 99\\\" style=\\\"color: red;\\\">{{'COMMON.REJECTED'|translate}}</span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let project; columns: displayedColumns;\\\" [routerLink]=\\\"['/account/project', project.id]\\\">\\r\\n    </tr>\\r\\n\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.PROJECT' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"project.title\\\" name=\\\"title\\\"\\r\\n                #title=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && title.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.BUDGET' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"budget\\\" [(ngModel)]=\\\"project.budget\\\" name=\\\"budget\\\"\\r\\n                #budget=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && budget.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n          <mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\" [(ngModel)]=\\\"project.status\\\"\\r\\n            (change)=\\\"onToggleGroupChange($event)\\\">\\r\\n            <mat-button-toggle [value]=\\\"0\\\">\\r\\n              {{'COMMON.SUBMITTED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"1\\\">\\r\\n              {{'COMMON.IN_REVIEW' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"5\\\">\\r\\n              {{'COMMON.APPROVED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"10\\\">\\r\\n              {{'COMMON.IN_PROGRESS' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"90\\\">\\r\\n              {{'COMMON.COMPLETED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"99\\\">\\r\\n              {{'COMMON.REJECTED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n          </mat-button-toggle-group>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <mat-label> {{'COMMON.DESCRIPTION' | translate}}\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"project.description\\\" name=\\\"description\\\"\\r\\n              #description=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.PROJECTED_START_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"projectedStartDatePicker\\\" class=\\\"form-control\\\" id=\\\"projectedStartDate\\\"\\r\\n                [(ngModel)]=\\\"project.projectedStartDate\\\" name=\\\"projectedStartDate\\\" #projectedStartDate=\\\"ngModel\\\"\\r\\n                required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"projectedStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #projectedStartDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.PROJECTED_END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"projectedEndDatePicker\\\" class=\\\"form-control\\\" id=\\\"projectedEndDate\\\"\\r\\n                [(ngModel)]=\\\"project.projectedEndDate\\\" name=\\\"projectedEndDate\\\" #projectedEndDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"projectedEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #projectedEndDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.START_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"startDatePicker\\\" class=\\\"form-control\\\" id=\\\"startDate\\\"\\r\\n                [(ngModel)]=\\\"project.startDate\\\" name=\\\"startDate\\\" #startDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" id=\\\"endDate\\\"\\r\\n                [(ngModel)]=\\\"project.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.EXISTING' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"existant\\\" [(ngModel)]=\\\"project.existant\\\" name=\\\"existant\\\"\\r\\n              #existant=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && existant.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.OBJECTIF' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"objectif\\\" [(ngModel)]=\\\"project.objectif\\\" name=\\\"objectif\\\"\\r\\n              #objectif=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && objectif.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.DURATION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"duration\\\" [(ngModel)]=\\\"project.duration\\\" name=\\\"duration\\\"\\r\\n              #duration=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && duration.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.BUDGET_ESTIMATION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"budgetLine\\\" [(ngModel)]=\\\"project.budgetLine\\\" name=\\\"budgetLine\\\"\\r\\n              #budgetLine=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && budgetLine.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.SPONSORS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"sponsors\\\" [(ngModel)]=\\\"project.sponsors\\\" name=\\\"sponsors\\\"\\r\\n              #sponsors=\\\"ngModel\\\"></quill-editor>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n          <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"\\r\\n            [linkEnabled]=\\\"false\\\" multiple>\\r\\n          </input-file>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.BEGIN_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"beginDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"beginDate\\\" [(ngModel)]=\\\"publicity.beginDate\\\" name=\\\"beginDate\\\" #beginDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"beginDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #beginDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"endDate\\\" [(ngModel)]=\\\"publicity.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.COST' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cost\\\" [(ngModel)]=\\\"publicity.cost\\\" name=\\\"cost\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"publicity.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"link\\\" [(ngModel)]=\\\"publicity.link\\\" name=\\\"link\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"publicity.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"66\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"publicity.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n              <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n                  class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n              <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\"\\r\\n                [linkEnabled]=\\\"false\\\" multiple>\\r\\n              </input-file>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"url\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.URL' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.link}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"beginDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.BEGIN_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.beginDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"endDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.END_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.endDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"cost\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.COST' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.cost}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n              {{publicity?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getPublicity(publicity.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(publicity)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let publicity; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of appService.flags\\\" (click)=\\\"getRegulation(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"regulation.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\" required></quill-editor>\\r\\n      <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n        {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n  <mat-tab label=\\\"{{'COMMON.SECTION' | translate}}\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && saveSection()\\\" #f=\\\"ngForm\\\" validate>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </a>\\r\\n          <br />\\r\\n          <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n            <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n            <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n            <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n          </a>\\r\\n          <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n            <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n              <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n                <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n              </button>\\r\\n            </span>\\r\\n          </mat-menu>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"section.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\"> \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"section.name\\\" name=\\\"name\\\"\\r\\n              #name=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"section.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.ENABLE' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"section.showInMenu\\\" name=\\\"showInMenu\\\" #showInMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.SHOW_IN_MENU' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"section.title\\\" name=\\\"title\\\"\\r\\n              #title=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"section.showInMenu\\\">\\r\\n            <mat-label>Menu</mat-label>\\r\\n            <mat-select placeholder=\\\"Menu\\\" id=\\\"menu\\\" name=\\\"menu\\\" [(ngModel)]=\\\"section.menu\\\" #menu=\\\"ngModel\\\">\\r\\n              <mat-option *ngFor=\\\"let menu of menus\\\" [value]=\\\"menu.name\\\">\\r\\n                {{menu.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor [styles]=\\\"{height: '450px'}\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"section.description\\\" #description=\\\"ngModel\\\">\\r\\n          </quill-editor>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"sectionImages\\\" name=\\\"sectionImage\\\" #sectionImage=\\\"ngModel\\\" fileLimit=\\\"1\\\"\\r\\n            fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img [src]=\\\"'assets/images/sections/'+section.id+'/'+section.picture\\\" [style.width.px]=\\\"150\\\"\\r\\n              class=\\\"d-block\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button> </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.SECTION_ITEM' | translate}}\\\" *ngIf=\\\"section.id>0\\\">\\r\\n\\r\\n    <mat-tab-group [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n      <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"addSectionItem()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"table-wrapper\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n            <!-- ID Column -->\\r\\n            <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.id}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Image Column -->\\r\\n            <ng-container matColumnDef=\\\"image\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'COMMON.ICON' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\">\\r\\n                <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xsm\\\">{{sectionItem.picture}}</mat-icon>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Published Column -->\\r\\n            <ng-container matColumnDef=\\\"lang\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.language}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Title Column -->\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Actions Column -->\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\">\\r\\n                <a (click)=\\\"edit(sectionItem)\\\" mat-icon-button color=\\\"primary\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </a>\\r\\n                &nbsp;&nbsp;\\r\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(sectionItem)\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let sectionItem; columns: displayedColumns;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n          <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n        <form name=\\\"fform\\\" (ngSubmit)=\\\"ff.form.valid && saveSectionItem()\\\" #ff=\\\"ngForm\\\" validate>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                </mat-label>\\r\\n                <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title2\\\" [(ngModel)]=\\\"sectionItem.title\\\"\\r\\n                  name=\\\"title2\\\" #title2=\\\"ngModel\\\" required>\\r\\n                <mat-error *ngIf=\\\"ff.submitted && title2.invalid\\\" severity=\\\"error\\\">\\r\\n                  {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label> {{'COMMON.NAME' | translate}}\\r\\n                </mat-label>\\r\\n                <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title3\\\" [(ngModel)]=\\\"sectionItem.name\\\"\\r\\n                  name=\\\"title3\\\" #title3=\\\"ngModel\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Ico</mat-label>\\r\\n                <mat-select placeholder=\\\"Select Icon...\\\" [(ngModel)]=\\\"sectionItem.picture\\\" name=\\\"icon\\\">\\r\\n                  <mat-option *ngFor=\\\"let icon of icons\\\" [value]=\\\"icon\\\">\\r\\n                    <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xsm\\\">{{icon}}</mat-icon> {{icon}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <br />\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"sectionItem.status\\\" name=\\\"status2\\\" #status2=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.ENABLE' | translate }}\\r\\n              </mat-slide-toggle>\\r\\n              <br />\\r\\n              <!--\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"sectionItem.showInMenu\\\" name=\\\"showInMenu2\\\" #showInMenu2=\\\"ngModel\\\"\\r\\n                class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.SHOW_IN_MENU' | translate }}\\r\\n              </mat-slide-toggle>     \\r\\n              -->\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank2\\\" [(ngModel)]=\\\"sectionItem.rank\\\" name=\\\"rank2\\\"\\r\\n              #rank2=\\\"ngModel\\\"> \\r\\n          </mat-form-field>         \\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n              <mat-label>{{'COMMON.SUMMARY' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <quill-editor id=\\\"summary\\\" name=\\\"summary\\\" [(ngModel)]=\\\"sectionItem.summary\\\" #summary=\\\"ngModel\\\">\\r\\n              </quill-editor>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n              <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <quill-editor id=\\\"description2\\\" name=\\\"description2\\\" [(ngModel)]=\\\"sectionItem.description\\\"\\r\\n                #description2=\\\"ngModel\\\">\\r\\n              </quill-editor>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                  <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                  <mat-icon>save</mat-icon>\\r\\n                </button> </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n                <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/sections', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n  <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"><img [src]=\\\"'assets/images/sections/'+section.id+'/'+section.picture\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Published Column -->\\r\\n    <ng-container matColumnDef=\\\"lang\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Code </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\">\\r\\n        <a [routerLink]=\\\"['/account/sections', section.id]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        &nbsp;&nbsp;\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(section)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let section; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.POLL_TYPE' | translate}}\\\">\\r\\n    <app-pollTypes-component></app-pollTypes-component>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.POSITION' | translate}}\\\">\\r\\n    <app-positions-component></app-positions-component>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\";","export default \"<mat-tab-group [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n  <mat-tab label=\\\"{{'COMMON.SLIDER' | translate}}\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && saveSlider()\\\" #f=\\\"ngForm\\\" validate>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <!-- <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </a>\\r\\n          <br /> -->\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"slider.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\"> \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"slider.name\\\" name=\\\"name\\\"\\r\\n              #name=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"sliderImages\\\" name=\\\"sliderImage\\\" #sliderImage=\\\"ngModel\\\" fileLimit=\\\"1\\\"\\r\\n            fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img [src]=\\\"'assets/images/sliders/'+slider.id+'/'+slider.picture\\\" [style.width.px]=\\\"150\\\"\\r\\n              class=\\\"d-block\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"slider.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.ENABLE' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button> </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  </mat-tab-group>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/sections', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n  <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"><img [src]=\\\"'assets/images/sliders/'+slider.id+'/'+slider.picture\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n     <!-- Rank Column -->\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.rank}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\">\\r\\n        <a [routerLink]=\\\"['/account/sliders', slider.id]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        &nbsp;&nbsp;\\r\\n        <!-- <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(section)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button> -->\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let section; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of appService.flags\\\" (click)=\\\"getStatusText(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"statusText.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\" required></quill-editor>\\r\\n      <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n        {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<a mat-raised-button routerLink=\\\"/account/online-payment\\\" color=\\\"accent\\\" \\r\\n                        class=\\\"w-100\\\">{{'COMMON.PAY_ONLINE' | translate }}</a>\\r\\n \\r\\n \\r\\n <mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n   <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <a (click)=\\\"edit(undefined)\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-wrapper\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        \\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Date Column -->\\r\\n        <ng-container matColumnDef=\\\"tranDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DATE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.tranDate | date : 'mediumDate' : '' : translate.currentLang}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- project Column -->\\r\\n        <ng-container matColumnDef=\\\"projectTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PROJECT' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.projectTitle}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- member Column -->\\r\\n        <ng-container matColumnDef=\\\"memberName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.MEMBER' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.memberName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- amount Column -->\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AMOUNT' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.amount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(transaction.id)\\\" \\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(transaction)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let transaction; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n    <app-transaction-component (saveEvent)=\\\"saveEventListener($event)\\\"></app-transaction-component>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\";","export default \"  <div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" *ngIf=\\\"action === 'processing'\\\" #stepper>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.PROJECT'|translate}}</ng-template>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_PROJECT'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentProjectOption\\\"\\r\\n              matInput [matAutocomplete]=\\\"projectOptionAuto\\\" [(ngModel)]=\\\"currentProjectOption\\\" required \\r\\n              (ngModelChange)=\\\"filterProjectOptions(currentProjectOption)\\\">\\r\\n            <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n            <mat-autocomplete id=\\\"projOption\\\" #projectOptionAuto=\\\"matAutocomplete\\\">\\r\\n              <mat-option *ngFor=\\\"let pOption of filteredProjectOptions \\\" [value]=\\\"pOption.title\\\" \\r\\n                (onSelectionChange)=\\\"transaction.project = pOption;\\\">\\r\\n                {{pOption.title}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n              [disabled]=\\\"!transaction.project\\\" type=\\\"button\\\">Next</button>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n    </mat-step>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.AMOUNT'|translate}}</ng-template>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"amount\\\" [(ngModel)]=\\\"transaction.amount\\\" name=\\\"amount\\\"\\r\\n              #amount=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"amount.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mb-3\\\">\\r\\n              <mat-label>{{'COMMON.CURRENCY' | translate}}</mat-label>\\r\\n              <mat-select placeholder=\\\"{{'COMMON.SELECT' | translate}}\\\" [compareWith]=\\\"compareObjects\\\" id=\\\"currency\\\"\\r\\n                name=\\\"currency\\\" [(ngModel)]=\\\"transaction.currencyCode\\\">\\r\\n                <mat-option [value]=\\\"'USD'\\\">\\r\\n                  USD\\r\\n                </mat-option>\\r\\n                <mat-option [value]=\\\"'XOF'\\\">\\r\\n                  CFA\\r\\n                </mat-option>\\r\\n                <mat-option [value]=\\\"'EUR'\\\">\\r\\n                  EUR\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n            [disabled]=\\\"amount.invalid\\\" type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>{{'COMMON.PAY'|translate}}</ng-template>\\r\\n\\r\\n      <mat-radio-group [(ngModel)]=\\\"transaction.paymentMethod\\\">\\r\\n        <mat-radio-button  value=\\\"CARD\\\" >\\r\\n          {{'COMMON.CREDIT_CARD'|translate}}\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button  value=\\\"TMONEY\\\">\\r\\n          TMoney\\r\\n        </mat-radio-button> \\r\\n        <mat-radio-button  value=\\\"FLOOZ\\\">\\r\\n          Flooz\\r\\n        </mat-radio-button> \\r\\n      </mat-radio-group> \\r\\n\\r\\n      <br/>\\r\\n      <br/>\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'CARD'\\\">\\r\\n        <form id=\\\"payment-form\\\">\\r\\n          <div id=\\\"card-element\\\"><!--Stripe.js injects the Card Element--></div>\\r\\n          <br/>\\r\\n          <br/> \\r\\n          <button id=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\r\\n            <div class=\\\"spinner hidden\\\" id=\\\"spinner\\\"></div>\\r\\n            <span id=\\\"button-text\\\">{{'COMMON.PAY'|translate}}</span>\\r\\n            <!-- <mat-icon>save</mat-icon> -->\\r\\n            <span id=\\\"order-amount\\\"></span>\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'TMONEY' && transaction.paymentMethod !== 'FLOOZ'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"transaction.phone\\\" name=\\\"phone\\\"\\r\\n            #phone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"phone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"saveTransaction()\\\">\\r\\n                <span class=\\\"mx-1 uppercase\\\">{{'COMMON.PAY' | translate}}</span>\\r\\n              </button> \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n\\r\\n      <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-spinner *ngIf=\\\"!messages && !errors\\\"> Payment processing. Please don't close ...</mat-spinner>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\"> \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}: {{transaction.project.title}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.AMOUNT' | translate}}: {{transaction.amount}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.CURRENCY' | translate}}: {{transaction.currencyCode}} </mat-label>\\r\\n        </div>\\r\\n      </div>  \\r\\n      \\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"action === 'complete'\\\">\\r\\n    <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n  </div>\\r\\n</div>  \";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MEMBER' | translate}}</mat-label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_MEMBER'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentUserOption\\\"\\r\\n            matInput [matAutocomplete]=\\\"userOptionAuto\\\" [(ngModel)]=\\\"currentUserOption\\\" required \\r\\n            (ngModelChange)=\\\"filterUserOptions(currentUserOption)\\\">\\r\\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n          <mat-autocomplete id=\\\"usOption\\\" #userOptionAuto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let uOption of filteredUserOptions \\\"  [value]=\\\"uOption.name\\\"\\r\\n              (onSelectionChange)=\\\"transaction.user = uOption;\\\">\\r\\n              {{uOption.name}}\\r\\n            </mat-option> \\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_PROJECT'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentProjectOption\\\"\\r\\n            matInput [matAutocomplete]=\\\"projectOptionAuto\\\" [(ngModel)]=\\\"currentProjectOption\\\" required \\r\\n            (ngModelChange)=\\\"filterProjectOptions(currentProjectOption)\\\">\\r\\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n          <mat-autocomplete id=\\\"projOption\\\" #projectOptionAuto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let pOption of filteredProjectOptions \\\" [value]=\\\"pOption.title\\\" \\r\\n            (onSelectionChange)=\\\"transaction.project = pOption;\\\">\\r\\n              {{pOption.title}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.DATE' | translate}}</mat-label><br />\\r\\n          <input matInput [matDatepicker]=\\\"tranDatePicker\\\" class=\\\"form-control\\\" id=\\\"tranDate\\\" [(ngModel)]=\\\"transaction.tranDate\\\"\\r\\n            name=\\\"tranDate\\\" #tranDate=\\\"ngModel\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"tranDatePicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #tranDatePicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"f.submitted && tranDate.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"amount\\\" [(ngModel)]=\\\"transaction.amount\\\" name=\\\"transaction\\\" \\r\\n            #amount=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && amount.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-radio-group id=\\\"io\\\" [(ngModel)]=\\\"transaction.io\\\" name=\\\"io\\\" #io=\\\"ngModel\\\" required>\\r\\n          <mat-radio-button [value]=\\\"0\\\">\\r\\n              {{'COMMON.CONTRIBUTION' | translate }}\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"1\\\">\\r\\n              {{'COMMON.EXPENSE' | translate }}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n        <mat-error *ngIf=\\\"f.submitted && io.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"transaction.anonymous\\\" id=\\\"anonymous\\\" name=\\\"anonymous\\\">\\r\\n          {{'COMMON.ANONYM' | translate }}\\r\\n        </mat-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\" class=\\\"p-3\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.COMMENT' | translate}}</mat-label>\\r\\n        <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" [(ngModel)]=\\\"transaction.comment\\\" name=\\\"comment\\\" \\r\\n          #comment=\\\"ngModel\\\" rows=\\\"5\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.FILTER_USERS' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/user', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"><img [src]=\\\"'assets/images/users/' + user.id + '/' + user.fileNames[0]\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"><a [routerLink]=\\\"['/blogs', user.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{user.email}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Publication Date time Column -->\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.phone}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n        <a [routerLink]=\\\"['/account/user', user.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"Edit User\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(user)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let user; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">{{'COMMON.ACCOUNT_DETAILS' | translate}}</h2>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FIRST_NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\"\\r\\n            #firstName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && firstName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LAST_NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\"\\r\\n            #lastName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && lastName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\"\\r\\n            #email=\\\"ngModel\\\" autocomplete=\\\"off\\\" required email>\\r\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid && email.errors.required\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }} </mat-error>\\r\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid && email.errors.email\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.EMAIL_INVALID' | translate }} </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"user.homePhone\\\" name=\\\"homePhone\\\"\\r\\n            #homePhone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && homePhone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-radio-group id=\\\"sex\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.sex\\\" name=\\\"sex\\\" #sex=\\\"ngModel\\\" required>\\r\\n          <mat-radio-button value=\\\"F\\\">\\r\\n            {{'COMMON.MALE' | translate }}\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button value=\\\"M\\\">\\r\\n            {{'COMMON.FEMALE' | translate }}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-label>{{'COMMON.USER_TYPE' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER_TYPE' | translate }}\\\" id=\\\"userGroup\\\" name=\\\"userGroup\\\"\\r\\n            [(ngModel)]=\\\"user.userGroup.id\\\" #userGroup=\\\"ngModel\\\" required>\\r\\n            <mat-option *ngFor=\\\"let userGroup of userGroups\\\" [value]=\\\"userGroup.id\\\">\\r\\n              {{userGroup.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"f.submitted && userGroup.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.USER_TYPE_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-label>{{'COMMON.POSITION' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.POSITION' | translate }}\\\" id=\\\"position\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"position\\\" [(ngModel)]=\\\"user.position\\\" #position=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let posDesc of activePositions\\\" [value]=\\\"posDesc.position\\\">\\r\\n              {{posDesc.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!--\\r\\n        <div ngModelGroup=\\\"passwordGroup\\\" password-matcher #passwordGroup=\\\"ngModelGroup\\\"\\r\\n          *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.PASSWORD' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n              name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && password.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.CONFIRM_PASSWORD' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" [(ngModel)]=\\\"user.confirmPassword\\\"\\r\\n              name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" autocomplete=\\\"off\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && confirmPassword.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-error *ngIf=\\\"passwordGroup.control?.errors\\\" [ngStyle]=\\\"{'color': '#ff5252'}\\\">\\r\\n            <div [hidden]=\\\"!passwordGroup.control?.errors.noMatch\\\">Passwords do not match</div>\\r\\n          </mat-error>\\r\\n        </div>\\r\\n\\r\\n      -->\\r\\n      \\r\\n        <mat-slide-toggle [(ngModel)]=\\\"user.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n          {{ 'COMMON.ENABLE' | translate }}\\r\\n        </mat-slide-toggle>\\r\\n        <br />\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">{{'COMMON.SOCIAL_MEDIA' | translate}}</h2>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.COMPANY' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" [(ngModel)]=\\\"user.companyName\\\"\\r\\n            name=\\\"companyName\\\" #companyName=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FACEBOOK' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"facebook\\\" [(ngModel)]=\\\"user.facebook\\\" name=\\\"facebook\\\"\\r\\n            #facebook=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.TWITTER' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitter\\\" [(ngModel)]=\\\"user.twitter\\\" name=\\\"twitter\\\"\\r\\n            #twitter=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LINKEDIN' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"linkedin\\\" [(ngModel)]=\\\"user.linkedin\\\" name=\\\"linkedin\\\"\\r\\n            #linkedin=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.INSTAGRAM' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"instagram\\\" [(ngModel)]=\\\"user.instagram\\\" name=\\\"instagram\\\"\\r\\n            #instagram=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.WEBSITE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"website\\\" [(ngModel)]=\\\"user.website\\\" name=\\\"website\\\"\\r\\n            #website=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br />\\r\\n        <h2 class=\\\"text-muted text-left fw-600 mb-3\\\">{{'COMMON.MY_PHOTO'|translate}}</h2>\\r\\n\\r\\n        <input-file [(ngModel)]=\\\"picture\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\"\\r\\n          [linkEnabled]=\\\"true\\\">\\r\\n        </input-file>\\r\\n      </div>\\r\\n      <!-- <mat-label> {{'COMMON.SHORT_RESUME' | translate}}</mat-label>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"shortResume\\\" [(ngModel)]=\\\"user.shortResume\\\" [maxLength]=\\\"500\\\" \\r\\n          name=\\\"shortResume\\\" #shortResume=\\\"ngModel\\\"></quill-editor>\\r\\n\\r\\n      <mat-error *ngIf=\\\"shortResume.invalid\\\" [ngStyle]=\\\"{'color': '#ff5252'}\\\">  \\r\\n        <div fxLayout=\\\"row wrap\\\">{{'VALIDATION.SHORT_RESUME_TOO_LONG' | translate}} </div> <br/>\\r\\n      </mat-error>    -->\\r\\n      <br />\\r\\n      <h2 class=\\\"text-muted text-left fw-600 mb-3\\\">\\r\\n        {{'COMMON.ABOUT_ME' | translate}} </h2>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"resume\\\" [(ngModel)]=\\\"user.resume\\\" name=\\\"resume\\\" #resume=\\\"ngModel\\\">\\r\\n      </quill-editor>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages && hasError\\\">\\r\\n      <p style=\\\"color:#ff5252\\\">{{messages}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages && !hasError\\\">\\r\\n      <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.VIDEO_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"videoDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"videoDate\\\" [(ngModel)]=\\\"video.videoDate\\\" name=\\\"videoDate\\\" #videoDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"videoDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #videoDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"video.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"video.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"link\\\" [(ngModel)]=\\\"video.link\\\" name=\\\"link\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"video.vote\\\" name=\\\"vote\\\" #vote=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.VOTE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.VOTE_COUNT' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" [disabled]=\\\"true\\\" class=\\\"form-control\\\" id=\\\"voteCount\\\" [(ngModel)]=\\\"video.voteCount\\\" name=\\\"voteCount\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"video.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"videoDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VIDEO_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.videoDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n              {{video?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"vote\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VOTE' | translate}}? </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n              {{video?.vote ? ('COMMON.YES'| translate):('COMMON.NO'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"voteCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VOTE_COUNT' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.voteCount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getVote(video.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(video)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let video; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit, AfterViewInit {\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation: true\r\n  };\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen = true;\r\n  lang = 'fr';\r\n  public links = [\r\n    { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n    { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n    { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n    { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n    { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n    { name: 'Configuration', href: 'configs', icon: 'build' },\r\n    { name: 'Setting', href: 'settings', icon: 'settings' },\r\n    { name: 'Modifier le site', href: 'sections', icon: 'web' },\r\n    { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' },\r\n    { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n    { name: 'Finances ', href: 'transaction-list', icon: 'view_list' }\r\n    /*\r\n    { name: 'Administration', href: 'admin', icon: 'admin' },\r\n    { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n    { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n    { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n    { name: 'Email', href: 'email', icon: 'email' },\r\n    { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n    { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n  ];\r\n  constructor(public router: Router, public tokenStorage: TokenStorage) {\r\n    console.log(this.tokenStorage);\r\n    if (!this.tokenStorage.hasToken()) {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.tokenStorage);\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    this.lang = lang;\r\n    if (this.tokenStorage.getRole() === '1') { // admin\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: \"Offres d'emploi\", href: 'job-position-list', icon: 'alarm' },\r\n        { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n        { name: 'Finances ', href: 'transaction-list', icon: 'view_list' },\r\n        { name: 'Configuration', href: 'configs', icon: 'build' },\r\n        { name: 'Setting', href: 'settings', icon: 'settings' },\r\n        { name: 'Modifier le site', href: 'sections', icon: 'web' },\r\n        { name: 'Images Principales', href: 'sliders', icon: 'web' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n        /*\r\n        { name: 'Administration', href: 'admin', icon: 'admin' },\r\n        { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n        { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n        { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n        { name: 'Email', href: 'email', icon: 'email' },\r\n        { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n        { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n      ];\r\n    } else if (this.tokenStorage.getRole() === '10') { // editor\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    } else if (this.tokenStorage.getRole() === '20') { // Finance\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    } else if (this.tokenStorage.getRole() === '30') { // Membres\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    }\r\n\r\n    if (this.lang === 'en') {\r\n      if (this.tokenStorage.getRole() === '1') { // admin\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Job Postings', href: 'job-position-list', icon: 'alarm' },\r\n          { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n          { name: 'Finances ', href: 'transaction-list', icon: 'view_list' },\r\n          { name: 'Configuration', href: 'configs', icon: 'build' },\r\n          { name: 'Setting', href: 'settings', icon: 'settings' },\r\n          { name: 'Modify website', href: 'sections', icon: 'web' },\r\n          { name: 'Main Images', href: 'sliders', icon: 'web' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n          /*\r\n          { name: 'Administration', href: 'admin', icon: 'admin' },\r\n          { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n          { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n          { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n          { name: 'Email', href: 'email', icon: 'email' },\r\n          { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n          { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n        ];\r\n      } else if (this.tokenStorage.getRole() === '10') { // editor\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      } else if (this.tokenStorage.getRole() === '20') { // Finance\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      } else if (this.tokenStorage.getRole() === '30') { // Membres\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n    if (window.innerWidth < 960) {\r\n      this.sidenavOpen = false;\r\n    };\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize(): void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (window.innerWidth < 960) {\r\n          this.sidenav.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  logout() {\r\n    this.tokenStorage.clearAuthData();\r\n    this.router.navigate(['/login/0']);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MyPropertiesComponent } from './my-properties/my-properties.component';\r\nimport { FavoritesComponent } from './favorites/favorites.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { QuillModule } from 'ngx-quill'\r\nimport { ConfigsComponent } from './configs/configs.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { NewsListComponent } from './news-list/news-list.component';\r\nimport { SectionsComponent } from './sections/sections.component';\r\nimport { SectionItemsComponent } from './section-items/section-items.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { FaqListComponent } from './faq-list/faq-list.component';\r\nimport { FaqiComponent } from './faq/faqi.component';\r\nimport { CmessageListComponent } from './cmessage-list/cmessage-list.component';\r\nimport { CmessageComponent } from './cmessage/cmessage.component';\r\nimport { ProjectListComponent } from './projects-list/project-list.component';\r\nimport { ProjectComponent } from './projects/project.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { StatusTextComponent } from './statusText/statusText.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { RegulationComponent } from './regulation/regulation.component';\r\nimport { PositionsComponent } from './positions/Positions.component';\r\nimport { MeetingReportsComponent } from './meetingReport/MeetingReports.component';\r\nimport { PublicitiesComponent } from './publicity/Publicities.component';\r\nimport { VideosComponent } from './video/Videos.component';\r\nimport { ImagesComponent } from './image/Images.component';\r\nimport { PollTypesComponent } from './pollType/PollTypes.component';\r\nimport { PollsComponent } from './poll/Polls.component';\r\nimport { PollQuestionsComponent } from './poll/PollQuestions.component';\r\nimport { TransactionListComponent } from './transaction-list/transaction-list.component';\r\nimport { TransactionComponent } from './transaction/transaction.component';\r\nimport { OnlinePaymentComponent } from './transaction/online-payment.component';\r\nimport { SlidersComponent } from './sliders/sliders.component';\r\nimport { SliderItemsComponent } from './slider-items/slider-items.component';\r\nimport { JobPositionListComponent } from './job-position-list/job-position-list.component';\r\nimport { JobPositionComponent } from './job-position/job-position.component';\r\nimport { JobAppliComponent } from './job-appli/job-appli.component';\r\nimport { JobAppliListComponent } from './job-appli-list/job-appli-list.component';\r\nimport { SettingsComponent } from './settings/Settings.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { EventListComponent } from './event-list/event-list.component';\r\n\r\nexport const routes = [\r\n  {\r\n    path: '',\r\n    component: AccountComponent, children: [\r\n      { path: '', redirectTo: 'admin', pathMatch: 'full' },\r\n      { path: 'my-articles', component: MyPropertiesComponent },\r\n      { path: 'user-list', component: UserListComponent },\r\n      { path: 'user/:id', component: UserComponent },\r\n      { path: 'news-list', component: NewsListComponent },\r\n      { path: 'project-list', component: ProjectListComponent },\r\n      { path: 'job-appli/:id', component: JobAppliComponent },\r\n      { path: 'job-appli-list/:jobPositionId', component: JobAppliListComponent },\r\n      { path: 'job-position/:id', component: JobPositionComponent },\r\n      { path: 'job-position-list', component: JobPositionListComponent },\r\n      { path: 'event/:id', component: EventComponent },\r\n      { path: 'event-list', component: EventListComponent },\r\n      { path: 'meeting-report-list', component: MeetingReportsComponent },\r\n      { path: 'configs', component: ConfigsComponent },\r\n      { path: 'settings', component: SettingsComponent },\r\n      { path: 'news/:id', component: NewsComponent },\r\n      { path: 'project/:id', component: ProjectComponent },\r\n      { path: 'sections', component: SectionsComponent },\r\n      { path: 'sections/:id', component: SectionItemsComponent },\r\n      { path: 'sliders', component: SlidersComponent },\r\n      { path: 'sliders/:id', component: SliderItemsComponent },\r\n      { path: 'faqs', component: FaqListComponent },\r\n      { path: 'faq/:id', component: FaqiComponent },\r\n      { path: 'cmessages', component: CmessageListComponent },\r\n      { path: 'cmessage/:id', component: CmessageComponent },\r\n      { path: 'email', component: EmailComponent },\r\n      { path: 'regulation', component: RegulationComponent },\r\n      { path: 'statusText', component: StatusTextComponent },\r\n      { path: 'publicity-list', component: PublicitiesComponent },\r\n      { path: 'video-list', component: VideosComponent },\r\n      { path: 'image-list', component: ImagesComponent },\r\n      { path: 'poll-list', component: PollsComponent },\r\n      { path: 'transaction-list', component: TransactionListComponent },\r\n      { path: 'online-payment', component: OnlinePaymentComponent },\r\n      { path: 'admin', component: AdminComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    AccountComponent,\r\n    MyPropertiesComponent,\r\n    FavoritesComponent,\r\n    ProfileComponent,\r\n    ConfigsComponent,\r\n    NewsComponent,\r\n    ProjectComponent,\r\n    SectionsComponent,\r\n    SectionItemsComponent,\r\n    SlidersComponent,\r\n    SliderItemsComponent,\r\n    NewsListComponent,\r\n    ProjectListComponent,\r\n    UserListComponent,\r\n    UserComponent,\r\n    FaqListComponent,\r\n    FaqiComponent,\r\n    CmessageListComponent,\r\n    CmessageComponent,\r\n    EmailComponent,\r\n    RegulationComponent,\r\n    StatusTextComponent,\r\n    AdminComponent,\r\n    PositionsComponent,\r\n    MeetingReportsComponent,\r\n    PublicitiesComponent,\r\n    VideosComponent,\r\n    ImagesComponent,\r\n    PollTypesComponent,\r\n    PollsComponent,\r\n    PollQuestionsComponent,\r\n    TransactionListComponent,\r\n    TransactionComponent,\r\n    OnlinePaymentComponent,\r\n    JobPositionListComponent,\r\n    JobPositionComponent,\r\n    JobAppliComponent,\r\n    JobAppliListComponent,\r\n    SettingsComponent,\r\n    EventComponent,\r\n    EventListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    InputFileModule,\r\n    AgmCoreModule,\r\n    FormsModule,\r\n    TranslateModule,\r\n    QuillModule.forRoot({\r\n      theme: 'snow',\r\n      modules: {\r\n        syntax: false,\r\n        toolbar: [\r\n          ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n          ['blockquote', 'code-block'],\r\n          [{ header: 1 }, { header: 2 }],               // custom button values\r\n          [{ list: 'ordered'}, { list: 'bullet' }],\r\n          [{ script: 'sub'}, { script: 'super' }],      // superscript/subscript\r\n          [{ indent: '-1'}, { indent: '+1' }],          // outdent/indent\r\n          [{ direction: 'rtl' }],                       // text direction\r\n          [{ size: ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          [{ color: [] }, { background: [] }],          // dropdown with defaults from theme\r\n          [{ font: [] }],\r\n          [{ align: [] }],\r\n          ['clean'],                                         // remove formatting button\r\n          ['link', 'image', 'video']                         // link and image, newsVideo\r\n        ]\r\n      }\r\n    })\r\n  ],\r\n  exports:[\r\n    JobAppliComponent\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hZG1pbi9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGFkbWluXFxhZG1pbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hZG1pbi9hZG1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLHdCQUFBO0FDQ0QiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2FkbWluL2FkbWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnFsLXNub3cge1xyXG5cdGhlaWdodDogNTAwcHggIWltcG9ydGFudDtcclxufSIsIi5xbC1zbm93IHtcbiAgaGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-admin-component',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent extends BaseComponent implements OnInit {\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY21lc3NhZ2UtbGlzdC9jbWVzc2FnZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { ContactUsMessage } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-cmessage-list',\r\n  templateUrl: './cmessage-list.component.html',\r\n  styleUrls: ['./cmessage-list.component.scss']\r\n})\r\n\r\nexport class CmessageListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'email', 'phone', 'actions' ];\r\n  dataSource: MatTableDataSource<ContactUsMessage>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('ContactUsMessage', parameters, ' ORDER BY e.id DESC ')\r\n      .subscribe((data: ContactUsMessage[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(contactUsMessage : ContactUsMessage) {\r\n    const index: number = this.dataSource.data.indexOf(contactUsMessage);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(contactUsMessage.id, 'ContactUsMessage')\r\n      .subscribe(data => {\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<ContactUsMessage>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY21lc3NhZ2UvY21lc3NhZ2UuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { ContactUsMessage } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cmessage-component',\r\n  templateUrl: './cmessage.component.html',\r\n  styleUrls: ['./cmessage.component.scss']\r\n})\r\nexport class CmessageComponent extends BaseComponent implements OnInit {\r\n  dataSource: MatTableDataSource<ContactUsMessage>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  cmessage: ContactUsMessage = new ContactUsMessage();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.getCmessage(params.id);\r\n    });\r\n  }\r\n\r\n\r\n  getCmessage(cmessageId: number) {\r\n    if (cmessageId === 0) {\r\n      this.cmessage = new ContactUsMessage();\r\n    }\r\n\r\n    if (cmessageId > 0)\r\n      this.appService.getOneWithChildsAndFiles(cmessageId, 'ContactUsMessage')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.cmessage = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY29uZmlncy9jb25maWdzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { Company, CompanyLocation, SectionItem } from 'src/app/app.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './configs.component.html',\r\n  styleUrls: ['./configs.component.scss']\r\n})\r\nexport class ConfigsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'telephone', 'actions'];\r\n  dataSource: MatTableDataSource<CompanyLocation>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public toolbarTypes = [0, 1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public footerTypes = ['Footer-1', 'Footer-2', 'Footer-3'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  formData = new FormData();\r\n  flag: any;\r\n  company: Company = new Company();\r\n  companies: Company[] = [];\r\n  location: CompanyLocation = new CompanyLocation();\r\n  messages: any;\r\n  logos: any;\r\n  favicons: any;\r\n  careers: any;\r\n  polls: any;\r\n  projects: any;\r\n  settings: Settings;\r\n  selectedTab = 0;s\r\n  selectedMainTabIndex = 0;\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    private translate: TranslateService) {\r\n    this.settings = appService.appSettings.settings;\r\n  }\r\n\r\n  edit(si: CompanyLocation) {\r\n    this.location = si;\r\n    this.selectedTab = 1;\r\n  }\r\n  public changeTheme(theme) {\r\n    this.settings.theme = theme;\r\n    this.company.themeColor = theme;\r\n    this.appService.appSettings.settings.theme = theme;\r\n  }\r\n\r\n  public chooseToolbarType() {\r\n    this.settings.toolbar = this.company.headerTextPosition;\r\n    this.appService.appSettings.settings.toolbar = this.company.headerTextPosition;\r\n    // window.scrollTo(0, 0);\r\n  }\r\n\r\n  public chooseHeaderType() {\r\n    this.settings.header = this.company.headerImageType;\r\n    this.appService.appSettings.settings.header = this.company.headerImageType;\r\n    // window.scrollTo(0, 0);\r\n    // this.router.navigate(['/']);\r\n  }\r\n\r\n  public chooseFooterType() {\r\n    this.appService.company.footerType = this.company.footerType;\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    let found = false;\r\n    this.flag = flag;\r\n    this.companies.forEach(aCompany => {\r\n      if (flag.code === aCompany.language) {\r\n        this.company = aCompany;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.company = new Company();\r\n      this.company.language = flag.code;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Company', parameters)\r\n      .subscribe((data: Company[]) => {\r\n        this.companies = data;\r\n        let found = false;\r\n        if (this.companies.length > 0) {\r\n          this.companies.forEach(aCompany => {\r\n            if (lang === aCompany.language) {\r\n              this.company = aCompany;\r\n              found = true;\r\n            }\r\n          });\r\n        }\r\n        if (!found) {\r\n          this.company = new Company();\r\n          this.company.language = lang;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get Company complete'));\r\n\r\n\r\n    this.appService.getAllByCriteria('Location', parameters, 'order by e.rank ')\r\n      .subscribe((data: CompanyLocation[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get locatioms complete'));\r\n\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 5) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n  save() {\r\n    this.formData = new FormData();\r\n    let nbFiles = 0;\r\n    const isNew = !(this.company.id > 0);\r\n    if (this.company.fixedMenu.toString() === 'true') {\r\n      this.company.fixedMenu = 1;\r\n    }\r\n    if (this.company.leftToRight.toString() === 'true') {\r\n      this.company.leftToRight = 1;\r\n    }\r\n    if (this.company.fixedMenu.toString() === 'false') {\r\n      this.company.fixedMenu = 0;\r\n    }\r\n    if (this.company.leftToRight.toString() === 'false') {\r\n      this.company.leftToRight = 0;\r\n    }\r\n\r\n    for (let i = 0; i < this.favicons.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.favicons[i].file, 'favicon.ico');\r\n    }\r\n\r\n    for (let i = 0; i < this.logos.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.logos[i].file, 'logo.png');\r\n    }\r\n\r\n    for (let i = 0; i < this.careers.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.careers[i].file, 'careers.jpg');\r\n    }\r\n\r\n    for (let i = 0; i < this.polls.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.polls[i].file, 'polls.jpg');\r\n    }\r\n\r\n    for (const prj of  this.projects) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', prj.file, 'projects.jpg');\r\n    }\r\n\r\n    try {\r\n      console.log('Nomber of files: ' + nbFiles);\r\n      console.log(this.formData);\r\n      console.log(this.company);\r\n      if (nbFiles > 0) {\r\n        this.appService.saveWithFile(this.company, 'Company', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.company = result;\r\n              this.appService.initCompany();\r\n              if (isNew) {\r\n                this.companies.push(this.company);\r\n              }\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.company, 'Company')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.company = result;\r\n              this.appService.initCompany();\r\n              if (isNew) {\r\n                this.companies.push(this.company);\r\n              }\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } catch (e) {\r\n      this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n        this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n      });\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.location = new CompanyLocation();\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  addLocation() {\r\n    this.selectedTab = 1;\r\n    this.location = new CompanyLocation();\r\n  }\r\n\r\n  public remove(location: CompanyLocation) {\r\n    this.messages = '';\r\n    this.appService.delete(location.id, 'com.wack.model.Location')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(location);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<CompanyLocation>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n  saveLocation() {\r\n    this.messages = '';\r\n    try {\r\n      this.messages = '';\r\n      const index: number = this.dataSource.data.indexOf(this.location);\r\n      this.appService.save(this.location, 'Location')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.location = new CompanyLocation();\r\n            this.selectedTab = 0;\r\n            if (index !== -1) {\r\n              this.dataSource.data.splice(index, 1);\r\n            }\r\n            this.dataSource.data.push(result);\r\n            this.dataSource = new MatTableDataSource<CompanyLocation>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.selectedTab = 1;\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9lbWFpbC9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGVtYWlsXFxlbWFpbC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9lbWFpbC9lbWFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLHdCQUFBO0FDQ0QiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2VtYWlsL2VtYWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnFsLXNub3cge1xyXG5cdGhlaWdodDogNTAwcHggIWltcG9ydGFudDtcclxufSIsIi5xbC1zbm93IHtcbiAgaGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Email } from 'src/app/app.models';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-email-component',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.scss']\r\n})\r\nexport class EmailComponent extends BaseComponent implements OnInit {\r\n\r\n  email: Email = new Email();\r\n  messages: any;\r\n  error: string;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n  }\r\n\r\n  sendEmail() {\r\n      this.appService.saveWithUrl('/service/user/email/sendMassEmail', this.email)\r\n        .subscribe(data => {\r\n          this.processResult(data, this.email, null);\r\n          if (data.errors === null || data.errors.length === 0) {\r\n            //this.contactForm.reset();\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.email = new Email();\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZXZlbnQtbGlzdC9ldmVudC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { EventDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-event-list',\r\n  templateUrl: './event-list.component.html',\r\n  styleUrls: ['./event-list.component.scss']\r\n})\r\nexport class EventListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'title', 'desc', 'startDatetime', 'endDatetime', 'actions'];\r\n  dataSource: MatTableDataSource<EventDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const searchCrit = {\r\n      language: this.appService.getFlag().code\r\n    }\r\n\r\n    // this.appService.saveWithUrl('/service/career/eventDesc/search', searchCrit)\r\n    //   .subscribe((data: EventDesc[]) => {\r\n    //     this.dataSource = new MatTableDataSource(data);\r\n    //     this.dataSource.paginator = this.paginator;\r\n    //     this.dataSource.sort = this.sort;\r\n    //   });\r\n\r\n    const parameters: string[] = [];\r\n    if(this.tokenStorage.getRole()==='30'){\r\n      parameters.push('e.coordinator.id = |abc|' + this.tokenStorage.getUserId() + '|Long');\r\n    }\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteriaWithFiles('EventDesc', parameters).subscribe((data: EventDesc[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(eventDesc: EventDesc) {\r\n    const index: number = this.dataSource.data.indexOf(eventDesc);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(eventDesc.event.id, 'Event')\r\n        .subscribe(data => {\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource = new MatTableDataSource<EventDesc>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".mat-select-panel {\\n  min-width: calc(20% + 17px) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ldmVudC9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGV2ZW50XFxldmVudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ldmVudC9ldmVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHNDQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2V2ZW50L2V2ZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zZWxlY3QtcGFuZWxcclxue1xyXG4gICAgbWluLXdpZHRoOiBjYWxjKDIwJSArIDE3cHgpICFpbXBvcnRhbnQ7XHJcbn0iLCIubWF0LXNlbGVjdC1wYW5lbCB7XG4gIG1pbi13aWR0aDogY2FsYygyMCUgKyAxN3B4KSAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Event, EventDesc, User } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-event-component',\r\n  templateUrl: './event.component.html',\r\n  styleUrls: ['./event.component.scss']\r\n})\r\nexport class EventComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'actions'];\r\n  dataSource: MatTableDataSource<EventDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  event: Event = new Event();\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  hours: string[];\r\n  minutes: string[];\r\n\r\n  hour: string;\r\n  minute: string;\r\n  activeUsers: User[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.getActiveUsers();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getDescriptions(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.minutes = ['00', '15', '30', '45'];\r\n    this.hours = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.event = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.event = new Event();\r\n    this.event.eventDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const ed = new EventDesc();\r\n      ed.language = flag.code;\r\n      this.event.eventDescs.push(ed);\r\n    }\r\n  }\r\n\r\n  getDescriptions(eventId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(eventId, 'com.wack.model.Event')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.event = result;\r\n          this.setHours();\r\n          const images: any[] = [];\r\n          this.event.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/events/' + eventId + '/' + item,\r\n              preview: 'assets/images/events/' + eventId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all event desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.event.status = (this.event.status == null\r\n      || this.event.status.toString() === 'false'\r\n      || this.event.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  setHours() {\r\n    this.event.beginHour = '0' + new Date(this.event.beginDate).getHours() + '';\r\n    if (this.event.beginHour.length === 1) {\r\n      this.event.beginHour += '0';\r\n    }\r\n    this.event.beginMinute = new Date(this.event.beginDate).getMinutes() + '';\r\n    if (this.event.beginMinute.length === 1) {\r\n      this.event.beginMinute += '0';\r\n    }\r\n    this.event.endHour = '0' + new Date(this.event.endDate).getHours() + '';\r\n    if (this.event.endHour.length === 1) {\r\n      this.event.endHour += '0';\r\n    }\r\n    this.event.endMinute = new Date(this.event.endDate).getMinutes() + '';\r\n    if (this.event.endMinute.length === 1) {\r\n      this.event.endMinute += '0';\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    this.event.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n    this.event.remainingFileNames = [];\r\n\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        console.log('Additional file added: ' + 'picture.' + this.files[i].file.name);\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      } else {\r\n        console.log(this.files[i]);\r\n        const pathSplitArray = this.files[i].link.split('/');\r\n        this.event.remainingFileNames.push(pathSplitArray[pathSplitArray.length - 1]);\r\n      }\r\n    }\r\n\r\n    this.setToggles();\r\n    const beginDateStr = new Date(this.event.beginDate)\r\n      .toISOString()\r\n      .split('T')[0];\r\n    const endDateStr = new Date(this.event.beginDate)\r\n      .toISOString()\r\n      .split('T')[0];\r\n\r\n    this.event.beginDate = new Date(beginDateStr + 'T' + this.event.beginHour + ':' + this.event.beginMinute + ':00');\r\n    this.event.endDate = new Date(endDateStr + 'T' + this.event.endHour + ':' + this.event.endMinute + ':00');\r\n    const thisEvent = { ...this.event };\r\n    this.cleanDescriptions(thisEvent);\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(thisEvent, 'Event', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.event, null);\r\n            this.event = { ...result };\r\n            this.onSave(this.event);\r\n            this.setHours();\r\n            this.clear();\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(thisEvent, 'Event')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.event, null);\r\n            this.event = { ...result };\r\n            this.onSave(this.event);\r\n            this.setHours();\r\n            this.clear();\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  cleanDescriptions(e: Event) {\r\n    e.eventDescs.forEach(element => {\r\n      element.event = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(eDesc: EventDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(eDesc.event.id, 'Event')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(eDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<EventDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const ev = $event;\r\n\r\n    let i = 0;\r\n    ev.eventDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const edesc = { ...ev.eventDescs[i] }\r\n        edesc.event = ev;\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n\r\n\r\n  hourSelectionChange(event) {\r\n\r\n  }\r\n\r\n  minuteSelectionChange(event) {\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmFxLWxpc3QvZmFxLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Faq } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-faq-list',\r\n  templateUrl: './faq-list.component.html',\r\n  styleUrls: ['./faq-list.component.scss']\r\n})\r\nexport class FaqListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'language', 'question', 'noCount', 'yesCount', 'actions' ];\r\n  dataSource: MatTableDataSource<Faq>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('com.wack.model.website.Faq', parameters).subscribe((data: Faq[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(faq : Faq) {\r\n    const index: number = this.dataSource.data.indexOf(faq);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(faq.id, 'Faq')\r\n      .subscribe(data => {\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Faq>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmFxL2ZhcWkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Faq } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-faqi-component',\r\n  templateUrl: './faqi.component.html',\r\n  styleUrls: ['./faqi.component.scss']\r\n})\r\nexport class FaqiComponent extends BaseComponent implements OnInit {\r\n  dataSource: MatTableDataSource<Faq>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  faq: Faq = new Faq();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  picture: any[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  \r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.getFaq(params.id);\r\n    });\r\n  }\r\n\r\n\r\n  getFaq(faqId: number) {\r\n    if (faqId === 0) {\r\n      this.faq = new Faq();\r\n    }\r\n\r\n    if (faqId > 0)\r\n      this.appService.getOneWithChildsAndFiles(faqId, 'com.wack.model.website.Faq')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.faq = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  save() {\r\n\r\n    this.faq.language = this.flag.name;\r\n    this.faq.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.appService.save(this.faq, 'com.wack.model.website.Faq')\r\n      .subscribe(data => {\r\n        this.processResult(data, this.faq, null)\r\n        this.faq = data;\r\n      });\r\n\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmF2b3JpdGVzL2Zhdm9yaXRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  \r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.appService.Data.favorites);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public remove(property:News) {\r\n    const index: number = this.dataSource.data.indexOf(property);    \r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    } \r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9pbWFnZS9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGltYWdlXFxJbWFnZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaW1hZ2UvSW1hZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaW1hZ2UvSW1hZ2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Image } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-images-component',\r\n  templateUrl: './Images.component.html',\r\n  styleUrls: ['./Images.component.scss']\r\n})\r\nexport class ImagesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'rank', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<Image>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  image: Image = new Image();\r\n  selected = new FormControl(0);\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Image', parameters)\r\n      .subscribe((data: Image[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Image complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setImage($event) {\r\n    this.image = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.image = new Image();\r\n  }\r\n\r\n  getImage(imageId: number) {\r\n    this.appService.getOneWithChildsAndFiles(imageId, 'Image')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.image = result;\r\n          const images: any[] = [];\r\n          this.image.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/images/' + imageId + '/' + item,\r\n              preview: 'assets/images/images/' + imageId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.image.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.image, 'Image', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.image, null);\r\n          this.image = result;\r\n          this.onSave(this.image);\r\n        });\r\n    } else {\r\n      this.appService.save(this.image, 'Image')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.image, null);\r\n          this.image = result;\r\n          this.onSave(this.image);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  public remove(im: Image) {\r\n    this.messages = '';\r\n    this.appService.delete(im.id, 'Image')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(im);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Image>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLWFwcGxpLWxpc3Qvam9iLWFwcGxpLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { JobPositionDesc, JobAppli } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-appli-list',\r\n  templateUrl: './job-appli-list.component.html',\r\n  styleUrls: ['./job-appli-list.component.scss']\r\n})\r\nexport class JobAppliListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'phone', 'email', 'createDatetime', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<JobAppli>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (Number(params.jobPositionId) > 0) {\r\n        this.getJobApplis(params.jobPositionId);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public getJobApplis(jobPositionId: number) {\r\n    const parameters: string[] = [];\r\n    if (jobPositionId > 0) { \r\n      parameters.push('e.jobPosition.id = |jobPositionId|' + jobPositionId + '|Long');\r\n    }\r\n\r\n    this.appService.getAllByCriteria('JobAppli', parameters)\r\n    .subscribe((data: JobAppli[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLWFwcGxpL2pvYi1hcHBsaS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, JobPositionDesc, JobAppli } from 'src/app/app.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-appli-component',\r\n  templateUrl: './job-appli.component.html',\r\n  styleUrls: ['./job-appli.component.scss']\r\n})\r\nexport class JobAppliComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  jobAppli: JobAppli = new JobAppli();\r\n  jobPositionDesc: JobPositionDesc = new JobPositionDesc();\r\n  jobPositionId: number;\r\n  //messages: any;\r\n  error: string;\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n  action = 'submitting';\r\n\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (Number(params.id) === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getJobAppli(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  clear() {\r\n    this.jobAppli = new JobAppli();\r\n  }\r\n\r\n\r\n  getJobPositionDesc(jobPositionDescId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobPositionDescId, 'JobPositionDesc')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobPositionDesc = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job position desc complete'));\r\n  }\r\n\r\n  getJobAppli(jobAppliId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobAppliId, 'JobAppli')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobAppli = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job application complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.jobAppli.status = (this.jobAppli.status == null\r\n      || this.jobAppli.status.toString() === 'false'\r\n      || this.jobAppli.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    const userId = +this.tokenStorage.getUserId();\r\n    if (userId > 0) {\r\n      this.jobAppli.applicant = new User();\r\n      this.jobAppli.modifiedBy = userId;\r\n      this.jobAppli.applicant.id = userId;\r\n    }\r\n    this.jobAppli.jobPosition = this.jobPositionDesc.jobPosition;\r\n\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.jobAppli.status = (this.jobAppli.status == null || this.jobAppli.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.jobAppli, 'JobAppli', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResultBasedOnId(result, this.jobAppli);\r\n        });\r\n    } else {\r\n      this.appService.save(this.jobAppli, 'JobAppli')\r\n        .subscribe(result => {\r\n          this.processResultBasedOnId(result, this.jobAppli);\r\n          this.action = 'success';\r\n        });\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLXBvc2l0aW9uLWxpc3Qvam9iLXBvc2l0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, JobPositionDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-job-position-list',\r\n  templateUrl: './job-position-list.component.html',\r\n  styleUrls: ['./job-position-list.component.scss']\r\n})\r\nexport class JobPositionListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'title', 'desc', 'createDatetime', 'resumeCnt', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const searchCrit = {\r\n      language: this.appService.getFlag().code\r\n    }\r\n\r\n    this.appService.saveWithUrl('/service/career/jobPositionDesc/search', searchCrit)\r\n      .subscribe((data: JobPositionDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  public remove(jobPositionDesc: JobPositionDesc) {\r\n    const index: number = this.dataSource.data.indexOf(jobPositionDesc);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(jobPositionDesc.jobPosition.id, 'com.wack.model.JobPosition')\r\n        .subscribe(data => {\r\n          console.info(data);\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource = new MatTableDataSource<JobPositionDesc>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLXBvc2l0aW9uL2pvYi1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, User, Video, JobPositionDesc, JobPosition } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-position-component',\r\n  templateUrl: './job-position.component.html',\r\n  styleUrls: ['./job-position.component.scss']\r\n})\r\nexport class JobPositionComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  jobPosition: JobPosition = new JobPosition();\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getDescriptions(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.jobPosition = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.jobPosition = new JobPosition();\r\n    this.jobPosition.jobPositionDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const jpd = new JobPositionDesc();\r\n      jpd.language = flag.code;\r\n      this.jobPosition.jobPositionDescs.push(jpd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(jobPositionId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobPositionId, 'com.wack.model.JobPosition')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobPosition = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job position desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.jobPosition.status = (this.jobPosition.status == null\r\n      || this.jobPosition.status.toString() === 'false'\r\n      || this.jobPosition.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisJobposition = { ...this.jobPosition };\r\n      this.cleanDescriptions(thisJobposition);\r\n\r\n      this.appService.save(thisJobposition, 'JobPosition')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.jobPosition, null);\r\n            this.jobPosition = { ...result };\r\n            this.onSave(this.jobPosition);\r\n            console.log(this.jobPosition)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(jp: JobPosition) {\r\n    jp.jobPositionDescs.forEach(element => {\r\n      element.jobPosition = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(jpDesc: JobPositionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(jpDesc.jobPosition.id, 'JobPosition')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(jpDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<JobPositionDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const jobPos = $event;\r\n\r\n    let i = 0;\r\n    jobPos.jobPositionDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const jpdesc = { ...jobPos.jobPositionDescs[i] }\r\n        jpdesc.jobPosition = jobPos;\r\n        if (!this.dataSource.data) {\r\n          this.dataSource.data = [];\r\n        }\r\n        this.updateDatasourceData(this.dataSource, this.paginator, this.sort, jpdesc);\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9tZWV0aW5nUmVwb3J0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxcbWVldGluZ1JlcG9ydFxcTWVldGluZ1JlcG9ydHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbWVldGluZ1JlcG9ydC9NZWV0aW5nUmVwb3J0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L21lZXRpbmdSZXBvcnQvTWVldGluZ1JlcG9ydHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MeetingReport, MeetingReportDesc, User } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-mreport-component',\r\n  templateUrl: './MeetingReports.component.html',\r\n  styleUrls: ['./MeetingReports.component.scss']\r\n})\r\nexport class MeetingReportsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['meetingDate', 'title', 'author', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<MeetingReportDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  meetingReport: MeetingReport = new MeetingReport();\r\n  activeUsers: User[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n    this.getActiveUsers();\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |uStat|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('MeetingReportDesc', parameters)\r\n      .subscribe((data: MeetingReportDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all MeetingReportDesc complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setMeetingReport($event) {\r\n    this.meetingReport = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.meetingReport = new MeetingReport();\r\n    this.meetingReport.meetingReportDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const mrd = new MeetingReportDesc();\r\n      mrd.language = flag.code;\r\n      mrd.title = '';\r\n      this.meetingReport.meetingReportDescs.push(mrd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(meetingReportId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (meetingReportId != null) {\r\n      parameters.push('e.meetingReport.id = |meetingReportId|' + meetingReportId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('MeetingReportDesc', parameters)\r\n      .subscribe((data: MeetingReportDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.meetingReport = data[0].meetingReport;\r\n          this.meetingReport.meetingReportDescs = data;\r\n\r\n          this.selected.setValue(0);\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all meeting report desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.meetingReport.status = (this.meetingReport.status == null\r\n      || this.meetingReport.status.toString() === 'false'\r\n      || this.meetingReport.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisMeetingReport = {...this.meetingReport};\r\n      this.cleanDescriptions(thisMeetingReport);\r\n\r\n      this.appService.save(thisMeetingReport, 'MeetingReport')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.meetingReport, null);\r\n            this.meetingReport = {...result};\r\n            this.onSave(this.meetingReport);\r\n            console.log(this.meetingReport)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(mr: MeetingReport) {\r\n    mr.meetingReportDescs.forEach(element => {\r\n       element.meetingReport = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(mrDesc: MeetingReportDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(mrDesc.meetingReport.id, 'MeetingReport')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(mrDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<MeetingReportDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const mReport = $event;\r\n\r\n    let i = 0;\r\n    mReport.meetingReportDescs.forEach(element => {\r\n        if (element.language === this.appService.getFlag().code) {\r\n          const mrdesc = {...mReport.meetingReportDescs[i]}\r\n          mrdesc.meetingReport = mReport;\r\n          if (!this.dataSource.data) {\r\n            this.dataSource.data = [];\r\n          }\r\n          this.updateDatasourceData(this.dataSource, this.paginator, this.sort, mrdesc);\r\n        }\r\n        i++;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbXktcHJvcGVydGllcy9teS1wcm9wZXJ0aWVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './my-properties.component.html',\r\n  styleUrls: ['./my-properties.component.scss']\r\n})\r\nexport class MyPropertiesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views','rating', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.appService.getProperties().subscribe(res => {\r\n      this.dataSource = new MatTableDataSource(res);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(property:News) {\r\n    const index: number = this.dataSource.data.indexOf(property);\r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbmV3cy1saXN0L25ld3MtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-news-list',\r\n  templateUrl: './news-list.component.html',\r\n  styleUrls: ['./news-list.component.scss']\r\n})\r\nexport class NewsListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'lang', 'title', 'publicationDatetime', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('com.wack.model.News', parameters).subscribe((data: News[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(news : News) {\r\n    const index: number = this.dataSource.data.indexOf(news);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(news.id, 'com.wack.model.News')\r\n      .subscribe(data => {\r\n          console.info(data);\r\n          \r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbmV3cy9uZXdzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, User, Video } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-news-component',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<News>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  news: News = new News();\r\n  newss: News[] = [];\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag : any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.news === null) {\r\n      this.clear();\r\n    } else {\r\n      this.news.language = flag.code;\r\n    }\r\n  }\r\n\r\n  public addNewsVideo(): void {\r\n    if(!this.news.videos){\r\n      this.news.videos =[];\r\n    }\r\n    this.news.videos.push(new Video());\r\n  }\r\n\r\n  public deleteNewsVideo(id: number, index: number) {\r\n\r\n    if (id === undefined || id === null) {\r\n      this.removeItem(this.news.videos, id);\r\n      return;\r\n    }\r\n\r\n    this.appService.delete(id, 'com.wack.model.Video')\r\n      .subscribe(data => {\r\n        this.removeItem(this.news.videos, id);\r\n        this.processDeleteResult(data, this.messages);\r\n      });\r\n  }\r\n\r\n  public deleteFile(news: News, fileName: string) {\r\n    const vo = { id: news.id, name: fileName };\r\n    this.appService.deleteFile('com.wack.model.News', vo)\r\n      .subscribe(data => {\r\n        this.removeElement(this.news.fileNames, fileName);\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const lang = this.appService.getFlag();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getNews(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getNews(newsId: number) {\r\n    this.appService.getOneWithChildsAndFiles(newsId, 'com.wack.model.News')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.news = result;\r\n          console.log(result);\r\n          const images: any[] = [];\r\n          if(this.news.language==='fr'){\r\n            this.flag = this.flags[0];\r\n          }else{\r\n            this.flag = this.flags[1];\r\n          }\r\n          console.log(this.news);\r\n          this.news.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/news/' + newsId + '/' + item,\r\n              preview: 'assets/images/news/' + newsId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.news.author = new User();\r\n    this.news.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.news.author.id = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.news.status = (this.news.status == null || this.news.status.toString() === 'false') ? 0 : 1;\r\n    this.news.featured = (this.news.featured == null || this.news.featured.toString() === 'false') ? 0 : 1;\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.news, 'News', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            console.log('saveWithFile');\r\n            this.news = result;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(this.news, 'News')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.news = result;\r\n            console.log('Saved');\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.news = new News();\r\n    this.news.author = new User();\r\n    this.news.author.id = +this.tokenStorage.getUserId();\r\n    this.news.language = this.flag.code;\r\n    this.news.fileNames = [];\r\n    this.news.videos = [];\r\n  }\r\n\r\n}","import { Component, OnInit, ViewChild, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { Poll, PollQuestion, PollQuestionDesc, PositionDesc, PollChoice, PollChoiceDesc, User } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-pollquestion-component',\r\n  templateUrl: './PollQuestions.component.html',\r\n  styleUrls: ['./Polls.component.scss']\r\n})\r\nexport class PollQuestionsComponent extends BaseComponent implements OnInit {\r\n\r\n  messages = '';\r\n\r\n  @Input() poll: Poll;\r\n  pollQuestion: PollQuestion = new PollQuestion();\r\n  pollQuestions: PollQuestion[] = [];\r\n\r\n  pollQuestionDescs: PollQuestionDesc[] = [];\r\n\r\n  activePositions: PositionDesc[];\r\n  activeUsers: User[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getDescriptions(undefined);\r\n    this.getActivePositions();\r\n    this.getActiveUsers();\r\n  }\r\n\r\n\r\n  public getActivePositions() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.position.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('PositionDesc', parameters).subscribe((data: PositionDesc[]) => {\r\n      this.activePositions = data;\r\n    });\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  getPollQuestions() {\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollQuestionDescs', {\r\n          language: this.appService.getFlag().code,\r\n          //status: 1,\r\n          pollId: this.poll.id\r\n        })\r\n        .subscribe(data => {\r\n          this.pollQuestionDescs = data;\r\n        });\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPoll($event) {\r\n    this.poll = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.pollQuestion = new PollQuestion();\r\n    this.pollQuestion.pollQuestionDescs = [];\r\n    this.pollQuestion.pollChoices = [];\r\n    this.pollQuestion.pollChoices.push(new PollChoice());\r\n    for (const flag of this.appService.flags) {\r\n      const pqd = new PollQuestionDesc();\r\n      pqd.language = flag.code;\r\n      pqd.description = '';\r\n      this.pollQuestion.pollQuestionDescs.push(pqd);\r\n\r\n      const pcd = new PollChoiceDesc();\r\n      pcd.language = flag.code;\r\n      pcd.description = '';\r\n      this.pollQuestion.pollChoices[0].pollChoiceDescs.push(pcd);\r\n    }\r\n  }\r\n\r\n  addChoice() {\r\n    const pollChoice = new PollChoice();\r\n    for (const flag of this.appService.flags) {\r\n      const pcd = new PollChoiceDesc();\r\n      pcd.language = flag.code;\r\n      pcd.description = '';\r\n      pollChoice.pollChoiceDescs.push(pcd);\r\n    }\r\n\r\n\r\n    this.pollQuestion.pollChoices.push(pollChoice);\r\n\r\n  }\r\n\r\n\r\n  getDescriptions(pollQuestionId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollQuestionId !== undefined) {\r\n      parameters.push('e.pollQuestion.id = |pollQuestionId|' + pollQuestionId + '|Long');\r\n\r\n      this.appService.getAllByCriteria('PollQuestionDesc', parameters)\r\n        .subscribe((data: PollQuestionDesc[]) => {\r\n\r\n          if (data !== null && data.length > 0) {\r\n            this.pollQuestion = data[0].pollQuestion;\r\n            this.pollQuestion.pollQuestionDescs = data;\r\n\r\n            this.selected.setValue(1);\r\n\r\n          }\r\n        },\r\n          error => console.log(error),\r\n          () => console.log('Get all pollQuestion desc complete'));\r\n    } else {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  setToggles() {\r\n    this.poll.status = (this.poll.status == null\r\n      || this.poll.status.toString() === 'false'\r\n      || this.poll.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.pollQuestion.poll = new Poll();\r\n      this.pollQuestion.poll.id = this.poll.id;\r\n      this.setToggles();\r\n      const thisPollQuestion = {...this.pollQuestion};\r\n      this.cleanDescriptions(thisPollQuestion);\r\n\r\n      this.appService.save(thisPollQuestion, 'PollQuestion')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.pollQuestion, null);\r\n            this.pollQuestion = {...result};\r\n            this.onSave(this.pollQuestion);\r\n            this.selected.setValue(2);\r\n            console.log(this.pollQuestion)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n\r\n  edit(pollQuestionId: number) {\r\n    this.messages = '';\r\n\r\n    const parameters: string[] = [];\r\n    this.appService.getOneWithChildsAndFiles(pollQuestionId, 'com.wack.poll.PollQuestion').subscribe((data: PollQuestion) => {\r\n      this.pollQuestion = data\r\n    });\r\n }\r\n\r\n\r\n  cleanDescriptions(pq: PollQuestion) {\r\n    pq.pollQuestionDescs.forEach(element => {\r\n       element.pollQuestion = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(pqDesc: PollQuestionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pqDesc.pollQuestion.id, 'PollQuestion')\r\n      .subscribe(resp => {\r\n        \r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    // if (this.dataSource.paginator) {\r\n    //   this.dataSource.paginator.firstPage();\r\n    // }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pq = $event;\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollQuestionDescs', {\r\n      id: pq.id,\r\n      language: this.appService.getFlag().code\r\n    })\r\n    .subscribe(data => {\r\n      if (data && data.length > 0) {\r\n        this.pollQuestionDescs.push(data[0]);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  onToggleGroupChange(event) {\r\n    this.pollQuestion.status = event.value;\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb2xsL0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccG9sbFxcUG9sbHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbC9Qb2xscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3BvbGwvUG9sbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { PollDesc, Poll, PollTypeDesc, PollQuestion } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PollQuestionsComponent } from './PollQuestions.component';\r\n\r\n@Component({\r\n  selector: 'app-poll-component',\r\n  templateUrl: './Polls.component.html',\r\n  styleUrls: ['./Polls.component.scss']\r\n})\r\nexport class PollsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['pollTypeDescName', 'title', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PollDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  @ViewChild(PollQuestionsComponent, { static: false }) pollQuestionsView: PollQuestionsComponent;\r\n\r\n  messages = '';\r\n  poll: Poll;\r\n  pollQuestion: PollQuestion = new PollQuestion();\r\n\r\n  pollTypes: PollTypeDesc[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private changeDetectedRef: ChangeDetectorRef) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getPolls();\r\n    this.getDescriptions(undefined);\r\n    this.getPollTypes();\r\n  }\r\n\r\n  public getPollTypes() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.pollType.status = |uStat|1|Short');\r\n    this.appService.getAllByCriteriaWithFiles('PollTypeDesc', parameters).subscribe((data: PollTypeDesc[]) => {\r\n      this.pollTypes = data;\r\n      console.log(this.pollTypes);\r\n    });\r\n  }\r\n\r\n  getPolls() {\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollDescs', {\r\n      language: this.appService.getFlag().code,\r\n      //status: 1\r\n    })\r\n        .subscribe(data => {\r\n          this.dataSource = new MatTableDataSource(data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          // if (data.errors === null || data.errors.length === 0) {\r\n          //   //this.contactForm.reset();\r\n          // }\r\n        });\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPoll($event) {\r\n    this.poll = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.poll = new Poll();\r\n    this.poll.pollDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PollDesc();\r\n      pd.language = flag.code;\r\n      pd.title = '';\r\n      pd.description = '';\r\n      pd.endNote = '';\r\n      this.poll.pollDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  addNew() {\r\n    this.clear();\r\n    this.selected.setValue(1);\r\n  }\r\n\r\n  getDescriptions(pollId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollId) {\r\n      parameters.push('e.poll.id = |pollId|' + pollId + '|Long');\r\n      this.appService.getAllByCriteria('PollDesc', parameters)\r\n      .subscribe((data: PollDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.poll = data[0].poll;\r\n          this.poll.pollDescs = data;\r\n\r\n          this.selected.setValue(1);\r\n\r\n          this.changeDetectedRef.detectChanges();\r\n\r\n          setTimeout(() => {\r\n            this.pollQuestionsView.poll = this.poll;\r\n            this.pollQuestionsView.getPollQuestions();\r\n          }, 500);\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all poll desc complete'));\r\n    }\r\n  }\r\n\r\n  setToggles() {\r\n    this.poll.status = (this.poll.status == null\r\n      || this.poll.status.toString() === 'false'\r\n      || this.poll.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      //this.setToggles();\r\n      const thisPoll = {...this.poll};\r\n      this.cleanDescriptions(thisPoll);\r\n\r\n      this.appService.save(thisPoll, 'Poll')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.poll, null);\r\n            this.poll = {...result};\r\n            this.onSave(this.poll);\r\n            this.selected.setValue(2);\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: Poll) {\r\n    p.pollDescs.forEach(element => {\r\n       element.poll = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(pDesc: PollDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.poll.id, 'Poll')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PollDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const p = $event;\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollDescs', {\r\n      id: p.id,\r\n      language: this.appService.getFlag().code\r\n    })\r\n    .subscribe(data => {\r\n      this.updateDatasourceData(this.dataSource, this.paginator, this.sort, data[0]);\r\n      this.selected.setValue(2);\r\n    });\r\n  }\r\n\r\n\r\n  onToggleGroupChange(event) {\r\n    this.poll.status = event.value;\r\n  }\r\n\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb2xsVHlwZS9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHBvbGxUeXBlXFxQb2xsVHlwZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbFR5cGUvUG9sbFR5cGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbFR5cGUvUG9sbFR5cGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PollTypeDesc, PollType } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pollTypes-component',\r\n  templateUrl: './PollTypes.component.html',\r\n  styleUrls: ['./PollTypes.component.scss']\r\n})\r\nexport class PollTypesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PollTypeDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  pollType: PollType = new PollType();\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('PollTypeDesc', parameters)\r\n      .subscribe((data: PollTypeDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all PollTypeDesc complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPollType($event) {\r\n    this.pollType = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.pollType = new PollType();\r\n    this.pollType.pollTypeDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PollTypeDesc();\r\n      pd.language = flag.code;\r\n      pd.name = '';\r\n      this.pollType.pollTypeDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(pollTypeId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollTypeId != null) {\r\n      parameters.push('e.pollType.id = |pollTypeId|' + pollTypeId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('PollTypeDesc', parameters)\r\n      .subscribe((data: PollTypeDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.pollType = data[0].pollType;\r\n          this.pollType.pollTypeDescs = data;\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all pollType desc complete'));\r\n  }\r\n\r\n\r\n  setToggles() {\r\n    this.pollType.status = (this.pollType.status == null\r\n      || this.pollType.status.toString() === 'false'\r\n      || this.pollType.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thispollType = {...this.pollType};\r\n      this.cleanDescriptions(thispollType);\r\n\r\n      this.appService.save(thispollType, 'PollType')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.pollType, null);\r\n            this.pollType = {...result};\r\n            this.onSave(this.pollType);\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: PollType) {\r\n    p.pollTypeDescs.forEach(element => {\r\n       element.pollType = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(pDesc: PollTypeDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.pollType.id, 'PollType')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PollTypeDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pol = $event;\r\n\r\n    let i = 0;\r\n    pol.pollTypeDescs.forEach(element => {\r\n        if (element.language === this.appService.getFlag().code) {\r\n          const pdesc = {...pol.pollTypeDescs[i]}\r\n          pdesc.pollType = pol;\r\n          if (!this.dataSource.data) {\r\n            this.dataSource.data = [];\r\n          }\r\n          this.updateDatasourceData(this.dataSource, this.paginator, this.sort, pdesc);\r\n        }\r\n        i++;\r\n    });\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb3NpdGlvbnMvQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxhY2NvdW50XFxwb3NpdGlvbnNcXFBvc2l0aW9ucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb3NpdGlvbnMvUG9zaXRpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9zaXRpb25zL1Bvc2l0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PositionDesc, Position } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-positions-component',\r\n  templateUrl: './Positions.component.html',\r\n  styleUrls: ['./Positions.component.scss']\r\n})\r\nexport class PositionsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PositionDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  position: Position = new Position();\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('PositionDesc', parameters)\r\n      .subscribe((data: PositionDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all PositionDesc complete'));\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.position = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.position = new Position();\r\n    this.position.positionDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PositionDesc();\r\n      pd.language = flag.code;\r\n      pd.name = '';\r\n      this.position.positionDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(positionId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (positionId != null) {\r\n      parameters.push('e.position.id = |positionId|' + positionId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('PositionDesc', parameters)\r\n      .subscribe((data: PositionDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.position = data[0].position;\r\n          this.position.positionDescs = data;\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all position desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.position.status = (this.position.status == null\r\n      || this.position.status.toString() === 'false'\r\n      || this.position.status.toString() === '0') ? 0 : 1;\r\n\r\n    this.position.leadership = (this.position.leadership == null\r\n      || this.position.leadership.toString() === 'false'\r\n      || this.position.leadership.toString() === '0') ? 0 : 1;\r\n\r\n\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisposition = { ...this.position };\r\n      this.cleanDescriptions(thisposition);\r\n\r\n      this.appService.save(thisposition, 'Position')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.position, null);\r\n            this.position = { ...result };\r\n            this.onSave(this.position);\r\n            console.log(this.position)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: Position) {\r\n    p.positionDescs.forEach(element => {\r\n      element.position = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(pDesc: PositionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.position.id, 'Position')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PositionDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pos = $event;\r\n\r\n    let i = 0;\r\n    pos.positionDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const pdesc = { ...pos.positionDescs[i] }\r\n        pdesc.position = pos;\r\n        if (!this.dataSource.data) {\r\n          this.dataSource.data = [];\r\n        }\r\n        this.updateDatasourceData(this.dataSource, this.paginator, this.sort, pdesc);\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from 'src/app/theme/utils/app-validators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public infoForm: FormGroup;\r\n  public passwordForm: FormGroup;\r\n  public resumeForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.infoForm = this.formBuilder.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      phone: ['', Validators.required],\r\n      currentPassword: ['', Validators.required],\r\n      newPassword: ['', Validators.required],\r\n      image: null,\r\n      organization: null,\r\n      facebook: null,\r\n      twitter: null,\r\n      linkedin: null,\r\n      instagram: null,\r\n      website: null,\r\n      shortResume: null,\r\n      longResume: null,\r\n      confirmNewPassword: ['', Validators.required]\r\n    }, { validator: matchingPasswords('newPassword', 'confirmNewPassword') });    \r\n  }\r\n\r\n  public onInfoFormSubmit(values: Object): void {\r\n    if (this.infoForm.valid) {\r\n      this.snackBar.open('Your account information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onPasswordFormSubmit(values: Object): void {\r\n    if (this.passwordForm.valid) {\r\n      this.snackBar.open('Your password changed successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy1saXN0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccHJvamVjdHMtbGlzdFxccHJvamVjdC1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3Byb2plY3RzLWxpc3QvcHJvamVjdC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcHJvamVjdHMtbGlzdC9wcm9qZWN0LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, Project } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.scss']\r\n})\r\nexport class ProjectListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'title', 'budget','owner', 'createDate','status'];\r\n  dataSource: MatTableDataSource<Project>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    if(this.tokenStorage.getRole()==='30'){\r\n      parameters.push('e.user.id = |abc|' + this.tokenStorage.getUserId() + '|Long');\r\n    }\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(proj : Project) {\r\n    const index: number = this.dataSource.data.indexOf(proj);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(proj.id, 'Project')\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Project>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".ng-tns-c11-6 .ng-star-inserted .ui-autocomplete-list-item span {\\n  overflow: auto;\\n  min-width: 360px;\\n  min-height: 25px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHByb2plY3RzXFxwcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3Byb2plY3RzL3Byb2plY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0gsZ0JBQUE7RUFDQSwyQkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy9wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXRucy1jMTEtNiAubmctc3Rhci1pbnNlcnRlZCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSBzcGFue1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcblx0bWluLXdpZHRoOiAzNjBweDtcclxuXHRtaW4taGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7IFxyXG59IiwiLm5nLXRucy1jMTEtNiAubmctc3Rhci1pbnNlcnRlZCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSBzcGFuIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1pbi13aWR0aDogMzYwcHg7XG4gIG1pbi1oZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Project } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-project-component',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent extends BaseComponent implements OnInit {\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  project: Project = new Project();\r\n  projects: Project[] = [];\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.project === null) {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  public deleteFile(project: Project, fileName: string) {\r\n    const vo = { id: project.id, name: fileName };\r\n    this.appService.deleteFile('Project', vo)\r\n      .subscribe(data => {\r\n        this.removeElement(this.project.fileNames, fileName);\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n      } else {\r\n        this.getProject(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getProject(projectId: number) {\r\n    this.appService.getOneWithChildsAndFiles(projectId, 'Project')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.project = result;\r\n\r\n          console.log(this.project);\r\n          const images: any[] = [];\r\n          this.project.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/projects/' + projectId + '/' + item,\r\n              preview: 'assets/images/projects/' + projectId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.project.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n    this.project.remainingFileNames = [];\r\n\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        console.log('Additional file added: ' + 'picture.' + this.files[i].file.name);\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      } else {\r\n        console.log(this.files[i]);\r\n        const pathSplitArray = this.files[i].link.split('/');\r\n        this.project.remainingFileNames.push(pathSplitArray[pathSplitArray.length - 1]);\r\n      }\r\n    }\r\n\r\n\r\n    //this.project.status = (this.project.status == null || this.project.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.project, 'Project', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            console.log('saveWithFile');\r\n            this.project = result;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(this.project, 'Pwroject')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.project = result;\r\n            console.log('Saved');\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.project = new Project();\r\n  }\r\n\r\n  onToggleGroupChange(event) {\r\n    this.project.status = event.value;\r\n  }\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wdWJsaWNpdHkvQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxhY2NvdW50XFxwdWJsaWNpdHlcXFB1YmxpY2l0aWVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3B1YmxpY2l0eS9QdWJsaWNpdGllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3B1YmxpY2l0eS9QdWJsaWNpdGllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Publicity } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-publicities-component',\r\n  templateUrl: './Publicities.component.html',\r\n  styleUrls: ['./Publicities.component.scss']\r\n})\r\nexport class PublicitiesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'url', 'beginDate', 'endDate', 'rank', 'cost', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<Publicity>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  publicity: Publicity = new Publicity();\r\n  selected = new FormControl(0);\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Publicity', parameters)\r\n      .subscribe((data: Publicity[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Publicity complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setMeetingReport($event) {\r\n    this.publicity = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.publicity = new Publicity();\r\n  }\r\n\r\n  getPublicity(publicityId: number) {\r\n    this.appService.getOneWithChildsAndFiles(publicityId, 'Publicity')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.publicity = result;\r\n          const images: any[] = [];\r\n          this.publicity.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/publicitys/' + publicityId + '/' + item,\r\n              preview: 'assets/images/publicitys/' + publicityId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  setToggles() {\r\n    this.publicity.status = (this.publicity.status == null\r\n      || this.publicity.status.toString() === 'false'\r\n      || this.publicity.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.publicity.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.publicity.status = (this.publicity.status == null || this.publicity.status.toString() === 'false') ? 0 : 1;\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.publicity, 'Publicity', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.publicity, null);\r\n          this.publicity = result;\r\n          this.onSave(this.publicity);\r\n        });\r\n    } else {\r\n      this.appService.save(this.publicity, 'Publicity')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.publicity, null);\r\n          this.publicity = result;\r\n          this.onSave(this.publicity);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  public remove(pub: Publicity) {\r\n    this.messages = '';\r\n    this.appService.delete(pub.id, 'Publicity')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pub);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Publicity>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccmVndWxhdGlvblxccmVndWxhdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL3JlZ3VsYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyx3QkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL3JlZ3VsYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucWwtc25vdyB7XHJcblx0aGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xyXG59IiwiLnFsLXNub3cge1xuICBoZWlnaHQ6IDUwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { StatusText, Regulation } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-regulation-component',\r\n  templateUrl: './regulation.component.html',\r\n  styleUrls: ['./regulation.component.scss']\r\n})\r\nexport class RegulationComponent extends BaseComponent implements OnInit {\r\n\r\n  regulation: Regulation = new Regulation();\r\n  messages: any;\r\n  error: string;\r\n  flag : any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flag = this.appService.getFlag();\r\n    this.regulation.language = this.flag.code;\r\n    this.getRegulation(this.flag);\r\n  }\r\n\r\n getRegulation(flag: any) {\r\n   this.messages = '';\r\n   this.regulation = new Regulation();\r\n   this.flag = flag ? flag : this.appService.getFlag();\r\n   this.regulation.language = this.flag.code;\r\n\r\n   const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('Regulation', parameters).subscribe((data: Regulation[]) => {\r\n      data.forEach((regulation) => {\r\n        if ( this.flag.code === regulation.language) {\r\n          this.regulation = regulation;\r\n        }\r\n      });\r\n\r\n    });\r\n }\r\n\r\n\r\n save() {\r\n    this.regulation.modifiedBy = +this.tokenStorage.getUserId();\r\n      this.appService.save(this.regulation, 'Regulation')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.regulation, undefined);\r\n        });\r\n    }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2VjdGlvbi1pdGVtcy9zZWN0aW9uLWl0ZW1zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Section, SectionItem } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-section-items',\r\n  templateUrl: './section-items.component.html',\r\n  styleUrls: ['./section-items.component.scss']\r\n})\r\nexport class SectionItemsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'lang', 'actions'];\r\n  dataSource: MatTableDataSource<SectionItem>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  section: Section = new Section();\r\n  menus = [{ name: 'SERVICES' }, { name: 'EXPERTISE' }, { name: 'ABOUTUS' }];\r\n  sectionItem: SectionItem = new SectionItem();\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  formData = new FormData();\r\n  flag: any;\r\n  sectionImages: any;\r\n  messages = '';\r\n  selectedTab = 1;\r\n  selectedMainTabIndex = 1;\r\n  icons: string[] = ['build', 'add', 'add_circle', 'cancel', 'trending_up', 'business',\r\n    'school', 'record_voice_over', 'search', 'dashboard', 'radio', 'touch_app', 'movie',\r\n    'person','people','addchart','extension','language','psychology','wb_sunny','highlight',\r\n    'thumbs_up_down','share','public','science','self_improvement','model_training',\r\n    'headset','hearing','headset_mic','biotech','miscellaneous_services','analytics'];\r\n  constructor(public appService: AppService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.setLang();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id == 0) {\r\n        this.section = new Section();\r\n        this.section.language = this.flag.code;\r\n        this.sectionItem = new SectionItem();\r\n        this.dataSource = new MatTableDataSource();\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      } else {\r\n        this.getAll(params.id);\r\n        this.getSection(params.id);\r\n      }\r\n    });\r\n  }\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.section === null) {\r\n      this.section = new Section();\r\n    }\r\n    this.section.language = flag.code;\r\n  }\r\n\r\n  setLang() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 1) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n  getAll(sectionId: number) {\r\n    const parameters: string[] = [];\r\n    if (sectionId != null) {\r\n      parameters.push('e.section.id = |sectionId|' + sectionId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('com.wack.model.website.SectionItem', parameters)\r\n      .subscribe((data: SectionItem[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Section Item complete'));\r\n  }\r\n\r\n  public remove(section: SectionItem) {\r\n    this.messages = '';\r\n    this.appService.delete(section.id, 'com.wack.model.website.SectionItem')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(section);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<SectionItem>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getSection(sectionId: number) {\r\n    if (sectionId > 0)\r\n      this.appService.getOne(sectionId, 'com.wack.model.website.Section')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.section = result;\r\n            if (this.section.language === 'fr') {\r\n              this.flag = this.flags[0];\r\n            } else {\r\n              this.flag = this.flags[1];\r\n            }\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.section = new Section();\r\n    this.section.language = this.flag.code;\r\n    this.sectionItem = new SectionItem();\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  addSectionItem() {\r\n    this.selectedTab = 1;\r\n    this.sectionItem = new SectionItem();\r\n  }\r\n  saveSection() {\r\n    this.messages = '';\r\n    try {\r\n      let nbFiles = 0;\r\n      for (const img of this.sectionImages) {\r\n        nbFiles++;\r\n        this.formData.append('file[]', img.file, 'picture.jpg');\r\n      }\r\n      console.log('Lang == ' + this.section.language);\r\n      if (this.section.language == null || this.section.language == '' ||\r\n        this.section.language == 'undefined') {\r\n        this.section.language = this.flag.code;\r\n      }\r\n      this.section.status = (this.section.status == null || this.section.status.toString() === 'false') ? 0 : 1;\r\n      this.section.showInMenu = (this.section.showInMenu == null || this.section.showInMenu.toString() === 'false') ? 0 : 1;\r\n\r\n      if (this.sectionImages.length > 0) {\r\n        this.appService.saveWithFile(this.section, 'Section', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              console.log('saveWithFile');\r\n              this.section = result;\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.section, 'Section')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.section = result;\r\n              console.log('Saved');\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  edit(si: SectionItem) {\r\n    this.sectionItem = si;\r\n    this.selectedTab = 1;\r\n  }\r\n  saveSectionItem() {\r\n    this.messages = '';\r\n    try {\r\n      this.messages = '';\r\n      this.sectionItem.section = this.section;\r\n      this.sectionItem.language = this.section.language;\r\n      const index: number = this.dataSource.data.indexOf(this.sectionItem);\r\n      this.sectionItem.status = (this.sectionItem.status == null || this.sectionItem.status.toString() === 'false') ? 0 : 1;\r\n      this.sectionItem.showInMenu = (this.sectionItem.showInMenu == null || this.sectionItem.showInMenu.toString() === 'false') ? 0 : 1;\r\n      this.appService.save(this.sectionItem, 'SectionItem')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.sectionItem = new SectionItem();\r\n            this.selectedTab = 0;\r\n            if (index !== -1) {\r\n              this.dataSource.data.splice(index, 1);\r\n            }\r\n            this.dataSource.data.push(result);\r\n            this.dataSource = new MatTableDataSource<SectionItem>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.selectedTab = 1;\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2VjdGlvbnMvc2VjdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Section } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.scss']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'name', 'title', 'lang', 'actions'];\r\n  dataSource: MatTableDataSource<Section>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\nmessages='';\r\n  constructor(public appService: AppService,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('com.wack.model.website.Section', parameters)\r\n      .subscribe((data: Section[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Section complete'));\r\n  }\r\n\r\n  public remove(section: Section) {\r\n    this.messages = '';\r\n        this.appService.delete(section.id, 'com.wack.model.website.Section')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(section);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Section>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zZXR0aW5ncy9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHNldHRpbmdzXFxTZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zZXR0aW5ncy9TZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3NldHRpbmdzL1NldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-settings-component',\r\n  templateUrl: './Settings.component.html',\r\n  styleUrls: ['./Settings.component.scss']\r\n})\r\nexport class SettingsComponent extends BaseComponent implements OnInit {\r\n\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private changeDetectedRef: ChangeDetectorRef) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2xpZGVyLWl0ZW1zL3NsaWRlci1pdGVtcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Slider } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-slider-items',\r\n  templateUrl: './slider-items.component.html',\r\n  styleUrls: ['./slider-items.component.scss']\r\n})\r\nexport class SliderItemsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  slider: Slider = new Slider();\r\n  menus = [{ name: 'SERVICES' }, { name: 'EXPERTISE' }];\r\n  \r\n  formData = new FormData();\r\n  flag: any;\r\n  sliderImages: any;\r\n  messages = '';\r\n  selectedTab = 1;\r\n  selectedMainTabIndex = 1;\r\n  icons: string[] = ['build', 'add', 'add_circle', 'cancel', 'trending_up', 'business',\r\n    'school', 'record_voice_over', 'search', 'dashboard', 'radio', 'touch_app', 'movie',\r\n    'person','people','addchart','extension','language','psychology','wb_sunny','highlight',\r\n    'thumbs_up_down','share','public','science','self_improvement','model_training',\r\n    'headset','hearing','headset_mic','biotech','miscellaneous_services','analytics'];\r\n\r\n  constructor(public appService: AppService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.setLang();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.slider = new Slider();\r\n      } else {\r\n        this.getSlider(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  setLang() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 1) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n\r\n\r\n  getSlider(sliderId: number) {\r\n    if (sliderId > 0)\r\n      this.appService.getOne(sliderId, 'com.wack.model.website.Slider')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.slider = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.slider = new Slider();\r\n  }\r\n\r\n\r\n  saveSlider() {\r\n    this.messages = '';\r\n    try {\r\n      let nbFiles = 0;\r\n      for (const img of this.sliderImages) {\r\n        nbFiles++;\r\n        this.formData.append('file[]', img.file, 'picture.jpg');\r\n      }\r\n\r\n      this.slider.status = (this.slider.status == null || this.slider.status.toString() === 'false') ? 0 : 1;\r\n      \r\n      if (this.sliderImages.length > 0) {\r\n        this.appService.saveWithFile(this.slider, 'Slider', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              console.log('saveWithFile');\r\n              this.slider = result;\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.slider, 'Slider')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.slider = result;\r\n              console.log('Saved');\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2xpZGVycy9zbGlkZXJzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Slider } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './sliders.component.html',\r\n  styleUrls: ['./sliders.component.scss']\r\n})\r\nexport class SlidersComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'image', 'name', 'actions'];\r\n  dataSource: MatTableDataSource<Slider>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\nmessages='';\r\n  constructor(public appService: AppService,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('com.wack.model.website.Slider', parameters)\r\n      .subscribe((data: Slider[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Slider complete'));\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxcc3RhdHVzVGV4dFxcc3RhdHVzVGV4dC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L3N0YXR1c1RleHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyx3QkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L3N0YXR1c1RleHQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucWwtc25vdyB7XHJcblx0aGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xyXG59IiwiLnFsLXNub3cge1xuICBoZWlnaHQ6IDUwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { StatusText } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-statusText-component',\r\n  templateUrl: './statusText.component.html',\r\n  styleUrls: ['./statusText.component.scss']\r\n})\r\nexport class StatusTextComponent extends BaseComponent implements OnInit {\r\n\r\n  statusText: StatusText = new StatusText();\r\n  messages: any;\r\n  error: string;\r\n  flag : any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flag = this.appService.getFlag();\r\n    this.statusText.language = this.flag.code;\r\n    this.getStatusText(this.flag);\r\n  }\r\n\r\n getStatusText(flag: any) {\r\n   this.messages = '';\r\n   this.statusText = new StatusText();\r\n   this.flag = flag ? flag : this.appService.getFlag();\r\n   this.statusText.language = this.flag.code;\r\n\r\n   console.log('Flag is set ...');\r\n\r\n   const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('StatusText', parameters).subscribe((data: StatusText[]) => {\r\n      data.forEach((statusText) => {\r\n        if ( this.flag.code === statusText.language) {\r\n          this.statusText = statusText;\r\n        }\r\n      });\r\n\r\n    });\r\n }\r\n\r\n\r\n save() {\r\n    this.statusText.modifiedBy = +this.tokenStorage.getUserId();\r\n      this.appService.save(this.statusText, 'StatusText')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.statusText, undefined);\r\n        });\r\n    }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdHJhbnNhY3Rpb24tbGlzdC90cmFuc2FjdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, Transaction } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TransactionComponent } from '../transaction/transaction.component';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss']\r\n})\r\nexport class TransactionListComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'tranDate', 'memberName', 'projectTitle', 'amount', 'actions' ];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  @ViewChild(TransactionComponent, { static: false }) transactionView: TransactionComponent;\r\n\r\n  selected = new FormControl(0);\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('Transaction', parameters).subscribe((data: Transaction[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(transaction : Transaction) {\r\n    const index: number = this.dataSource.data.indexOf(transaction);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(transaction.id, 'Transaction')\r\n      .subscribe(data => {\r\n          this.processDeleteResult(data, this.messages);\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Transaction>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.transactionView.getTransaction(id);\r\n    this.selected.setValue(1);\r\n  }\r\n\r\n  saveEventListener(trans: Transaction) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, trans);\r\n  }\r\n}","import { Component, OnInit, EventEmitter, Output, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Transaction, User, Project } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'app-onlinepayment-component',\r\n  templateUrl: './online-payment.component.html',\r\n  styleUrls: ['./transaction.component.scss']\r\n})\r\nexport class OnlinePaymentComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('stepper') private myStepper: MatStepper;\r\n\r\n  transaction: Transaction = new Transaction();\r\n  result = {};\r\n  @Output() saveEvent = new EventEmitter<any>();\r\n\r\n  currentProjectOption: string;\r\n  projectOptions: Project[];\r\n  filteredProjectOptions: Project[];\r\n\r\n  stripe;\r\n  errors: string;\r\n  data: any;\r\n\r\n  action = 'processing';\r\n\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getActiveProjects();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      setTimeout(() => {\r\n         this.setStripeSecret();\r\n      }, 500);\r\n\r\n      this.transaction.currencyCode = 'USD';\r\n   }\r\n\r\n  setStripeSecret() {\r\n     this.appService.getObject('/service/Payment/stripe-key').toPromise()\r\n      .then(result => {\r\n        this.stripe = Stripe(result.publishableKey);\r\n      });\r\n  }\r\n\r\n  createPaymentIntent() {\r\n\r\n     this.appService.saveWithUrl('/service/Payment/clientSecret', this.transaction).toPromise()\r\n      .then(result => {\r\n        return result;\r\n      })\r\n      .then(data => {\r\n          return this.setupElements(data);\r\n      })\r\n      .then(data => {\r\n        this.data = data;\r\n        document.querySelector('button').disabled = false;\r\n        document.getElementById('submit').removeAttribute('disabled');\r\n\r\n        const form = document.getElementById('payment-form');\r\n        form.addEventListener('submit', this.handleCardSave.bind(this));\r\n      });\r\n  }\r\n\r\n  setupElements(data) {\r\n      // this.stripe = Stripe(data.publishableKey);\r\n\r\n      /* ------- Set up Stripe Elements to use in checkout form ------- */\r\n      const elements = this.stripe.elements();\r\n      const style = {\r\n         base: {\r\n            color: '#32325d',\r\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n            fontSmoothing: 'antialiased',\r\n            fontSize: '16px',\r\n            '::placeholder': {\r\n               color: '#aab7c4'\r\n            }\r\n         },\r\n         invalid: {\r\n            color: '#fa755a',\r\n            iconColor: '#fa755a'\r\n         }\r\n      };\r\n\r\n      const card = elements.create('card', { style });\r\n      const element = document.getElementById('card-element')\r\n      card.mount('#card-element');\r\n\r\n      return {\r\n         stripe: this.stripe,\r\n         card,\r\n         clientSecret: data.clientSecret\r\n      };\r\n   }\r\n\r\n   handleCardSave(event) {\r\n      event.preventDefault();\r\n      document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n      this.submitPayment(this.data.stripe, this.data.card, this.data.clientSecret, this.translate,\r\n        this.result, this.myStepper, this.save, this.appService, this.transaction, this.tokenStorage.getUserId(), this.processResult);\r\n   }\r\n\r\n  submitPayment(stripe, card, clientSecret, translate, myResult, myStepper, saveFct, appService, transaction, userId, processResult) {\r\n    this.errors = '';\r\n    stripe\r\n         .confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card\r\n      }\r\n    })\r\n    .then(function(result) {\r\n      if (result.error) {\r\n        // Show error to your customer\r\n        //showError(result.error.message);\r\n        translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n          myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n        });\r\n        document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n      } else {\r\n        // The payment succeeded!\r\n        //orderComplete(result.paymentIntent.id);\r\n        translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n          myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n        });\r\n        saveFct(appService, transaction, userId, translate, myResult);\r\n      }\r\n      myStepper.selected.completed = true;\r\n      myStepper.next();\r\n    });\r\n  }\r\n\r\n  public getActiveProjects() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.projectOptions = data;\r\n      this.filteredProjectOptions = data;\r\n    });\r\n  }\r\n\r\n  save(appService, transaction, userId, translate, myResult) {\r\n\r\n    myResult.errors = undefined;\r\n    myResult.messages = undefined;\r\n\r\n    transaction.modifiedBy = +userId;\r\n    transaction.user = new User();\r\n    transaction.user.id = +userId;\r\n    transaction.io = 0;\r\n\r\n    appService.save(transaction, 'Transaction')\r\n      .subscribe(result => {\r\n        if (result.errors === null || result.errors.length === 0) {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n          });\r\n        } else {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  filterProjectOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();\r\n        this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredProjectOptions = this.projectOptions;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.transaction = new Transaction();\r\n  }\r\n\r\n  goBack(){\r\n    this.myStepper.previous();\r\n  }\r\n\r\n  goForward(){\r\n    this.myStepper.selected.completed = true;\r\n    this.myStepper.next();\r\n\r\n    if (this.myStepper.selectedIndex === 2) {\r\n      this.createPaymentIntent();\r\n    }\r\n  }\r\n\r\n  saveTransaction() {\r\n\r\n    this.myStepper.next();\r\n    this.transaction.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.transaction.user = new User();\r\n    this.transaction.user.id = +this.tokenStorage.getUserId();\r\n\r\n\r\n      this.appService.saveWithUrl('/service/Payment/saveTransaction', this.transaction)\r\n        .subscribe(data => {\r\n          if (data.errors === null || data.errors.length === 0) {\r\n            this.translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.CARD_PAYMENT_FAILED', 'MESSAGE.' + data.errors[0]]).subscribe(res => {\r\n            this.errors = res['MESSAGE.' + data.errors[0]];\r\n            console.log('Erreur ' + data.errors[0]);\r\n          });\r\n          }\r\n\r\n          this.action = 'complete';\r\n          this.myStepper.selected.completed = true;\r\n          this.myStepper.next();\r\n        });\r\n  }\r\n\r\n}","export default \".mat-radio-button ~ .mat-radio-button {\\n  margin-left: 42px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC90cmFuc2FjdGlvbi9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHRyYW5zYWN0aW9uXFx0cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC90cmFuc2FjdGlvbi90cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3RyYW5zYWN0aW9uL3RyYW5zYWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yYWRpby1idXR0b24gfiAubWF0LXJhZGlvLWJ1dHRvbiB7ICBcclxuICBtYXJnaW4tbGVmdDogNDJweDsgIFxyXG59ICAiLCIubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDQycHg7XG59Il19 */\";","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Transaction, User, Project } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-transaction-component',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.scss']\r\n})\r\nexport class TransactionComponent extends BaseComponent implements OnInit {\r\n\r\n  public flag: any;\r\n  transaction: Transaction = new Transaction();\r\n  messages: any;\r\n  error: string;\r\n  @Output() saveEvent = new EventEmitter<any>();\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  currentUserOption: string;\r\n  userOptions: User[];\r\n  filteredUserOptions: User[];\r\n\r\n  currentProjectOption: string;\r\n  projectOptions: Project[];\r\n  filteredProjectOptions: Project[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getActiveUsers();\r\n    this.getActiveProjects();\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.userOptions = data;\r\n      this.filteredUserOptions = data;\r\n    });\r\n  }\r\n\r\n  public getActiveProjects() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.projectOptions = data;\r\n      this.filteredProjectOptions = data;\r\n    });\r\n  }\r\n\r\n  getTransaction(transactionId: number) {\r\n\r\n    if (transactionId) {\r\n      this.appService.getOneWithChildsAndFiles(transactionId, 'Transaction')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.transaction = result;\r\n            console.log(this.transaction);\r\n            this.currentUserOption = this.transaction.user.name;\r\n            this.currentProjectOption = this.transaction.project.title;\r\n\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.transaction = new Transaction();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.transaction.modifiedBy = +this.tokenStorage.getUserId();\r\n\r\n    this.appService.save(this.transaction, 'Transaction')\r\n      .subscribe(result => {\r\n        this.processResult(result, this.transaction, null);\r\n        this.transaction = {...result};\r\n        this.saveEvent.emit(this.transaction);\r\n      });\r\n  }\r\n\r\n\r\n  filterUserOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.name.toLowerCase();\r\n        this.filteredUserOptions = this.userOptions.filter(element => element.name.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredUserOptions = this.userOptions;\r\n    }\r\n  }\r\n\r\n  filterProjectOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();\r\n        this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredProjectOptions = this.projectOptions;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.transaction = new Transaction();\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, Employee } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'name', 'email', 'phone', 'actions' ];\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(user : User) {\r\n    const index: number = this.dataSource.data.indexOf(user);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(user.id, 'User')\r\n      .subscribe(data => {\r\n          \r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<User>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, Employee, PositionDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-component',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<User>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public userGroups = [];\r\n  public flag: any;\r\n  user: User = new User();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  picture: any[] =[];\r\n  activePositions: PositionDesc[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    public translate: TranslateService,\r\n    public tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n    super(translate, tokenStorage);\r\n    if (this.translate.currentLang === 'fr') {\r\n      this.userGroups = [\r\n        { id: 1, name: 'Admin', type: 'UserGroup'},\r\n        { id: 10, name: 'Editeur', type: 'UserGroup' },\r\n        { id: 20, name: 'Financier', type: 'UserGroup' },\r\n        { id: 30, name: 'Membre', type: 'UserGroup' }\r\n      ];\r\n    } else {\r\n      this.userGroups = [\r\n        { id: 1, name: 'Admin', type: 'UserGroup' },\r\n        { id: 10, name: 'Editor', type: 'UserGroup' },\r\n        { id: 20, name: 'Finance', type: 'UserGroup' },\r\n        { id: 30, name: 'Member', type: 'UserGroup' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  public deleteFile(user: User, fileName: string) {\r\n    const vo = {id: user.id, name: fileName};\r\n    this.appService.deleteFile('com.wack.model.User', vo)\r\n      .subscribe(data => {\r\n      });\r\n  }\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.getActivePositions();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id !== undefined) {\r\n        this.getUser(params.id);\r\n      } else {\r\n        this.getUser(+this.tokenStorage.getUserId());\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getUser(userId: number) {\r\n    if (userId === 0) {\r\n      this.user = new User();\r\n    }\r\n\r\n    if (userId > 0)\r\n      this.appService.getOneWithChildsAndFiles(userId, 'User')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.user = result;\r\n            this.user.confirmPassword = this.user.password;\r\n            const images: any[] = [];\r\n            this.user.fileNames.forEach(item=>{\r\n              const image = {\r\n                link: 'assets/images/users/' + userId + '/' + item,\r\n              preview: 'assets/images/users/' + userId + '/' + item\r\n              }\r\n              images.push(image);\r\n            })\r\n\r\n            this.picture = images;\r\n\r\n            if (this.user.employees && this.user.employees.length > 0) {\r\n              this.user.shortResume = this.user.employees[0].shortResume;\r\n              this.user.resume = this.user.employees[0].resume;\r\n            }\r\n\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  public getActivePositions() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.position.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('PositionDesc', parameters).subscribe((data: PositionDesc[]) => {\r\n      this.activePositions = data;\r\n    });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    this.user.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    this.user.status = (this.user.status == null || this.user.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if  (this.picture && this.picture.length>0 && this.picture[0].file) {\r\n      this.formData.append('file[]', this.picture[0].file, 'picture.' + this.picture[0].file.name);\r\n    }\r\n\r\n    if (this.user.userGroup.id !== 4 && this.user.employees) {\r\n      if (this.user.employees.length === 0) {\r\n        // Adding an employee model to user\r\n        const employee = new Employee();\r\n        employee.resume = this.user.resume;\r\n        employee.shortResume = this.user.shortResume;\r\n        this.user.employees.push(employee);\r\n      } else {\r\n        this.user.employees[0].shortResume = this.user.shortResume;\r\n        this.user.employees[0].resume = this.user.resume;\r\n      }\r\n    }\r\n\r\n    this.appService.saveWithFile(this.user, 'User', this.formData, 'saveWithFile')\r\n      .subscribe(data => {\r\n        this.processResult(data, this.user, null)\r\n        this.user = data;\r\n\r\n        this.user.confirmPassword = this.user.password;\r\n        if (this.user.employees && this.user.employees.length > 0) {\r\n          this.user.shortResume = this.user.employees[0].shortResume;\r\n          this.user.resume = this.user.employees[0].resume;\r\n        }\r\n\r\n      });\r\n\r\n  }\r\n\r\n  clear() {\r\n\r\n  }\r\n\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC92aWRlby9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHZpZGVvXFxWaWRlb3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdmlkZW8vVmlkZW9zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdmlkZW8vVmlkZW9zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MeetingReport, MeetingReportDesc, User, Publicity, Video } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-videos-component',\r\n  templateUrl: './Videos.component.html',\r\n  styleUrls: ['./Videos.component.scss']\r\n})\r\nexport class VideosComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'videoDate', 'rank', 'status', 'vote', 'voteCount', 'actions'];\r\n  dataSource: MatTableDataSource<Publicity>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  video: Video = new Video();\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Video', parameters)\r\n      .subscribe((data: Publicity[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Video complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setVideo($event) {\r\n    this.video = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.video = new Video();\r\n  }\r\n\r\n  getVote(videoId: number) {\r\n    this.appService.getOneWithChildsAndFiles(videoId, 'Video')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.video = result;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.video.modifiedBy = +this.tokenStorage.getUserId();\r\n\r\n    this.appService.save(this.video, 'Video')\r\n      .subscribe(result => {\r\n        this.processResult(result, this.video, null);\r\n        this.video = result;\r\n        this.onSave(this.video);\r\n      });\r\n  }\r\n\r\n\r\n  public remove(video: Video) {\r\n    this.messages = '';\r\n    this.appService.delete(video.id, 'Video')\r\n      .subscribe(resp => {\r\n        this.processDeleteResult(resp, this.messages);\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n"]}