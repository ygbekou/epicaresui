(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-payment-payment-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/payment/payment.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/payment/payment.component.html ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"theme-container\">\r\n\r\n  <mat-horizontal-stepper [linear]=\"true\" *ngIf=\"action === 'processing'\" #stepper>\r\n    <mat-step completed=\"false\">\r\n      <ng-template matStepLabel>{{'COMMON.PROJECT'|translate}}</ng-template>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n          <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'COMMON.SELECT_PROJECT'|translate}}\" aria-label=\"Number\"\r\n            name=\"currentProjectOption\" matInput [matAutocomplete]=\"projectOptionAuto\"\r\n            [(ngModel)]=\"currentProjectOption\" required (ngModelChange)=\"filterProjectOptions(currentProjectOption)\"\r\n            [disabled]=\"projectId && projectId !== 0\">\r\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\r\n          <mat-autocomplete id=\"projOption\" #projectOptionAuto=\"matAutocomplete\">\r\n            <mat-option *ngFor=\"let pOption of filteredProjectOptions \" [value]=\"pOption.title\"\r\n              (onSelectionChange)=\"transaction.project = pOption;\">\r\n              {{pOption.title}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <button mat-raised-button color=\"secondary\" (click)=\"goBack()\" type=\"button\">Back</button>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"goForward()\" style=\"float: right;\"\r\n            [disabled]=\"!transaction.project\" type=\"button\">Next</button>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-step>\r\n    <mat-step completed=\"false\">\r\n      <ng-template matStepLabel>{{'COMMON.AMOUNT'|translate}}</ng-template>\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n            <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\r\n            <input matInput type=\"text\" class=\"form-control\" id=\"amount\" [(ngModel)]=\"transaction.amount\" name=\"amount\"\r\n              #amount=\"ngModel\" required>\r\n            <mat-error *ngIf=\"amount.invalid\" severity=\"error\">\r\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <mat-form-field appearance=\"outline\" class=\"w-100 mb-3\">\r\n            <mat-label>{{'COMMON.CURRENCY' | translate}}</mat-label>\r\n            <mat-select placeholder=\"{{'COMMON.SELECT' | translate}}\" [compareWith]=\"compareObjects\" id=\"currency\"\r\n              name=\"currency\" [(ngModel)]=\"transaction.currencyCode\">\r\n              <mat-option [value]=\"'USD'\">\r\n                USD\r\n              </mat-option>\r\n              <mat-option [value]=\"'XOF'\">\r\n                CFA\r\n              </mat-option>\r\n              <mat-option [value]=\"'EUR'\">\r\n                EUR\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <button mat-raised-button color=\"secondary\" (click)=\"goBack()\" type=\"button\">Back</button>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-3\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"goForward()\" style=\"float: right;\"\r\n            [disabled]=\"amount.invalid\" type=\"button\">Next</button>\r\n        </div>\r\n      </div>\r\n    </mat-step>\r\n    <mat-step>\r\n      <ng-template matStepLabel>{{'COMMON.PAY'|translate}}</ng-template>\r\n\r\n      <mat-radio-group [(ngModel)]=\"transaction.paymentMethod\">\r\n        <mat-radio-button value=\"CARD\" *ngIf=\"appService.company.acceptCardPayment\" style=\"margin-right: 50px;\">\r\n          {{'COMMON.CREDIT_CARD'|translate}}\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"TMONEY\" *ngIf=\"appService.company.acceptTmoneyPayment\" style=\"margin-right: 50px;\">\r\n          TMoney\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"FLOOZ\" *ngIf=\"appService.company.acceptFloozPayment\" style=\"margin-right: 50px;\">\r\n          Flooz\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <div [hidden]=\"transaction.paymentMethod !== 'CARD'\">\r\n        <form id=\"payment-form\">\r\n          <div id=\"card-element\">\r\n            <!--Stripe.js injects the Card Element-->\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <button id=\"submit\" mat-raised-button color=\"primary\">\r\n            <div class=\"spinner hidden\" id=\"spinner\"></div>\r\n            <span id=\"button-text\">{{'COMMON.PAY'|translate}}</span>\r\n            <!-- <mat-icon>save</mat-icon> -->\r\n            <span id=\"order-amount\"></span>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div [hidden]=\"transaction.paymentMethod !== 'TMONEY' && transaction.paymentMethod !== 'FLOOZ'\">\r\n        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\r\n          <input matInput type=\"text\" class=\"form-control\" id=\"phone\" [(ngModel)]=\"transaction.phone\" name=\"phone\"\r\n            #phone=\"ngModel\" required>\r\n          <mat-error *ngIf=\"phone.invalid\" severity=\"error\">\r\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"100\" class=\"p-3\">\r\n            <div class=\"text-center mt-2\">\r\n              <button mat-raised-button color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"center center\"\r\n                (click)=\"saveTransaction()\">\r\n                <span class=\"mx-1 uppercase\">{{'COMMON.PAY' | translate}}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-step>\r\n    <mat-step>\r\n\r\n      <mat-error *ngIf=\"errors\" severity=\"error\">\r\n        <h3>{{ errors }}</h3>\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"messages\" severity=\"message\">\r\n        <h3>{{ messages }}</h3>\r\n      </mat-error>\r\n\r\n      <mat-spinner *ngIf=\"!messages && !errors\"> Payment processing. Please don't close ...</mat-spinner>\r\n\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33\" class=\"p-3\">\r\n          <mat-label> {{'COMMON.PROJECT' | translate}}: {{transaction.project.title}} </mat-label>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33\" class=\"p-3\">\r\n          <mat-label> {{'COMMON.AMOUNT' | translate}}: {{transaction.amount}} </mat-label>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33\" class=\"p-3\">\r\n          <mat-label> {{'COMMON.CURRENCY' | translate}}: {{transaction.currencyCode}} </mat-label>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-step>\r\n  </mat-horizontal-stepper>\r\n\r\n  <div fxLayout=\"row wrap\" *ngIf=\"action === 'complete'\" style=\"height: 100px;\">\r\n    <mat-error *ngIf=\"errors\" severity=\"error\">\r\n        <h3>{{ errors }}</h3>\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"messages\" severity=\"message\">\r\n        <h3>{{ messages }}</h3>\r\n      </mat-error>\r\n  </div>\r\n\r\n</div>");

/***/ }),

/***/ "./src/app/pages/payment/payment.component.ts":
/*!****************************************************!*\
  !*** ./src/app/pages/payment/payment.component.ts ***!
  \****************************************************/
/*! exports provided: PaymentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentComponent", function() { return PaymentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_app_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/app.service */ "./src/app/app.service.ts");
/* harmony import */ var src_app_app_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/app.models */ "./src/app/app.models.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
/* harmony import */ var src_app_app_settings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/app.settings */ "./src/app/app.settings.ts");
/* harmony import */ var src_app_shared_baseComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/baseComponent */ "./src/app/shared/baseComponent.ts");
/* harmony import */ var src_app_token_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/token.storage */ "./src/app/token.storage.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_material_stepper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/stepper */ "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (undefined && undefined.__importDefault) || function (mod) {
  return (mod && mod.__esModule) ? mod : { "default": mod };
};









let PaymentComponent = class PaymentComponent extends src_app_shared_baseComponent__WEBPACK_IMPORTED_MODULE_5__["BaseComponent"] {
    constructor(appService, appSettings, translate, tokenStorage, activatedRoute) {
        super(translate, tokenStorage);
        this.appService = appService;
        this.appSettings = appSettings;
        this.translate = translate;
        this.tokenStorage = tokenStorage;
        this.activatedRoute = activatedRoute;
        this.transaction = new src_app_app_models__WEBPACK_IMPORTED_MODULE_2__["Transaction"]();
        this.result = {};
        this.saveEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.action = 'processing';
    }
    ngOnInit() {
        console.log('I am here ...');
        this.activatedRoute.params.subscribe(params => {
            if (params.projectId !== 0) {
                this.projectId = params.projectId;
            }
        });
        this.getActiveProjects();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.setStripeSecret();
        }, 500);
        this.transaction.currencyCode = 'USD';
    }
    setStripeSecret() {
        this.appService.getObject('/service/Payment/stripe-key').toPromise()
            .then(result => {
            this.stripe = Stripe(result.publishableKey);
        });
    }
    createPaymentIntent() {
        this.appService.saveWithUrl('/service/Payment/clientSecret', this.transaction).toPromise()
            .then(result => {
            return result;
        })
            .then(data => {
            return this.setupElements(data);
        })
            .then(data => {
            this.data = data;
            document.querySelector('button').disabled = false;
            document.getElementById('submit').removeAttribute('disabled');
            const form = document.getElementById('payment-form');
            form.addEventListener('submit', this.handleCardSave.bind(this));
        });
    }
    setupElements(data) {
        // this.stripe = Stripe(data.publishableKey);
        /* ------- Set up Stripe Elements to use in checkout form ------- */
        const elements = this.stripe.elements();
        const style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };
        const card = elements.create('card', { style });
        const element = document.getElementById('card-element');
        card.mount('#card-element');
        return {
            stripe: this.stripe,
            card,
            clientSecret: data.clientSecret
        };
    }
    handleCardSave(event) {
        event.preventDefault();
        document.getElementById('submit').setAttribute('disabled', 'disabled');
        this.submitPayment(this.data.stripe, this.data.card, this.data.clientSecret, this.translate, this.result, this.myStepper, this.save, this.appService, this.transaction, this.tokenStorage.getUserId(), this.processResult);
    }
    submitPayment(stripe, card, clientSecret, translate, myResult, myStepper, saveFct, appService, transaction, userId, processResult) {
        this.errors = '';
        stripe
            .confirmCardPayment(clientSecret, {
            payment_method: {
                card
            }
        })
            .then(function (result) {
            if (result.error) {
                // Show error to your customer
                //showError(result.error.message);
                translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {
                    myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];
                });
                document.getElementById('submit').setAttribute('disabled', 'disabled');
            }
            else {
                // The payment succeeded!
                //orderComplete(result.paymentIntent.id);
                translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {
                    myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];
                });
                saveFct(appService, transaction, userId, translate, myResult);
            }
            myStepper.selected.completed = true;
            myStepper.next();
        });
    }
    getActiveProjects() {
        const parameters = [];
        parameters.push('e.status = |status|1|Integer');
        this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data) => {
            this.projectOptions = data;
            this.filteredProjectOptions = data;
            if (this.projectId) {
                for (let p of this.projectOptions) {
                    if (p.id === Number(this.projectId)) {
                        this.currentProjectOption = p.title;
                        this.transaction.project = p;
                    }
                }
            }
        });
    }
    save(appService, transaction, userId, translate, myResult) {
        myResult.errors = undefined;
        myResult.messages = undefined;
        transaction.modifiedBy = +userId;
        transaction.user = new src_app_app_models__WEBPACK_IMPORTED_MODULE_2__["User"]();
        transaction.user.id = +userId;
        transaction.io = 0;
        appService.save(transaction, 'Transaction')
            .subscribe(result => {
            if (result.errors === null || result.errors.length === 0) {
                translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {
                    myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];
                });
            }
            else {
                translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {
                    myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];
                });
            }
        });
    }
    filterProjectOptions(val) {
        if (val) {
            const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();
            this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));
        }
        else {
            this.filteredProjectOptions = this.projectOptions;
        }
    }
    clear() {
        this.transaction = new src_app_app_models__WEBPACK_IMPORTED_MODULE_2__["Transaction"]();
    }
    goBack() {
        this.myStepper.previous();
    }
    goForward() {
        this.myStepper.selected.completed = true;
        this.myStepper.next();
        if (this.myStepper.selectedIndex === 2) {
            this.createPaymentIntent();
        }
    }
    saveTransaction() {
        this.myStepper.next();
        this.transaction.modifiedBy = +this.tokenStorage.getUserId();
        this.transaction.user = new src_app_app_models__WEBPACK_IMPORTED_MODULE_2__["User"]();
        this.transaction.user.id = +this.tokenStorage.getUserId();
        this.appService.saveWithUrl('/service/Payment/saveTransaction', this.transaction)
            .subscribe(data => {
            if (data.errors === null || data.errors.length === 0) {
                this.translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {
                    this.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];
                });
            }
            else {
                this.translate.get(['MESSAGE.CARD_PAYMENT_FAILED', 'MESSAGE.' + data.errors[0]]).subscribe(res => {
                    this.errors = res['MESSAGE.' + data.errors[0]];
                });
            }
            this.action = 'complete';
            this.myStepper.selected.completed = true;
            this.myStepper.next();
        });
    }
};
PaymentComponent.ctorParameters = () => [
    { type: src_app_app_service__WEBPACK_IMPORTED_MODULE_1__["AppService"] },
    { type: src_app_app_settings__WEBPACK_IMPORTED_MODULE_4__["AppSettings"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"] },
    { type: src_app_token_storage__WEBPACK_IMPORTED_MODULE_6__["TokenStorage"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] }
];
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('stepper'),
    __metadata("design:type", _angular_material_stepper__WEBPACK_IMPORTED_MODULE_8__["MatStepper"])
], PaymentComponent.prototype, "myStepper", void 0);
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
    __metadata("design:type", Object)
], PaymentComponent.prototype, "saveEvent", void 0);
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
    __metadata("design:type", Number)
], PaymentComponent.prototype, "projectId", void 0);
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
    __metadata("design:type", Number)
], PaymentComponent.prototype, "eventId", void 0);
PaymentComponent = __decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
        selector: 'app-payment-component',
        template: __importDefault(__webpack_require__(/*! raw-loader!./payment.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/payment/payment.component.html")).default
    }),
    __metadata("design:paramtypes", [src_app_app_service__WEBPACK_IMPORTED_MODULE_1__["AppService"],
        src_app_app_settings__WEBPACK_IMPORTED_MODULE_4__["AppSettings"],
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
        src_app_token_storage__WEBPACK_IMPORTED_MODULE_6__["TokenStorage"],
        _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]])
], PaymentComponent);



/***/ }),

/***/ "./src/app/pages/payment/payment.module.ts":
/*!*************************************************!*\
  !*** ./src/app/pages/payment/payment.module.ts ***!
  \*************************************************/
/*! exports provided: routes, PaymentModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routes", function() { return routes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentModule", function() { return PaymentModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @agm/core */ "./node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js");
/* harmony import */ var mat_video__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mat-video */ "./node_modules/mat-video/__ivy_ngcc__/fesm2015/mat-video.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
/* harmony import */ var _payment_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./payment.component */ "./src/app/pages/payment/payment.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (undefined && undefined.__importDefault) || function (mod) {
  return (mod && mod.__esModule) ? mod : { "default": mod };
};









const routes = [
    { path: '', component: _payment_component__WEBPACK_IMPORTED_MODULE_7__["PaymentComponent"], pathMatch: 'full' }
];
let PaymentModule = class PaymentModule {
};
PaymentModule = __decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
        declarations: [
            _payment_component__WEBPACK_IMPORTED_MODULE_7__["PaymentComponent"]
        ],
        exports: [
            _payment_component__WEBPACK_IMPORTED_MODULE_7__["PaymentComponent"],
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes),
            _agm_core__WEBPACK_IMPORTED_MODULE_3__["AgmCoreModule"],
            mat_video__WEBPACK_IMPORTED_MODULE_4__["MatVideoModule"],
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_5__["SharedModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormsModule"]
        ]
    })
], PaymentModule);



/***/ })

}]);
//# sourceMappingURL=pages-payment-payment-module-es2015.js.map