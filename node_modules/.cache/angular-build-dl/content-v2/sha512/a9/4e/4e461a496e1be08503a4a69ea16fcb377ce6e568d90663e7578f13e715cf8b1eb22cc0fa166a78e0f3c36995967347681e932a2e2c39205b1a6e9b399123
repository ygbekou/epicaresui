{"version":3,"sources":["./src/app/pages/account/account.component.html","./src/app/pages/account/admin/admin.component.html","./src/app/pages/account/cmessage-list/cmessage-list.component.html","./src/app/pages/account/cmessage/cmessage.component.html","./src/app/pages/account/configs/configs.component.html","./src/app/pages/account/dashboard/dashboard.component.html","./src/app/pages/account/email/email.component.html","./src/app/pages/account/event-list/event-list.component.html","./src/app/pages/account/event/event.component.html","./src/app/pages/account/faq-list/faq-list.component.html","./src/app/pages/account/faq/faqi.component.html","./src/app/pages/account/favorites/favorites.component.html","./src/app/pages/account/image/Images.component.html","./src/app/pages/account/job-appli-list/job-appli-list.component.html","./src/app/pages/account/job-appli/job-appli.component.html","./src/app/pages/account/job-position-list/job-position-list.component.html","./src/app/pages/account/job-position/job-position.component.html","./src/app/pages/account/meetingReport/MeetingReports.component.html","./src/app/pages/account/my-properties/my-properties.component.html","./src/app/pages/account/news-list/news-list.component.html","./src/app/pages/account/news/news.component.html","./src/app/pages/account/poll/PollQuestions.component.html","./src/app/pages/account/poll/Polls.component.html","./src/app/pages/account/pollType/PollTypes.component.html","./src/app/pages/account/positions/Positions.component.html","./src/app/pages/account/profile/profile.component.html","./src/app/pages/account/projects-list/project-list.component.html","./src/app/pages/account/projects/project.component.html","./src/app/pages/account/publicity/Publicities.component.html","./src/app/pages/account/regulation/regulation.component.html","./src/app/pages/account/section-items/section-items.component.html","./src/app/pages/account/sections/sections.component.html","./src/app/pages/account/settings/Settings.component.html","./src/app/pages/account/slider-items/slider-items.component.html","./src/app/pages/account/sliders/sliders.component.html","./src/app/pages/account/statusText/statusText.component.html","./src/app/pages/account/transaction-list/transaction-list.component.html","./src/app/pages/account/transaction/online-payment.component.html","./src/app/pages/account/transaction/transaction.component.html","./src/app/pages/account/user-list/user-list.component.html","./src/app/pages/account/user/user.component.html","./src/app/pages/account/video/Videos.component.html","./src/app/pages/account/account.component.scss","./src/app/pages/account/account.component.ts","./src/app/pages/account/account.module.ts","./src/app/pages/account/admin/admin.component.scss","./src/app/pages/account/admin/admin.component.ts","./src/app/pages/account/cmessage-list/cmessage-list.component.scss","./src/app/pages/account/cmessage-list/cmessage-list.component.ts","./src/app/pages/account/cmessage/cmessage.component.scss","./src/app/pages/account/cmessage/cmessage.component.ts","./src/app/pages/account/configs/configs.component.scss","./src/app/pages/account/configs/configs.component.ts","./src/app/pages/account/dashboard/dashboard.component.scss","./src/app/pages/account/dashboard/dashboard.component.ts","./src/app/pages/account/email/email.component.scss","./src/app/pages/account/email/email.component.ts","./src/app/pages/account/event-list/event-list.component.scss","./src/app/pages/account/event-list/event-list.component.ts","./src/app/pages/account/event/event.component.scss","./src/app/pages/account/event/event.component.ts","./src/app/pages/account/faq-list/faq-list.component.scss","./src/app/pages/account/faq-list/faq-list.component.ts","./src/app/pages/account/faq/faqi.component.scss","./src/app/pages/account/faq/faqi.component.ts","./src/app/pages/account/favorites/favorites.component.scss","./src/app/pages/account/favorites/favorites.component.ts","./src/app/pages/account/image/Images.component.scss","./src/app/pages/account/image/Images.component.ts","./src/app/pages/account/job-appli-list/job-appli-list.component.scss","./src/app/pages/account/job-appli-list/job-appli-list.component.ts","./src/app/pages/account/job-appli/job-appli.component.scss","./src/app/pages/account/job-appli/job-appli.component.ts","./src/app/pages/account/job-position-list/job-position-list.component.scss","./src/app/pages/account/job-position-list/job-position-list.component.ts","./src/app/pages/account/job-position/job-position.component.scss","./src/app/pages/account/job-position/job-position.component.ts","./src/app/pages/account/meetingReport/MeetingReports.component.scss","./src/app/pages/account/meetingReport/MeetingReports.component.ts","./src/app/pages/account/my-properties/my-properties.component.scss","./src/app/pages/account/my-properties/my-properties.component.ts","./src/app/pages/account/news-list/news-list.component.scss","./src/app/pages/account/news-list/news-list.component.ts","./src/app/pages/account/news/news.component.scss","./src/app/pages/account/news/news.component.ts","./src/app/pages/account/poll/PollQuestions.component.ts","./src/app/pages/account/poll/Polls.component.scss","./src/app/pages/account/poll/Polls.component.ts","./src/app/pages/account/pollType/PollTypes.component.scss","./src/app/pages/account/pollType/PollTypes.component.ts","./src/app/pages/account/positions/Positions.component.scss","./src/app/pages/account/positions/Positions.component.ts","./src/app/pages/account/profile/profile.component.scss","./src/app/pages/account/profile/profile.component.ts","./src/app/pages/account/projects-list/project-list.component.scss","./src/app/pages/account/projects-list/project-list.component.ts","./src/app/pages/account/projects/project.component.scss","./src/app/pages/account/projects/project.component.ts","./src/app/pages/account/publicity/Publicities.component.scss","./src/app/pages/account/publicity/Publicities.component.ts","./src/app/pages/account/regulation/regulation.component.scss","./src/app/pages/account/regulation/regulation.component.ts","./src/app/pages/account/section-items/section-items.component.scss","./src/app/pages/account/section-items/section-items.component.ts","./src/app/pages/account/sections/sections.component.scss","./src/app/pages/account/sections/sections.component.ts","./src/app/pages/account/settings/Settings.component.scss","./src/app/pages/account/settings/Settings.component.ts","./src/app/pages/account/slider-items/slider-items.component.scss","./src/app/pages/account/slider-items/slider-items.component.ts","./src/app/pages/account/sliders/sliders.component.scss","./src/app/pages/account/sliders/sliders.component.ts","./src/app/pages/account/statusText/statusText.component.scss","./src/app/pages/account/statusText/statusText.component.ts","./src/app/pages/account/transaction-list/transaction-list.component.scss","./src/app/pages/account/transaction-list/transaction-list.component.ts","./src/app/pages/account/transaction/online-payment.component.ts","./src/app/pages/account/transaction/transaction.component.scss","./src/app/pages/account/transaction/transaction.component.ts","./src/app/pages/account/user-list/user-list.component.scss","./src/app/pages/account/user-list/user-list.component.ts","./src/app/pages/account/user/user.component.scss","./src/app/pages/account/user/user.component.ts","./src/app/pages/account/video/Videos.component.scss","./src/app/pages/account/video/Videos.component.ts"],"names":[],"mappings":"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","file":"pages-account-account-module-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n\\r\\n        <mat-sidenav-container class=\\\"account\\\">\\r\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"account-sidenav\\\">\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\">\\r\\n                    <button fxHide=\\\"false\\\" fxHide.gt-sm mat-mini-fab color=\\\"warn\\\" class=\\\"close\\\"\\r\\n                        (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-card-header fxLayoutAlign=\\\"start center\\\">\\r\\n                        <img *ngIf=\\\"tokenStorage.getPicture()\\\" mat-card-avatar\\r\\n                            src=\\\"assets/images/users/{{tokenStorage.getUserId()}}/{{tokenStorage.getPicture()}}\\\" alt=\\\"\\\">\\r\\n                        <img *ngIf=\\\"!tokenStorage.getPicture()\\\" mat-card-avatar\\r\\n                            src=\\\"assets/images/avatars/user_blue.jpg\\\" alt=\\\"\\\">\\r\\n\\r\\n                        <mat-card-title class=\\\"text-muted mb-0\\\">{{tokenStorage.getName()}}</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                    <div class=\\\"divider my-3\\\"></div>\\r\\n                    <div *ngFor=\\\"let link of links\\\">\\r\\n                        <a matLine [routerLink]=\\\"link.href\\\" routerLinkActive=\\\"horizontal-active-link\\\"\\r\\n                            [routerLinkActiveOptions]=\\\"{exact:true}\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n                            class=\\\"p-3\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">{{link.icon}}</mat-icon>\\r\\n                            <span class=\\\"mx-2\\\">{{ link.name }}</span>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </mat-card>\\r\\n            </mat-sidenav>\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n                <mat-card *ngIf=\\\"!sidenavOpen\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\"\\r\\n                    class=\\\"text-muted mb-3\\\">\\r\\n                    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                    </button>\\r\\n                    <h3> My Account</h3>\\r\\n                </mat-card>\\r\\n                <mat-card class=\\\"account-wrapper\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </mat-card>\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n   <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.STATUS' | translate}}\\\">\\r\\n      <app-statusText-component></app-statusText-component>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.REGULATIONS' | translate}}\\\">\\r\\n      <app-regulation-component></app-regulation-component>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.POSITION' | translate}}\\\">\\r\\n      <app-positions-component></app-positions-component>\\r\\n    </mat-tab> \\r\\n    <mat-tab label=\\\"{{'COMMON.POLL_TYPE' | translate}}\\\">\\r\\n      <app-pollTypes-component></app-pollTypes-component>\\r\\n    </mat-tab> \\r\\n  </mat-tab-group>\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.FILTER_CMESSAGE' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/cmessage', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\"> {{cmessage.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\"> {{cmessage.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.EMAIL' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">{{cmessage.email}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Phone Column -->\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">{{cmessage.phone}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let cmessage\\\">\\r\\n        <a [routerLink]=\\\"['/account/cmessage', cmessage.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(faq)\\\" \\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let faq; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"cmessage.name\\\" name=\\\"name\\\"\\r\\n                  #name=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.name}}</mat-label> -->\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"cmessage.email\\\" name=\\\"email\\\"\\r\\n                  #email=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.email}}</mat-label> -->\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"cmessage.phone\\\" name=\\\"phone\\\"\\r\\n                  #phone=\\\"ngModel\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <!-- <mat-label> {{cmessage.phone}}</mat-label> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}}</mat-label>\\r\\n          <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"message\\\" [(ngModel)]=\\\"cmessage.message\\\" name=\\\"message\\\" \\r\\n            #message=\\\"ngModel\\\" rows=\\\"10\\\" readonly></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n  <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n  <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n  <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n</a>\\r\\n<mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n  <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n    <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n      <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n    </button>\\r\\n  </span>\\r\\n</mat-menu>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group  [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n      <mat-tab label=\\\"Essentiel\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"company.name\\\" name=\\\"name\\\"\\r\\n                #name=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.ADDRESS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" [(ngModel)]=\\\"company.address\\\" name=\\\"address\\\"\\r\\n                #address=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && address.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.EMAIL' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"company.email\\\"\\r\\n                name=\\\"email\\\" #email=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && email.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.WEBSITE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"website\\\" [(ngModel)]=\\\"company.website\\\"\\r\\n                name=\\\"website\\\" #website=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && website.errors && website.invalid\\\" severity=\\\"error\\\" text=\\\"Website is required\\\">\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.PHONE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"company.phone\\\"\\r\\n                name=\\\"phone\\\" #phone=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && phone.errors && phone.invalid\\\" severity=\\\"error\\\" text=\\\"Phone is required\\\">\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.PHONE' | translate}} 2\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone2\\\" [(ngModel)]=\\\"company.phone2\\\"\\r\\n                name=\\\"phone2\\\" #phone2=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>{{'COMMON.FAX' | translate}}\\r\\n              </mat-label> <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fax\\\" [(ngModel)]=\\\"company.fax\\\"\\r\\n                name=\\\"fax\\\" #fax=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"company.description\\\" #description=\\\"ngModel\\\">\\r\\n          </quill-editor>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Social Media\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"twitterApi\\\">Youtube</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterApi\\\" [(ngModel)]=\\\"company.twitterApi\\\"\\r\\n                name=\\\"twitterApi\\\" #twitterApi=\\\"ngModel\\\" name=\\\"twitterApi\\\" #twitterApi=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"twitterUrl\\\">{{'COMMON.TWITTER_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterUrl\\\" [(ngModel)]=\\\"company.twitterUrl\\\"\\r\\n                name=\\\"twitterUrl\\\" #twitterUrl=\\\"ngModel\\\" name=\\\"twitterUrl\\\" #twitterUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"linkedInUrl\\\">LinkedIn</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"linkedInUrl\\\" [(ngModel)]=\\\"company.linkedInUrl\\\"\\r\\n                name=\\\"linkedInUrl\\\" #linkedInUrl=\\\"ngModel\\\" name=\\\"linkedInUrl\\\" #linkedInUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"googlePlusUrl\\\">{{'COMMON.GOOGLE_PLUS_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"googlePlusUrl\\\" [(ngModel)]=\\\"company.googlePlusUrl\\\"\\r\\n                name=\\\"googlePlusUrl\\\" #googlePlusUrl=\\\"ngModel\\\" name=\\\"googlePlusUrl\\\" #googlePlusUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"facebookUrl\\\">{{'COMMON.FACEBOOK_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"facebookUrl\\\" [(ngModel)]=\\\"company.facebookUrl\\\"\\r\\n                name=\\\"facebookUrl\\\" #facebookUrl=\\\"ngModel\\\" name=\\\"facebookUrl\\\" #facebookUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"instagramUrl\\\">{{'COMMON.INSTAGRAM_URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"instagramUrl\\\" [(ngModel)]=\\\"company.instagramUrl\\\"\\r\\n                name=\\\"instagramUrl\\\" #instagramUrl=\\\"ngModel\\\" name=\\\"instagramUrl\\\" #instagramUrl=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"googleMap\\\">{{'COMMON.GOOGLE_MAP' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"googleMap\\\" [(ngModel)]=\\\"company.googleMap\\\"\\r\\n                name=\\\"googleMap\\\" #googleMap=\\\"ngModel\\\" name=\\\"googleMap\\\" #googleMap=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Web site\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"copyright\\\">{{'COMMON.COPYRIGHT' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.copyright\\\" name=\\\"copyright\\\" #copyright=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"bannerContentHeader\\\">{{'COMMON.BANNER_CONTENT_PARAGRAPH' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.bannerContentHeader\\\" name=\\\"bannerContentHeader\\\"\\r\\n                #bannerContentHeader=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"bannerContentParagraph\\\">{{'COMMON.BANNER_CONTENT_SUFFIX' | translate}}</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"company.bannerContentParagraph\\\" name=\\\"bannerContentParagraph\\\"\\r\\n                #bannerContentParagraph=\\\"ngModel\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph1\\\">{{'COMMON.FOOTER_PARAGRAPH_1' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph1\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph1\\\" name=\\\"footerParagraph1\\\" #footerParagraph1=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph2\\\">{{'COMMON.FOOTER_PARAGRAPH_2' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph2\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph2\\\" name=\\\"footerParagraph2\\\" #footerParagraph2=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"careerBannerTitle\\\">{{'COMMON.CAREER_BANNER_TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"careerBannerTitle\\\"\\r\\n                [(ngModel)]=\\\"company.careerBannerTitle\\\" name=\\\"careerBannerTitle\\\" #careerBannerTitle=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayAuthor\\\" name=\\\"displayAuthor\\\" #displayAuthor=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_AUTHOR' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMission\\\" name=\\\"displayMission\\\" #displayMission=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MISSION' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            \\r\\n            <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayTestimonial\\\" name=\\\"displayTestimonial\\\"\\r\\n              #displayTestimonial=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TESTIMONIAL' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayServices\\\" name=\\\"displayServices\\\" #displayServices=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_SERVICES' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayShortLang\\\" name=\\\"displayShortLang\\\" #displayShortLang=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_SHORT_LANG' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuProject\\\" name=\\\"displayMenuProject\\\"\\r\\n              #displayMenuProject=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_PROJECT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuEvent\\\" name=\\\"displayMenuEvent\\\"\\r\\n              #displayMenuEvent=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_EVENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayProjects\\\" name=\\\"displayProjects\\\"\\r\\n              #displayProjects=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_HOME_PROJECTS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayPolls\\\" name=\\\"displayPolls\\\"\\r\\n              #displayPolls=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_HOME_POLLS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n             <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFooterContact\\\" name=\\\"displayFooterContact\\\"\\r\\n              #displayFooterContact=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FOOTER_CONTACT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          -->\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"footerParagraph3\\\">{{'COMMON.FOOTER_PARAGRAPH_3' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"footerParagraph3\\\"\\r\\n                [(ngModel)]=\\\"company.footerParagraph3\\\" name=\\\"footerParagraph3\\\" #footerParagraph3=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"fromEmail\\\">{{'COMMON.FROM_EMAIL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromEmail\\\" [(ngModel)]=\\\"company.fromEmail\\\"\\r\\n                name=\\\"fromEmail\\\" #fromEmail=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"toEmail\\\">{{'COMMON.TO_EMAIL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toEmail\\\" [(ngModel)]=\\\"company.toEmail\\\" name=\\\"toEmail\\\"\\r\\n                #toEmail=\\\"ngModel\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"metaKeyword\\\">{{ 'COMMON.META_KEYWORD' | translate }}</mat-label>\\r\\n              <input matInput id=\\\"metaKeyword\\\" [(ngModel)]=\\\"company.metaKeyword\\\" name=\\\"metaKeyword\\\"\\r\\n                #metaKeyword=\\\"ngModel\\\" />\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"metaDescription\\\">{{ 'COMMON.META_DESCRIPTION' | translate }}</mat-label>\\r\\n              <textarea matInput id=\\\"metaDescription\\\" [(ngModel)]=\\\"company.metaDescription\\\" name=\\\"metaDescription\\\"\\r\\n                #metaDescription=\\\"ngModel\\\"> </textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label for=\\\"careerBannerText\\\">{{ 'COMMON.CAREER_BANNER_TEXT' | translate }}</mat-label>\\r\\n              <textarea matInput id=\\\"careerBannerText\\\" [(ngModel)]=\\\"company.careerBannerText\\\" name=\\\"careerBannerText\\\"\\r\\n                #careerBannerText=\\\"ngModel\\\"> </textarea>\\r\\n            </mat-form-field>\\r\\n<!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayClientLogos\\\" name=\\\"displayClientLogos\\\"\\r\\n              #displayClientLogos=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_CLIENT_LOGOS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n                         \\r\\n          -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayTeams\\\" name=\\\"displayTeams\\\" #displayTeams=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TEAMS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n        \\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayExpertise\\\" name=\\\"displayExpertise\\\" #displayExpertise=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_EXPERTISE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <!--\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFeatured\\\" name=\\\"displayFeatured\\\" #displayFeatured=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FEATURED' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n           \\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayBlogs\\\" name=\\\"displayBlogs\\\" #displayBlogs=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_BLOGS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayToolbar\\\" name=\\\"displayToolbar\\\" #displayToolbar=\\\"ngModel\\\"\\r\\n              class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_TOOLBAR' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n              -->\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayFeaturedBlogs\\\" name=\\\"displayFeaturedBlogs\\\"\\r\\n              #displayFeaturedBlogs=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_FEATURED_BLOGS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayLangMenu\\\" name=\\\"displayLangMenu\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_LANG_MENU' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuCareer\\\" name=\\\"displayMenuCareer\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_CAREER' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuBlog\\\" name=\\\"displayMenuBlog\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_BLOG' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.displayMenuPoll\\\" name=\\\"displayMenuPoll\\\"\\r\\n              #displayLangMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.DISPLAY_MENU_POLL' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptCardPayment\\\" name=\\\"acceptCardPayment\\\"\\r\\n              #acceptCardPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_CARD_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptTmoneyPayment\\\" name=\\\"acceptTmoneyPayment\\\"\\r\\n              #acceptTmoneyPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_TMONEY_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.acceptFloozPayment\\\" name=\\\"acceptFloozPayment\\\"\\r\\n              #acceptFloozPayment=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ACCEPT_FLOOZ_PAYMENT' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          \\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"Images\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.LOGO' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"logos\\\" name=\\\"logo\\\" #logo=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/logo.png\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.FAVICON' | translate}}</span>\\r\\n          </p>\\r\\n          <input-file [(ngModel)]=\\\"favicons\\\" name=\\\"favicon\\\" #favicon=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/favicon.ico\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.CAREER' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"careers\\\" name=\\\"career\\\" #career=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/careers.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.POLL' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"polls\\\" name=\\\"poll\\\" #poll=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/polls.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PROJECT' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"projects\\\" name=\\\"project\\\" #project=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img src=\\\"assets/images/company/projects.jpg\\\" height=\\\"37\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Template\\\">\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>Menu</h4>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.fixedMenu\\\" name=\\\"fixedMenu\\\" #fixedMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.FIXED_MENU' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"company.leftToRight\\\" name=\\\"leftToRight\\\" #leftToRight=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.LEFTY' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_TOOLBAR' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.headerTextPosition\\\" name=\\\"headerTextPosition\\\"\\r\\n            #headerTextPosition=\\\"ngModel\\\" (change)=\\\"chooseToolbarType()\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let toolbarType of toolbarTypes\\\" [value]=\\\"toolbarType\\\">\\r\\n              {{ 'COMMON.HEADER' | translate }}-{{toolbarType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_HEADER' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.headerImageType\\\" (change)=\\\"chooseHeaderType()\\\" name=\\\"headerImageType\\\"\\r\\n            #headerImageType=\\\"ngModel\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let headerType of headerTypes\\\" [value]=\\\"headerType\\\">{{headerType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_FOOTER' | translate }}</h4>\\r\\n          <mat-radio-group [(ngModel)]=\\\"company.footerType\\\" (change)=\\\"chooseFooterType()\\\" name=\\\"footerType\\\"\\r\\n            #footerType=\\\"ngModel\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let footerType of footerTypes\\\" [value]=\\\"footerType\\\">{{footerType}}\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n          <h4>{{ 'COMMON.CHOOSE_COLOR' | translate }} : {{company.themeColor}}</h4>\\r\\n          <div class=\\\"example-button-row\\\">\\r\\n            <button (click)=\\\"changeTheme('blue')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#1976d2; border: 1px solid #1976d2;color: white;\\\">{{'COLOR.BLUE' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('green')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#689f38; border: 1px solid #689f38;color: white;\\\">{{'COLOR.GREEN' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('red')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#d32f2f; border: 1px solid #d32f2f;color: white;\\\">{{'COLOR.RED' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('pink')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#c2185b; border: 1px solid #c2185b;color: white;\\\">{{'COLOR.PINK' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('purple')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#7b1fa2; border: 1px solid #7b1fa2;color: white;\\\">{{'COLOR.PURPLE' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('grey')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#455a64; border: 1px solid #455a64;color: white;\\\">{{'COLOR.GRAY' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('orange-dark')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#303030; border: 1px solid #303030;color: white;\\\">{{'COLOR.DARK' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('orange-grey')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#FF3D00; border: 1px solid #FF3D00;color: white;\\\">{{'COLOR.ORANGE_GREY' | translate}}</button>\\r\\n            <button (click)=\\\"changeTheme('dark-blue')\\\" mat-flat-button\\r\\n              style=\\\"background-color:#1A237E; border: 1px solid #1A237E;color: white;\\\">{{'COLOR.DARK_BLUE' | translate}}</button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n\\r\\n      <mat-tab label=\\\"Location\\\">\\r\\n        <mat-tab-group [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n          <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n              <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n                    placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n                <a (click)=\\\"addLocation()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"table-wrapper\\\">\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n                <!-- ID Column -->\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Image Column -->\\r\\n               <ng-container matColumnDef=\\\"name\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.name}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Published Column -->\\r\\n                <ng-container matColumnDef=\\\"telephone\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\"> {{location.telephone}} </td>\\r\\n                </ng-container> \\r\\n\\r\\n                <!-- Actions Column -->\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let location\\\">\\r\\n                    <a (click)=\\\"edit(location)\\\" mat-icon-button color=\\\"primary\\\"\\r\\n                      matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n                      <mat-icon>edit</mat-icon>\\r\\n                    </a>\\r\\n                    &nbsp;&nbsp;\\r\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(location)\\\"\\r\\n                      matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let location; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n              </table>\\r\\n              <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}\\r\\n              </p>\\r\\n            </div>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n            <form name=\\\"fform\\\" (ngSubmit)=\\\"ff.form.valid && saveLocation()\\\" #ff=\\\"ngForm\\\" validate>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title2\\\" [(ngModel)]=\\\"location.name\\\"\\r\\n                      name=\\\"title2\\\" #title2=\\\"ngModel\\\" required>\\r\\n                    <mat-error *ngIf=\\\"ff.submitted && title2.invalid\\\" severity=\\\"error\\\">\\r\\n                      {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.PHONE' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title3\\\" [(ngModel)]=\\\"location.telephone\\\"\\r\\n                      name=\\\"title3\\\" #title3=\\\"ngModel\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n                   \\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label> {{'COMMON.RANK' | translate}}\\r\\n                    </mat-label>\\r\\n                    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank2\\\" [(ngModel)]=\\\"location.rank\\\"\\r\\n                      name=\\\"rank2\\\" #rank2=\\\"ngModel\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                  <mat-label>{{'COMMON.ADDRESS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                  </mat-label>\\r\\n                  <quill-editor id=\\\"summary\\\" name=\\\"summary\\\" [(ngModel)]=\\\"location.address\\\" #summary=\\\"ngModel\\\">\\r\\n                  </quill-editor>\\r\\n                </div> \\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                  <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                      type=\\\"submit\\\">\\r\\n                      <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                    </button> </div>\\r\\n                  <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n                    <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </mat-tab-group>\\r\\n\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"selectedMainTabIndex!==5\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && sendEmail()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.EMAIL' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <mat-label> {{'COMMON.SUBJECT' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject\\\" [(ngModel)]=\\\"email.subject\\\" name=\\\"subject\\\"\\r\\n                #subject=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && subject.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n            <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"email.sendEmail\\\" id=\\\"email\\\" name=\\\"email\\\">\\r\\n              E-mail\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"p-3\\\">\\r\\n            <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"email.sendSms\\\" id=\\\"sms\\\" name=\\\"sms\\\">\\r\\n              SMS\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n          <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"email.body\\\" name=\\\"body\\\" #body=\\\"ngModel\\\" required></quill-editor>\\r\\n          <mat-error *ngIf=\\\"f.submitted && body.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </div>\\r\\n\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SEND' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>{{'COMMON.EVENTS' | translate}}</h2>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/event', 0]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n      matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\"> {{eventDesc.event.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">{{eventDesc.event.rank}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">{{eventDesc.title}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"desc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        <div [innerHTML]=\\\"eventDesc.shortDesc | safehtml\\\"></div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"startDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.START_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        {{eventDesc.event.startDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"endDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.END_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        {{eventDesc.event.endDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eventDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/event', eventDesc.event.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(eventDesc)\\\"\\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let eventDesc; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.EVENT' | translate}}\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"event.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.LOCATION' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" [(ngModel)]=\\\"event.location\\\" name=\\\"location\\\"\\r\\n              #location=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && location.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"event.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.STATUS' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"20\\\" fxFlex.lg=\\\"20\\\" fxFlex.xl=\\\"20\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.START_DATE' | translate}}</mat-label><br />\\r\\n            <input matInput [matDatepicker]=\\\"beginDatePicker\\\" class=\\\"form-control\\\" id=\\\"beginDate\\\"\\r\\n              [(ngModel)]=\\\"event.beginDate\\\" name=\\\"beginDate\\\" #beginDate=\\\"ngModel\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"beginDatePicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #beginDatePicker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"HH\\\" id=\\\"beginHr\\\" name=\\\"beginHr\\\" [(ngModel)]=\\\"event.beginHour\\\" #beginHrs=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"hourSelectionChange($event)\\\"  required>\\r\\n              <mat-option *ngFor=\\\"let hr of hours\\\" [value]=\\\"hr\\\">\\r\\n                {{hr}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"2\\\" fxFlex.lg=\\\"2\\\" fxFlex.xl=\\\"2\\\" class=\\\"p-1\\\"></div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"MM\\\" id=\\\"beginMn\\\" name=\\\"beginMn\\\" [(ngModel)]=\\\"event.beginMinute\\\" #beginMn=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"minuteSelectionChange($event)\\\" required>\\r\\n              <mat-option *ngFor=\\\"let minute of minutes\\\" [value]=\\\"minute\\\">\\r\\n                {{minute}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"10\\\" fxFlex.lg=\\\"10\\\" fxFlex.xl=\\\"10\\\" class=\\\"p-1\\\"></div>\\r\\n\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"20\\\" fxFlex.lg=\\\"20\\\" fxFlex.xl=\\\"20\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n            <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" id=\\\"endDate\\\"\\r\\n              [(ngModel)]=\\\"event.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"HH\\\" id=\\\"endHr\\\" name=\\\"endHr\\\" [(ngModel)]=\\\"event.endHour\\\" #endHrs=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"hourSelectionChange($event)\\\"  required>\\r\\n              <mat-option *ngFor=\\\"let hr of hours\\\" [value]=\\\"hr\\\">\\r\\n                {{hr}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"2\\\" fxFlex.lg=\\\"2\\\" fxFlex.xl=\\\"2\\\" class=\\\"p-1\\\"></div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"5\\\" fxFlex.lg=\\\"5\\\" fxFlex.xl=\\\"5\\\">\\r\\n          <mat-form-field class=\\\"w-10\\\" style=\\\"display: inline !important;\\\">\\r\\n            <br />\\r\\n            <mat-select placeholder=\\\"MM\\\" id=\\\"endMn\\\" name=\\\"endMn\\\" [(ngModel)]=\\\"event.endMinute\\\" #endMn=\\\"ngModel\\\"\\r\\n              (selectionChange)=\\\"minuteSelectionChange($event)\\\" required>\\r\\n              <mat-option *ngFor=\\\"let minute of minutes\\\" [value]=\\\"minute\\\">\\r\\n                {{minute}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label>{{'COMMON.USER' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER' | translate }}\\\" id=\\\"user\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"user\\\" [(ngModel)]=\\\"event.coordinator\\\" #user=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let u of activeUsers\\\" [value]=\\\"u\\\">\\r\\n              {{u.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n      <mat-tab-group>\\r\\n        <mat-tab label=\\\"{{'COMMON.TITLE' | translate}} - {{flag.name}}\\\"\\r\\n          *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\" [(ngModel)]=\\\"event.eventDescs[i].title\\\"\\r\\n                name=\\\"title{{i}}\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <p>\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n            </p>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"description{{i}}\\\" [(ngModel)]=\\\"event.eventDescs[i].description\\\"\\r\\n              name=\\\"description{{i}}\\\" #description=\\\"ngModel\\\" required>\\r\\n            </quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n        <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n            class=\\\"text-muted mx-3\\\">(max: 25 images)</span></p>\\r\\n        <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"25\\\" fileAccept=\\\"image/*\\\"\\r\\n          [linkEnabled]=\\\"false\\\" multiple>\\r\\n        </input-file>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</form>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/faq', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"language\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.LANGUAGE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Question Column -->\\r\\n    <ng-container matColumnDef=\\\"question\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.QUESTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">{{faq.question}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Answer Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"answer\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.ANSWER' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.answer}} </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <!-- Question Column -->\\r\\n    <ng-container matColumnDef=\\\"yesCount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.YES' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">{{faq.yesCount}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Answer Column -->\\r\\n    <ng-container matColumnDef=\\\"noCount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NO' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\"> {{faq.noCount}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let faq\\\">\\r\\n        <a [routerLink]=\\\"['/account/faq', faq.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(faq)\\\" \\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let faq; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\"> \\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> Total {{'COMMON.YES' | translate}}:</mat-label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        <mat-label> {{faq.yesCount}}</mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> Total {{'COMMON.NO' | translate}}:</mat-label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        <mat-label> {{faq.noCount}}</mat-label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.QUESTION' | translate}}</mat-label>\\r\\n          <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"question\\\" [(ngModel)]=\\\"faq.question\\\" name=\\\"question\\\" \\r\\n            #question=\\\"ngModel\\\" required></textarea>\\r\\n          <mat-error *ngIf=\\\"f.submitted && question.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <mat-label> {{'COMMON.ANSWER' | translate}}<font color=\\\"white\\\">*</font></mat-label>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"answer\\\" [(ngModel)]=\\\"faq.answer\\\" name=\\\"answer\\\" #answer=\\\"ngModel\\\"\\r\\n          required></quill-editor>\\r\\n        <mat-error *ngIf=\\\"f.submitted && answer.invalid\\\" severity=\\\"error\\\">\\r\\n          {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field> \\r\\n<div class=\\\"table-wrapper\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Image Column -->\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property.id ]\\\" class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Remove </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> \\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button> \\r\\n        </td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table> \\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p> \\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cost\\\" [(ngModel)]=\\\"image.title\\\" name=\\\"cost\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"image.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"image.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"66\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"image.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n              <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n                  class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n              <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"100\\\" fileAccept=\\\"image/*\\\"\\r\\n                [linkEnabled]=\\\"false\\\" multiple>\\r\\n              </input-file>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let image\\\"> {{image.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{image.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n              {{image?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let image\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getImage(image.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(image)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let image; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\"> {{jobAppli.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.APPLICANT' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.firstName}} {{jobAppli.lastName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PHONE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.phone}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.EMAIL' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">{{jobAppli.email}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"createDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n        {{jobAppli.createDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n       {{jobAppli.status===1?('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobAppli\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-appli', jobAppli.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        \\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let jobAppli; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"theme-container\\\" *ngIf=\\\"action === 'submitting'\\\">\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FIRST_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"jobAppli.firstName\\\"\\r\\n            name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && firstName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LAST_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"jobAppli.lastName\\\" name=\\\"lastName\\\"\\r\\n            #lastName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && lastName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MIDDLE_NAME' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middleName\\\" [(ngModel)]=\\\"jobAppli.middleName\\\"\\r\\n            name=\\\"middleName\\\" #middleName=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"jobAppli.phone\\\" name=\\\"phone\\\"\\r\\n            #phone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && phone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"jobAppli.email\\\" name=\\\"email\\\"\\r\\n            #email=\\\"ngModel\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n        <mat-label> {{'COMMON.RESUME' | translate}} ({{'COMMON.CLICK_TO_DOWNLOAD' | translate}})</mat-label>\\r\\n        <br />\\r\\n        <a href=\\\"assets/docs/jobapplis/{{jobAppli.id}}/{{jobAppli.doc}}\\\" download>\\r\\n          <img src=\\\"assets/docs/jobapplis/{{jobAppli.id}}/{{jobAppli.doc}}\\\" style=\\\"height: 100px; width: 200px;\\\"\\r\\n            alt=\\\"{{'COMMON.RESUME' | translate}}\\\">\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.xl=\\\"100\\\" class=\\\"p-1\\\">\\r\\n        <p>\\r\\n          <mat-label> {{'COMMON.NOTES' | translate}}</mat-label>\\r\\n        </p>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"notes\\\" [(ngModel)]=\\\"jobAppli.notes\\\" name=\\\"notes\\\" #notes=\\\"ngModel\\\">\\r\\n        </quill-editor>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <br />\\r\\n</div>\\r\\n\\r\\n<div class=\\\"theme-container\\\" *ngIf=\\\"action === 'success'\\\">\\r\\n  <h2>{{'COMMON.RESUME_SUBMISSION_SUCCESS' | translate}}</h2>\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <h2>{{'COMMON.JOB_POSTINGS' | translate}}</h2>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/job-position', 0]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n      matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\"> {{jobPositionDesc.jobPosition.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">{{jobPositionDesc.jobPosition.rank}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">{{jobPositionDesc.title}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"desc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <div [innerHTML]=\\\"jobPositionDesc.shortDesc | safehtml\\\"></div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"createDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        {{jobPositionDesc.createDate | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"resumeCnt\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Resume Count </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-appli-list', jobPositionDesc.jobPosition.id]\\\">\\r\\n          {{jobPositionDesc.jobAppliCnt }} \\r\\n        </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let jobPositionDesc\\\">\\r\\n        <a [routerLink]=\\\"['/account/job-position', jobPositionDesc.jobPosition.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(jobPositionDesc)\\\"\\r\\n          matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let jobPosition; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"jobPosition.rank\\\" name=\\\"rank\\\"\\r\\n          #rank=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.LOCATION' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" [(ngModel)]=\\\"jobPosition.location\\\" name=\\\"location\\\"\\r\\n          #location=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && location.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field> \\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"jobPosition.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.STATUS' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n  </div>\\r\\n  <mat-tab-group>\\r\\n    <mat-tab label=\\\"{{'COMMON.TITLE' | translate}} - {{flag.name}}\\\"\\r\\n      *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\"\\r\\n            [(ngModel)]=\\\"jobPosition.jobPositionDescs[i].title\\\" name=\\\"title{{i}}\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div fxFlex=\\\"5\\\"></div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <p>\\r\\n          <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n        </p>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"description{{i}}\\\"\\r\\n          [(ngModel)]=\\\"jobPosition.jobPositionDescs[i].description\\\" name=\\\"description{{i}}\\\" #description=\\\"ngModel\\\"\\r\\n          required>\\r\\n        </quill-editor>\\r\\n        <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n          {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</form>\";","export default \"\\r\\n<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.MEETING_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"meetingDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"meetingDatePicker\\\" [(ngModel)]=\\\"meetingReport.meetingDate\\\"\\r\\n                name=\\\"meetingDatePicker\\\" #meetingDatePicker=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"meetingDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #meetingDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.AUTHOR' | translate}}</mat-label><br />\\r\\n              <mat-select placeholder=\\\"{{'COMMON.AUTHOR' | translate }}\\\" id=\\\"author\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n                  name=\\\"author\\\" [(ngModel)]=\\\"meetingReport.author\\\" #author=\\\"ngModel\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let user of activeUsers\\\" [value]=\\\"user\\\">\\r\\n                    {{user.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"f.submitted && author.invalid\\\" severity=\\\"error\\\">\\r\\n                    {{'VALIDATION.REQUIRED' | translate }}\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"meetingReport.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                  {{ 'COMMON.STATUS' | translate }}\\r\\n              </mat-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex=\\\"50\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n                  <mat-label> {{'COMMON.TITLE' | translate}} - {{flag.name}}</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"meetingReport.meetingReportDescs[i].title\\\" \\r\\n                    name=\\\"name{{i}}\\\" required>\\r\\n              </mat-form-field>\\r\\n              <div fxFlex=\\\"5\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n          <mat-label> {{'COMMON.MESSAGE' | translate}} - {{flag.name}}</mat-label>\\r\\n          <quill-editor class=\\\"form-control\\\" id=\\\"message{{i}}\\\" [(ngModel)]=\\\"meetingReport.meetingReportDescs[i].message\\\" \\r\\n          name=\\\"message{{i}}\\\" required></quill-editor>\\r\\n        \\r\\n          <br/>\\r\\n          <br/>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-tab>\\r\\n\\r\\n    \\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n       <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"table-wrapper\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"meetingDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.MEETING_DATE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.meetingReport.meetingDate | date: 'mediumDate'}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.title}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"author\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AUTHOR' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\"> {{meetingReportDesc.authorName}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Status Column -->\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\">\\r\\n                {{meetingReportDesc?.meetingReport?.status === 1 ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let meetingReportDesc\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(meetingReportDesc.meetingReport.id)\\\" \\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n              </button>\\r\\n              &nbsp;&nbsp;\\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(meetingReportDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let meetingReportDesc; columns: displayedColumns;\\\"\\r\\n              >\\r\\n            </tr>\\r\\n          </table>\\r\\n          <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n        </div>\\r\\n        <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\"\\r\\n          class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/blogs', property.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Published Column -->\\r\\n    <ng-container matColumnDef=\\\"published\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd/MM/yyyy\\\"}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Views Column -->\\r\\n    <ng-container matColumnDef=\\\"views\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Rating Column -->\\r\\n    <ng-container matColumnDef=\\\"rating\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Rating </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\"> {{property.ratingsCount}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let property\\\">\\r\\n        <a [routerLink]=\\\"['/account/my-articles', property.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"Edit Article\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/news', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"><img [src]=\\\"'assets/images/news/' + news.id + '/'+news.fileNames[0]\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"lang\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"><a [routerLink]=\\\"['/blogs', news.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{news.shortTitle}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Publication Date time Column -->\\r\\n    <ng-container matColumnDef=\\\"publicationDatetime\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PUBLISHED' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\"> {{news.publicationDatetime | date: appService.DATE_TIME_FORMAT }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let news\\\">\\r\\n        <a [routerLink]=\\\"['/account/news', news.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(news)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let news; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.ARTICLE' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\" *ngIf=\\\"flag\\\">\\r\\n            <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n              <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n              <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n            </a>\\r\\n            <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n              <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n                  <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                    class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n                </button>\\r\\n              </span>\\r\\n            </mat-menu>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"news.title\\\" name=\\\"title\\\"\\r\\n                #title=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && title.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\"></div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.AUTHOR' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"authorText\\\" [(ngModel)]=\\\"news.authorText\\\" name=\\\"authorText\\\"\\r\\n                #authorText=\\\"ngModel\\\"> \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"news.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.ENABLE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"news.featured\\\" name=\\\"featured\\\" #featured=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n              {{ 'COMMON.FEATURED' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            {{ 'COMMON.RATING' | translate }}\\r\\n            <app-rating [ratingsCount]=\\\"news.ratingCount\\\" [ratingsValue]=\\\"news.rating\\\">\\r\\n            </app-rating>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            {{ 'COMMON.VIEWS' | translate }}\\r\\n            <button mat-fab color=\\\"accent\\\">{{news?.viewCount}} </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <mat-label> {{'COMMON.CONTENT' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor [styles]=\\\"{height: '450px'}\\\"  class=\\\"form-control\\\" id=\\\"content\\\" [(ngModel)]=\\\"news.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\"\\r\\n            required></quill-editor>\\r\\n          <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n          <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"\\r\\n            [linkEnabled]=\\\"false\\\" multiple>\\r\\n          </input-file>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"{{'COMMON.VIDEO' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.VIDEO' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">({{'COMMON.YOUTUBE_LINK'|translate}})</span></p>\\r\\n          <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewsVideo()\\\" matTooltip=\\\"Add New NewsVideo\\\"\\r\\n            matTooltipPosition=\\\"after\\\">\\r\\n            <mat-icon>add_circle</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div id=\\\"newsVideos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">\\r\\n          <div *ngFor=\\\"let newsVideo of news.videos; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n            <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n            <div fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                <mat-label>{{'COMMON.NAME' | translate}}</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'COMMON.NAME' | translate}}\\\" [(ngModel)]=\\\"newsVideo.name\\\"\\r\\n                  name=\\\"newsVideoName + {{i}}\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                <mat-label>{{'COMMON.LINK' | translate}}</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'COMMON.LINK_TO_VIDEO' | translate}}\\\" [(ngModel)]=\\\"newsVideo.link\\\"\\r\\n                  name=\\\"newsVideoLink + {{i}}\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n              <button type=\\\"button\\\" mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteNewsVideo(newsVideo.id, i)\\\"\\r\\n                matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\">\\r\\n                <mat-icon>cancel</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"\\r\\n\\r\\n\\r\\n<mat-card *ngFor=\\\"let pollQuestionDesc of pollQuestionDescs\\\">\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    {{pollQuestionDesc.description}}\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(pollQuestionDesc.pollQuestion.id)\\\" type=\\\"button\\\"\\r\\n        matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">edit</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n          matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"90\\\" fxFlex.lg=\\\"90\\\" fxFlex.xl=\\\"90\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n        </button> \\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n      <div *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n        <mat-error *ngIf=\\\"f.submitted && (pollQuestion.pollQuestionDescs[i].description === undefined \\r\\n          || pollQuestion.pollQuestionDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n            {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n        </mat-error>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let pollChoice of pollQuestion.pollChoices;\\\">\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollChoice.pollChoiceDescs[i].description === undefined \\r\\n            || pollChoice.pollChoiceDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'COMMON.CHOICE' | translate }} - {{ i + 1}} : {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n          </mat-error>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>{{'COMMON.POSITION' | translate }}</mat-label>\\r\\n      <mat-select placeholder=\\\"{{'COMMON.POSITION' | translate }}\\\" id=\\\"position\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n        name=\\\"position\\\" [(ngModel)]=\\\"pollQuestion.position\\\" #position=\\\"ngModel\\\" required>\\r\\n        <mat-option *ngFor=\\\"let posDesc of activePositions\\\" [value]=\\\"posDesc.position\\\">\\r\\n          {{posDesc.name}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"f.submitted && position.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n      <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n      <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"pollQuestion.rank\\\" name=\\\"rank\\\" #rank=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel *ngFor=\\\"let flag of appService.flags; let i = index\\\" \\r\\n                      (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n      {{'COMMON.CLICK_HERE_FOR' | translate}} - {{flag.name}}\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description{{i}}\\\" \\r\\n          [(ngModel)]=\\\"pollQuestion.pollQuestionDescs[i].description\\\" name=\\\"description{{i}}\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollQuestion.pollQuestionDescs[i].description === undefined \\r\\n            || pollQuestion.pollQuestionDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n      </mat-form-field>\\r\\n      <div fxFlex=\\\"5\\\"></div>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion> \\r\\n\\r\\n\\r\\n<br/>\\r\\n<br/>\\r\\n</form>\\r\\n\\r\\n<fieldset>\\r\\n  <legend>\\r\\n    <h5 style=\\\"color:#00008b\\\">{{'COMMON.CHOICES' | translate}}</h5>\\r\\n  </legend>\\r\\n  \\r\\n  <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let pollChoice of pollQuestion.pollChoices;\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"pollChoice.rank\\\" name=\\\"rank\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && (pollChoice.rank === undefined)\\\" severity=\\\"error\\\">\\r\\n                {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label>{{'COMMON.USER' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER' | translate }}\\\" id=\\\"user\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"user\\\" [(ngModel)]=\\\"pollChoice.user\\\" #user=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let u of activeUsers\\\" [value]=\\\"u\\\">\\r\\n              {{u.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <mat-card>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n            <mat-label> {{'COMMON.DESCRIPTION' | translate}} - {{flag.name}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description{{i}}\\\" \\r\\n            [(ngModel)]=\\\"pollChoice.pollChoiceDescs[i].description\\\" name=\\\"description{{i}}\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && (pollChoice.pollChoiceDescs[i].description === undefined \\r\\n              || pollChoice.pollChoiceDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n                {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addChoice()\\\" type=\\\"button\\\"\\r\\n        matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <br/>\\r\\n  <br/>\\r\\n</fieldset>\\r\\n\\r\\n\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n            autocomplete=\\\"off\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\" type=\\\"button\\\"\\r\\n          matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n      <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-wrapper\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        <!-- Name Column -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"pollTypeDescName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.POLL_TYPE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\"> {{pollDesc.pollTypeDescName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\"> {{pollDesc.title}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Status Column -->\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\">\\r\\n            <span *ngIf=\\\"pollDesc.status === 0\\\" style=\\\"color: #ff0000;\\\">{{'COMMON.INACTIVE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 1\\\" style=\\\"color: #283593;\\\">{{'COMMON.ACTIVE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 2\\\" style=\\\"color: green;\\\">{{'COMMON.CLOSE'|translate}}</span>\\r\\n            <span *ngIf=\\\"pollDesc.status === 5\\\" style=\\\"color: green;\\\">{{'COMMON.TERMINATE'|translate}}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let pollDesc\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(pollDesc.poll.id)\\\"\\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(pollDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let pollDesc; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n    </div>\\r\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\" *ngIf=\\\"poll\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n            matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"75\\\" fxFlex.lg=\\\"75\\\" fxFlex.xl=\\\"75\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n          <div *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n            <mat-error *ngIf=\\\"f.submitted && (poll.pollDescs[i].description === undefined \\r\\n                  || poll.pollDescs[i].description === '')\\\" severity=\\\"error\\\">\\r\\n              {{'COMMON.DESCRIPTION' | translate }} {{'VALIDATION.IS_REQUIRED' | translate }} - {{flag.name}}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.POLL_TYPE' | translate}}</mat-label><br />\\r\\n            <mat-select placeholder=\\\"{{'COMMON.POLL_TYPE' | translate }}\\\" id=\\\"pollType\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n              name=\\\"pollType\\\" [(ngModel)]=\\\"poll.pollType\\\" #pollType=\\\"ngModel\\\" required>\\r\\n              <mat-option *ngFor=\\\"let ptd of pollTypes\\\" [value]=\\\"ptd.pollType\\\">\\r\\n                {{ptd.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"f.submitted && pollType.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\"></div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.STATUS' | translate}}: </mat-label><br />\\r\\n          <mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\" [(ngModel)]=\\\"poll.status\\\"\\r\\n            (change)=\\\"onToggleGroupChange($event)\\\">\\r\\n            <mat-button-toggle [value]=\\\"0\\\">\\r\\n              {{'COMMON.INACTIVE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"1\\\">\\r\\n              {{'COMMON.ACTIVE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"2\\\">\\r\\n              {{'COMMON.CLOSE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"5\\\">\\r\\n              {{'COMMON.TERMINATE' | translate}}\\r\\n            </mat-button-toggle>\\r\\n          </mat-button-toggle-group>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel *ngFor=\\\"let flag of appService.flags; let i = index\\\" (opened)=\\\"panelOpenState = true\\\"\\r\\n          (closed)=\\\"panelOpenState = false\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{'COMMON.CLICK_HERE_FOR' | translate}} - {{flag.name}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].title\\\"\\r\\n                name=\\\"title{{i}}\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.BEGIN_NOTE' | translate}}</mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"beginNote{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].description\\\"\\r\\n              name=\\\"beginNote{{i}}\\\" required></quill-editor>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.END_NOTE' | translate}}</mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"endNote{{i}}\\\" [(ngModel)]=\\\"poll.pollDescs[i].endNote\\\"\\r\\n              name=\\\"endNote{{i}}\\\" required></quill-editor>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.QUESTIONS' | translate}}\\\" *ngIf=\\\"poll && poll.id > 0\\\">\\r\\n    <app-pollquestion-component></app-pollquestion-component>\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n</mat-tab-group>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n         <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n            matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n         </button>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n         <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n          </button> \\r\\n        </div>\\r\\n         <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n         <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   \\r\\n   <div fxLayout=\\\"row\\\">\\r\\n      <div fxFlex=\\\"33\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n         <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n            <mat-label> {{'COMMON.NAME' | translate}} - {{flag.name}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"pollType.pollTypeDescs[i].name\\\" \\r\\n               name=\\\"name{{i}}\\\" required>\\r\\n         </mat-form-field>\\r\\n         <div fxFlex=\\\"5\\\"></div>\\r\\n      </div>\\r\\n   </div>\\r\\n\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-1\\\">\\r\\n         <mat-slide-toggle [(ngModel)]=\\\"pollType.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.STATUS' | translate }}\\r\\n         </mat-slide-toggle>\\r\\n      </div>\\r\\n   </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<fieldset>\\r\\n  <legend><h5 style=\\\"color:#00008b\\\">{{'COMMON.LIST' | translate}}</h5></legend>\\r\\n\\r\\n  <div class=\\\"table-wrapper\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\"> {{pollTypeDesc.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Status Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\">\\r\\n          {{pollTypeDesc?.pollType?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let pollTypeDesc\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(pollTypeDesc.pollType.id)\\\" \\r\\n         matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n          class=\\\"remove\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        &nbsp;&nbsp;\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(pollTypeDesc)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n          class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let pollTypeDesc; columns: displayedColumns;\\\"\\r\\n        >\\r\\n      </tr>\\r\\n    </table>\\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n  </div>\\r\\n  <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</fieldset>\";","export default \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n      <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\"\\r\\n        class=\\\"remove\\\">\\r\\n        <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <div class=\\\"text-center mt-2\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n          <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n          <mat-icon>save</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex=\\\"33\\\" *ngFor=\\\"let flag of appService.flags; let i = index\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.NAME' | translate}} - {{flag.name}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name{{i}}\\\" [(ngModel)]=\\\"position.positionDescs[i].name\\\"\\r\\n          name=\\\"name{{i}}\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div fxFlex=\\\"5\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"33\\\" fxFlex.lg=\\\"33\\\" fxFlex.xl=\\\"33\\\" class=\\\"p-3\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"position.rank\\\" name=\\\"rank\\\" #rank=\\\"ngModel\\\"\\r\\n          required>\\r\\n        <mat-error *ngIf=\\\"f.submitted && rank.invalid\\\" severity=\\\"error\\\">\\r\\n          {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"position.leadership\\\" name=\\\"leadership\\\" #leadership=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.LEADERSHIP' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n      <mat-slide-toggle [(ngModel)]=\\\"position.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n        {{ 'COMMON.STATUS' | translate }}\\r\\n      </mat-slide-toggle>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<fieldset>\\r\\n  <legend>\\r\\n    <h5 style=\\\"color:#00008b\\\">{{'COMMON.LIST' | translate}}</h5>\\r\\n  </legend>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n          autocomplete=\\\"off\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n    <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-wrapper\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\"> {{positionDesc.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Description Column -->\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\"> {{positionDesc.description}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Status Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\">\\r\\n          {{positionDesc?.position?.status === 1 ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let positionDesc\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getDescriptions(positionDesc.position.id)\\\"\\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          &nbsp;&nbsp;\\r\\n          <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(positionDesc)\\\"\\r\\n            matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let positionDesc; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table>\\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n  </div>\\r\\n  <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</fieldset>\";","export default \"<form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"onInfoFormSubmit(infoForm.value)\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Account details</h2>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Name</mat-label>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.name.errors?.required\\\">Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.name.hasError('minlength')\\\">Name isn't long enough, minimum of 3\\r\\n                    characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Phone</mat-label>\\r\\n                <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required onlyNumber autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Current Password</mat-label>\\r\\n                <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" type=\\\"password\\\"\\r\\n                    minlength=\\\"6\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.currentPassword.errors?.required\\\">Current Password is required\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.currentPassword.hasError('minlength')\\\">Current Password isn't\\r\\n                    long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>New Password</mat-label>\\r\\n                <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\"\\r\\n                    required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.newPassword.errors?.required\\\">New Password is required\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.newPassword.hasError('minlength')\\\">New Password isn't long\\r\\n                    enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Confirm New Password</mat-label>\\r\\n                <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\"\\r\\n                    required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.confirmNewPassword.errors?.required\\\">Confirm New Password is\\r\\n                    required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\\\">Passwords do\\r\\n                    not match</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Social media</h2>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Organization</mat-label>\\r\\n                <input matInput placeholder=\\\"organization\\\" formControlName=\\\"organization\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Facebook</mat-label>\\r\\n                <input matInput placeholder=\\\"facebook\\\" formControlName=\\\"facebook\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Twitter</mat-label>\\r\\n                <input matInput placeholder=\\\"twitter\\\" formControlName=\\\"twitter\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Linkedin</mat-label>\\r\\n                <input matInput placeholder=\\\"linkedin\\\" formControlName=\\\"linkedin\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Instagram</mat-label>\\r\\n                <input matInput placeholder=\\\"instagram\\\" formControlName=\\\"instagram\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Website</mat-label>\\r\\n                <input matInput placeholder=\\\"website\\\" formControlName=\\\"website\\\" autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"mb-3\\\">\\r\\n                <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\"\\r\\n                    fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Short Resume</h2>\\r\\n            <quill-editor formControlName=\\\"shortResume\\\" ></quill-editor>\\r\\n\\r\\n\\r\\n            <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Long Resume</h2>\\r\\n            <quill-editor formControlName=\\\"longResume\\\" ></quill-editor>\\r\\n\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Save</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/project', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> N<sup>o</sup> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.id|number:'3.0'}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"><a [routerLink]=\\\"['/projects', project.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{project.title}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- budget Column -->\\r\\n    <ng-container matColumnDef=\\\"budget\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.BUDGET' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.budget}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Projected Start Date Column -->\\r\\n    <ng-container matColumnDef=\\\"owner\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AUTHOR' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\">\\r\\n        {{project.user? (project.user.firstName  +' '+ project.user.lastName):'' }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Start Date Column -->\\r\\n    <ng-container matColumnDef=\\\"createDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.SUBMITTED_DATE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\"> {{project.createDate |date:'longDate'}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Projected End Date Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let project\\\">\\r\\n\\r\\n        <span *ngIf=\\\"project.status === 0\\\" style=\\\"color: #ff0000;\\\">{{'COMMON.SUBMITTED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 1\\\" style=\\\"color: #283593;\\\">{{'COMMON.IN_REVIEW'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 5\\\" style=\\\"color: green;\\\">{{'COMMON.APPROVED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 10\\\" style=\\\"color: green;\\\">{{'COMMON.IN_PROGRESS'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 90\\\" style=\\\"color: green;\\\">{{'COMMON.COMPLETED'|translate}}</span>\\r\\n        <span *ngIf=\\\"project.status === 99\\\" style=\\\"color: red;\\\">{{'COMMON.REJECTED'|translate}}</span>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let project; columns: displayedColumns;\\\" [routerLink]=\\\"['/account/project', project.id]\\\">\\r\\n    </tr>\\r\\n\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <mat-tab-group>\\r\\n      <mat-tab label=\\\"{{'COMMON.PROJECT' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.TITLE' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"project.title\\\" name=\\\"title\\\"\\r\\n                #title=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && title.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.BUDGET' | translate}}\\r\\n              </mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"budget\\\" [(ngModel)]=\\\"project.budget\\\" name=\\\"budget\\\"\\r\\n                #budget=\\\"ngModel\\\" required>\\r\\n              <mat-error *ngIf=\\\"f.submitted && budget.invalid\\\" severity=\\\"error\\\">\\r\\n                {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n          <mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\" [(ngModel)]=\\\"project.status\\\"\\r\\n            (change)=\\\"onToggleGroupChange($event)\\\">\\r\\n            <mat-button-toggle [value]=\\\"0\\\">\\r\\n              {{'COMMON.SUBMITTED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"1\\\">\\r\\n              {{'COMMON.IN_REVIEW' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"5\\\">\\r\\n              {{'COMMON.APPROVED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"10\\\">\\r\\n              {{'COMMON.IN_PROGRESS' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"90\\\">\\r\\n              {{'COMMON.COMPLETED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n            <mat-button-toggle [value]=\\\"99\\\">\\r\\n              {{'COMMON.REJECTED' | translate}}\\r\\n            </mat-button-toggle>\\r\\n          </mat-button-toggle-group>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <mat-label> {{'COMMON.DESCRIPTION' | translate}}\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"project.description\\\" name=\\\"description\\\"\\r\\n              #description=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.PROJECTED_START_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"projectedStartDatePicker\\\" class=\\\"form-control\\\" id=\\\"projectedStartDate\\\"\\r\\n                [(ngModel)]=\\\"project.projectedStartDate\\\" name=\\\"projectedStartDate\\\" #projectedStartDate=\\\"ngModel\\\"\\r\\n                required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"projectedStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #projectedStartDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.PROJECTED_END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"projectedEndDatePicker\\\" class=\\\"form-control\\\" id=\\\"projectedEndDate\\\"\\r\\n                [(ngModel)]=\\\"project.projectedEndDate\\\" name=\\\"projectedEndDate\\\" #projectedEndDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"projectedEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #projectedEndDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.START_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"startDatePicker\\\" class=\\\"form-control\\\" id=\\\"startDate\\\"\\r\\n                [(ngModel)]=\\\"project.startDate\\\" name=\\\"startDate\\\" #startDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" id=\\\"endDate\\\"\\r\\n                [(ngModel)]=\\\"project.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.EXISTING' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"existant\\\" [(ngModel)]=\\\"project.existant\\\" name=\\\"existant\\\"\\r\\n              #existant=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && existant.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.OBJECTIF' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"objectif\\\" [(ngModel)]=\\\"project.objectif\\\" name=\\\"objectif\\\"\\r\\n              #objectif=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && objectif.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.DURATION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"duration\\\" [(ngModel)]=\\\"project.duration\\\" name=\\\"duration\\\"\\r\\n              #duration=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && duration.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.BUDGET_ESTIMATION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"budgetLine\\\" [(ngModel)]=\\\"project.budgetLine\\\" name=\\\"budgetLine\\\"\\r\\n              #budgetLine=\\\"ngModel\\\" required></quill-editor>\\r\\n            <mat-error *ngIf=\\\"f.submitted && budgetLine.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <mat-label> {{'COMMON.SPONSORS' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <quill-editor class=\\\"form-control\\\" id=\\\"sponsors\\\" [(ngModel)]=\\\"project.sponsors\\\" name=\\\"sponsors\\\"\\r\\n              #sponsors=\\\"ngModel\\\"></quill-editor>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"{{'COMMON.PICTURE' | translate}}\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n              class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n          <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"8\\\" fileAccept=\\\"image/*\\\"\\r\\n            [linkEnabled]=\\\"false\\\" multiple>\\r\\n          </input-file>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.BEGIN_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"beginDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"beginDate\\\" [(ngModel)]=\\\"publicity.beginDate\\\" name=\\\"beginDate\\\" #beginDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"beginDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #beginDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.END_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"endDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"endDate\\\" [(ngModel)]=\\\"publicity.endDate\\\" name=\\\"endDate\\\" #endDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.COST' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cost\\\" [(ngModel)]=\\\"publicity.cost\\\" name=\\\"cost\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"publicity.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"link\\\" [(ngModel)]=\\\"publicity.link\\\" name=\\\"link\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"publicity.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"66\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"publicity.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n              <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}</span><span\\r\\n                  class=\\\"text-muted mx-3\\\">(max: 8 images)</span></p>\\r\\n              <input-file [(ngModel)]=\\\"files\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\"\\r\\n                [linkEnabled]=\\\"false\\\" multiple>\\r\\n              </input-file>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"url\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.URL' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.link}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"beginDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.BEGIN_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.beginDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"endDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.END_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.endDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"cost\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.COST' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\"> {{publicity.cost}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n              {{publicity?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let publicity\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getPublicity(publicity.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(publicity)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let publicity; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of appService.flags\\\" (click)=\\\"getRegulation(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"regulation.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\" required></quill-editor>\\r\\n      <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n        {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n  <mat-tab label=\\\"{{'COMMON.SECTION' | translate}}\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && saveSection()\\\" #f=\\\"ngForm\\\" validate>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </a>\\r\\n          <br />\\r\\n          <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n            <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n            <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n            <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n          </a>\\r\\n          <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n            <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n              <button mat-menu-item *ngFor=\\\"let flag of flags\\\" (click)=\\\"changeLang(flag)\\\">\\r\\n                <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n              </button>\\r\\n            </span>\\r\\n          </mat-menu>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"section.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\"> \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"section.name\\\" name=\\\"name\\\"\\r\\n              #name=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"section.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.ENABLE' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"section.showInMenu\\\" name=\\\"showInMenu\\\" #showInMenu=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.SHOW_IN_MENU' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"section.title\\\" name=\\\"title\\\"\\r\\n              #title=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"section.showInMenu\\\">\\r\\n            <mat-label>Menu</mat-label>\\r\\n            <mat-select placeholder=\\\"Menu\\\" id=\\\"menu\\\" name=\\\"menu\\\" [(ngModel)]=\\\"section.menu\\\" #menu=\\\"ngModel\\\">\\r\\n              <mat-option *ngFor=\\\"let menu of menus\\\" [value]=\\\"menu.name\\\">\\r\\n                {{menu.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n          <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <quill-editor [styles]=\\\"{height: '450px'}\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"section.description\\\" #description=\\\"ngModel\\\">\\r\\n          </quill-editor>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"sectionImages\\\" name=\\\"sectionImage\\\" #sectionImage=\\\"ngModel\\\" fileLimit=\\\"1\\\"\\r\\n            fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img [src]=\\\"'assets/images/sections/'+section.id+'/'+section.picture\\\" [style.width.px]=\\\"150\\\"\\r\\n              class=\\\"d-block\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button> </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.SECTION_ITEM' | translate}}\\\" *ngIf=\\\"section.id>0\\\">\\r\\n\\r\\n    <mat-tab-group [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n      <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n            <a (click)=\\\"addSectionItem()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"table-wrapper\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n            <!-- ID Column -->\\r\\n            <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.id}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Image Column -->\\r\\n            <ng-container matColumnDef=\\\"image\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{'COMMON.ICON' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\">\\r\\n                <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xsm\\\">{{sectionItem.picture}}</mat-icon>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Published Column -->\\r\\n            <ng-container matColumnDef=\\\"lang\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.language}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Title Column -->\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\"> {{sectionItem.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Actions Column -->\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n              <td mat-cell *matCellDef=\\\"let sectionItem\\\">\\r\\n                <a (click)=\\\"edit(sectionItem)\\\" mat-icon-button color=\\\"primary\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </a>\\r\\n                &nbsp;&nbsp;\\r\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(sectionItem)\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let sectionItem; columns: displayedColumns;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n          <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n        </div>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n        <form name=\\\"fform\\\" (ngSubmit)=\\\"ff.form.valid && saveSectionItem()\\\" #ff=\\\"ngForm\\\" validate>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label> {{'COMMON.TITLE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n                </mat-label>\\r\\n                <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title2\\\" [(ngModel)]=\\\"sectionItem.title\\\"\\r\\n                  name=\\\"title2\\\" #title2=\\\"ngModel\\\" required>\\r\\n                <mat-error *ngIf=\\\"ff.submitted && title2.invalid\\\" severity=\\\"error\\\">\\r\\n                  {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label> {{'COMMON.NAME' | translate}}\\r\\n                </mat-label>\\r\\n                <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title3\\\" [(ngModel)]=\\\"sectionItem.name\\\"\\r\\n                  name=\\\"title3\\\" #title3=\\\"ngModel\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Ico</mat-label>\\r\\n                <mat-select placeholder=\\\"Select Icon...\\\" [(ngModel)]=\\\"sectionItem.picture\\\" name=\\\"icon\\\">\\r\\n                  <mat-option *ngFor=\\\"let icon of icons\\\" [value]=\\\"icon\\\">\\r\\n                    <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xsm\\\">{{icon}}</mat-icon> {{icon}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <br />\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"sectionItem.status\\\" name=\\\"status2\\\" #status2=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.ENABLE' | translate }}\\r\\n              </mat-slide-toggle>\\r\\n              <br />\\r\\n              <!--\\r\\n              <mat-slide-toggle [(ngModel)]=\\\"sectionItem.showInMenu\\\" name=\\\"showInMenu2\\\" #showInMenu2=\\\"ngModel\\\"\\r\\n                class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.SHOW_IN_MENU' | translate }}\\r\\n              </mat-slide-toggle>     \\r\\n              -->\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank2\\\" [(ngModel)]=\\\"sectionItem.rank\\\" name=\\\"rank2\\\"\\r\\n              #rank2=\\\"ngModel\\\"> \\r\\n          </mat-form-field>         \\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n              <mat-label>{{'COMMON.SUMMARY' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <quill-editor id=\\\"summary\\\" name=\\\"summary\\\" [(ngModel)]=\\\"sectionItem.summary\\\" #summary=\\\"ngModel\\\">\\r\\n              </quill-editor>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n              <mat-label>{{'COMMON.DESCRIPTION' | translate}}<font color=\\\"red\\\">*</font>\\r\\n              </mat-label>\\r\\n              <quill-editor id=\\\"description2\\\" name=\\\"description2\\\" [(ngModel)]=\\\"sectionItem.description\\\"\\r\\n                #description2=\\\"ngModel\\\">\\r\\n              </quill-editor>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                  <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                  <mat-icon>save</mat-icon>\\r\\n                </button> </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n                <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/sections', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n  <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"><img [src]=\\\"'assets/images/sections/'+section.id+'/'+section.picture\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Published Column -->\\r\\n    <ng-container matColumnDef=\\\"lang\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Language </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.language}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Code </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.TITLE' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\"> {{section.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let section\\\">\\r\\n        <a [routerLink]=\\\"['/account/sections', section.id]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        &nbsp;&nbsp;\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(section)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let section; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.POLL_TYPE' | translate}}\\\">\\r\\n    <app-pollTypes-component></app-pollTypes-component>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.POSITION' | translate}}\\\">\\r\\n    <app-positions-component></app-positions-component>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\";","export default \"<mat-tab-group [(selectedIndex)]=\\\"selectedMainTabIndex\\\" (selectedTabChange)=\\\"onMainTabChanged($event)\\\">\\r\\n  <mat-tab label=\\\"{{'COMMON.SLIDER' | translate}}\\\">\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && saveSlider()\\\" #f=\\\"ngForm\\\" validate>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <!-- <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n            <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n          </a>\\r\\n          <br /> -->\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.RANK' | translate}}\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"slider.rank\\\" name=\\\"rank\\\"\\r\\n              #rank=\\\"ngModel\\\"> \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"slider.name\\\" name=\\\"name\\\"\\r\\n              #name=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"75\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\">\\r\\n          <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">{{'COMMON.PICTURE' | translate}}\\r\\n            </span> </p>\\r\\n          <input-file [(ngModel)]=\\\"sliderImages\\\" name=\\\"sliderImage\\\" #sliderImage=\\\"ngModel\\\" fileLimit=\\\"1\\\"\\r\\n            fileAccept=\\\"image/*\\\">\\r\\n          </input-file>\\r\\n\\r\\n          <div class=\\\"logo\\\">\\r\\n            <img [src]=\\\"'assets/images/sliders/'+slider.id+'/'+slider.picture\\\" [style.width.px]=\\\"150\\\"\\r\\n              class=\\\"d-block\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n          <mat-slide-toggle [(ngModel)]=\\\"slider.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n            {{ 'COMMON.ENABLE' | translate }}\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n              <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n              <mat-icon>save</mat-icon>\\r\\n            </button> </div>\\r\\n          <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n            <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n\\r\\n  </mat-tab-group>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/sections', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n  <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"><img [src]=\\\"'assets/images/sliders/'+slider.id+'/'+slider.picture\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n     <!-- Rank Column -->\\r\\n    <ng-container matColumnDef=\\\"rank\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.rank}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\"> {{slider.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let slider\\\">\\r\\n        <a [routerLink]=\\\"['/account/sliders', slider.id]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        &nbsp;&nbsp;\\r\\n        <!-- <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(section)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button> -->\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let section; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"15\\\" class=\\\"p-3\\\">\\r\\n        <a mat-button [matMenuTriggerFor]=\\\"langMenu\\\" #langMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n          <img [src]=\\\"flag.image\\\" width=\\\"18\\\">\\r\\n          <span fxShow=\\\"false\\\" fxShow.gt-md class=\\\"uppercase flag-name\\\">{{flag.name}}</span>\\r\\n          <mat-icon class=\\\"mat-icon-sm caret\\\">arrow_drop_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-menu #langMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" xPosition=\\\"before\\\" class=\\\"app-menu-panel\\\">\\r\\n          <span (mouseleave)=\\\"langMenuTrigger.closeMenu()\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let flag of appService.flags\\\" (click)=\\\"getStatusText(flag)\\\">\\r\\n              <img [src]=\\\"flag.image\\\" width=\\\"18\\\" class=\\\"mat-elevation-z1\\\"><span\\r\\n                class=\\\"flag-name\\\">{{flag.name}}</span>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <mat-label> {{'COMMON.MESSAGE' | translate}}<font color=\\\"red\\\">*</font></mat-label>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"body\\\" [(ngModel)]=\\\"statusText.content\\\" name=\\\"content\\\" #content=\\\"ngModel\\\" required></quill-editor>\\r\\n      <mat-error *ngIf=\\\"f.submitted && content.invalid\\\" severity=\\\"error\\\">\\r\\n        {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<a mat-raised-button routerLink=\\\"/account/online-payment\\\" color=\\\"accent\\\" \\r\\n                        class=\\\"w-100\\\">{{'COMMON.PAY_ONLINE' | translate }}</a>\\r\\n \\r\\n \\r\\n <mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n   <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <a (click)=\\\"edit(undefined)\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-wrapper\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        \\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Date Column -->\\r\\n        <ng-container matColumnDef=\\\"tranDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DATE' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.tranDate | date : 'mediumDate' : '' : translate.currentLang}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- project Column -->\\r\\n        <ng-container matColumnDef=\\\"projectTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.PROJECT' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.projectTitle}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- member Column -->\\r\\n        <ng-container matColumnDef=\\\"memberName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.MEMBER' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.memberName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- amount Column -->\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.AMOUNT' | translate}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.amount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit(transaction.id)\\\" \\r\\n              matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n                class=\\\"remove\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(transaction)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let transaction; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n    </div>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n    <app-transaction-component (saveEvent)=\\\"saveEventListener($event)\\\"></app-transaction-component>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\";","export default \"  <div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" *ngIf=\\\"action === 'processing'\\\" #stepper>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.PROJECT'|translate}}</ng-template>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_PROJECT'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentProjectOption\\\"\\r\\n              matInput [matAutocomplete]=\\\"projectOptionAuto\\\" [(ngModel)]=\\\"currentProjectOption\\\" required \\r\\n              (ngModelChange)=\\\"filterProjectOptions(currentProjectOption)\\\">\\r\\n            <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n            <mat-autocomplete id=\\\"projOption\\\" #projectOptionAuto=\\\"matAutocomplete\\\">\\r\\n              <mat-option *ngFor=\\\"let pOption of filteredProjectOptions \\\" [value]=\\\"pOption.title\\\" \\r\\n                (onSelectionChange)=\\\"transaction.project = pOption;\\\">\\r\\n                {{pOption.title}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n              [disabled]=\\\"!transaction.project\\\" type=\\\"button\\\">Next</button>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n    </mat-step>\\r\\n    <mat-step completed=\\\"false\\\">\\r\\n      <ng-template matStepLabel>{{'COMMON.AMOUNT'|translate}}</ng-template>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\\r\\n            <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"amount\\\" [(ngModel)]=\\\"transaction.amount\\\" name=\\\"amount\\\"\\r\\n              #amount=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"amount.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mb-3\\\">\\r\\n              <mat-label>{{'COMMON.CURRENCY' | translate}}</mat-label>\\r\\n              <mat-select placeholder=\\\"{{'COMMON.SELECT' | translate}}\\\" [compareWith]=\\\"compareObjects\\\" id=\\\"currency\\\"\\r\\n                name=\\\"currency\\\" [(ngModel)]=\\\"transaction.currencyCode\\\">\\r\\n                <mat-option [value]=\\\"'USD'\\\">\\r\\n                  USD\\r\\n                </mat-option>\\r\\n                <mat-option [value]=\\\"'XOF'\\\">\\r\\n                  CFA\\r\\n                </mat-option>\\r\\n                <mat-option [value]=\\\"'EUR'\\\">\\r\\n                  EUR\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\">Back</button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goForward()\\\" style=\\\"float: right;\\\"\\r\\n            [disabled]=\\\"amount.invalid\\\" type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>{{'COMMON.PAY'|translate}}</ng-template>\\r\\n\\r\\n      <mat-radio-group [(ngModel)]=\\\"transaction.paymentMethod\\\">\\r\\n        <mat-radio-button  value=\\\"CARD\\\" >\\r\\n          {{'COMMON.CREDIT_CARD'|translate}}\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button  value=\\\"TMONEY\\\">\\r\\n          TMoney\\r\\n        </mat-radio-button> \\r\\n        <mat-radio-button  value=\\\"FLOOZ\\\">\\r\\n          Flooz\\r\\n        </mat-radio-button> \\r\\n      </mat-radio-group> \\r\\n\\r\\n      <br/>\\r\\n      <br/>\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'CARD'\\\">\\r\\n        <form id=\\\"payment-form\\\">\\r\\n          <div id=\\\"card-element\\\"><!--Stripe.js injects the Card Element--></div>\\r\\n          <br/>\\r\\n          <br/> \\r\\n          <button id=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\r\\n            <div class=\\\"spinner hidden\\\" id=\\\"spinner\\\"></div>\\r\\n            <span id=\\\"button-text\\\">{{'COMMON.PAY'|translate}}</span>\\r\\n            <!-- <mat-icon>save</mat-icon> -->\\r\\n            <span id=\\\"order-amount\\\"></span>\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"transaction.paymentMethod !== 'TMONEY' && transaction.paymentMethod !== 'FLOOZ'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"transaction.phone\\\" name=\\\"phone\\\"\\r\\n            #phone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"phone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"saveTransaction()\\\">\\r\\n                <span class=\\\"mx-1 uppercase\\\">{{'COMMON.PAY' | translate}}</span>\\r\\n              </button> \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n\\r\\n      <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-spinner *ngIf=\\\"!messages && !errors\\\"> Payment processing. Please don't close ...</mat-spinner>\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\"> \\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}: {{transaction.project.title}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.AMOUNT' | translate}}: {{transaction.amount}} </mat-label>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n          <mat-label> {{'COMMON.CURRENCY' | translate}}: {{transaction.currencyCode}} </mat-label>\\r\\n        </div>\\r\\n      </div>  \\r\\n      \\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"action === 'complete'\\\">\\r\\n    <mat-error *ngIf=\\\"errors\\\" severity=\\\"error\\\">\\r\\n        <h3>{{ errors }}</h3>\\r\\n      </mat-error>\\r\\n\\r\\n      <mat-error *ngIf=\\\"messages\\\" severity=\\\"message\\\">\\r\\n        <h3>{{ messages }}</h3>\\r\\n      </mat-error>\\r\\n  </div>\\r\\n</div>  \";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n        <a (click)=\\\"clear()\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\">\\r\\n          <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.MEMBER' | translate}}</mat-label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_MEMBER'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentUserOption\\\"\\r\\n            matInput [matAutocomplete]=\\\"userOptionAuto\\\" [(ngModel)]=\\\"currentUserOption\\\" required \\r\\n            (ngModelChange)=\\\"filterUserOptions(currentUserOption)\\\">\\r\\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n          <mat-autocomplete id=\\\"usOption\\\" #userOptionAuto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let uOption of filteredUserOptions \\\"  [value]=\\\"uOption.name\\\"\\r\\n              (onSelectionChange)=\\\"transaction.user = uOption;\\\">\\r\\n              {{uOption.name}}\\r\\n            </mat-option> \\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PROJECT' | translate}}</mat-label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"{{'COMMON.SELECT_PROJECT'|translate}}\\\" aria-label=\\\"Number\\\" name=\\\"currentProjectOption\\\"\\r\\n            matInput [matAutocomplete]=\\\"projectOptionAuto\\\" [(ngModel)]=\\\"currentProjectOption\\\" required \\r\\n            (ngModelChange)=\\\"filterProjectOptions(currentProjectOption)\\\">\\r\\n          <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\\r\\n          <mat-autocomplete id=\\\"projOption\\\" #projectOptionAuto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let pOption of filteredProjectOptions \\\" [value]=\\\"pOption.title\\\" \\r\\n            (onSelectionChange)=\\\"transaction.project = pOption;\\\">\\r\\n              {{pOption.title}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.DATE' | translate}}</mat-label><br />\\r\\n          <input matInput [matDatepicker]=\\\"tranDatePicker\\\" class=\\\"form-control\\\" id=\\\"tranDate\\\" [(ngModel)]=\\\"transaction.tranDate\\\"\\r\\n            name=\\\"tranDate\\\" #tranDate=\\\"ngModel\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"tranDatePicker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #tranDatePicker></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"f.submitted && tranDate.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n          <mat-label> {{'COMMON.AMOUNT' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"amount\\\" [(ngModel)]=\\\"transaction.amount\\\" name=\\\"transaction\\\" \\r\\n            #amount=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && amount.invalid\\\" severity=\\\"error\\\">\\r\\n              {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-radio-group id=\\\"io\\\" [(ngModel)]=\\\"transaction.io\\\" name=\\\"io\\\" #io=\\\"ngModel\\\" required>\\r\\n          <mat-radio-button [value]=\\\"0\\\">\\r\\n              {{'COMMON.CONTRIBUTION' | translate }}\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"1\\\">\\r\\n              {{'COMMON.EXPENSE' | translate }}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n        <mat-error *ngIf=\\\"f.submitted && io.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <mat-checkbox class=\\\"mb-2 d-block\\\" [(ngModel)]=\\\"transaction.anonymous\\\" id=\\\"anonymous\\\" name=\\\"anonymous\\\">\\r\\n          {{'COMMON.ANONYM' | translate }}\\r\\n        </mat-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\" class=\\\"p-3\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label> {{'COMMON.COMMENT' | translate}}</mat-label>\\r\\n        <textarea matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" [(ngModel)]=\\\"transaction.comment\\\" name=\\\"comment\\\" \\r\\n          #comment=\\\"ngModel\\\" rows=\\\"5\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button> </div>\\r\\n        <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n          <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-3\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.FILTER_USERS' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n    <a [routerLink]=\\\"['/account/user', 0]\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"{{'COMMON.ADD_NEW' | translate}}\\\">\\r\\n      <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n    \\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"image\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"><img [src]=\\\"'assets/images/users/' + user.id + '/' + user.fileNames[0]\\\"\\r\\n          [style.width.px]=\\\"50\\\" class=\\\"d-block\\\"></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Language Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.NAME' | translate}} </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Title Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"><a [routerLink]=\\\"['/blogs', user.id ]\\\"\\r\\n          class=\\\"property-name\\\">{{user.email}}</a></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Publication Date time Column -->\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.phone}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n        <a [routerLink]=\\\"['/account/user', user.id]\\\" mat-icon-button color=\\\"primary\\\"\\r\\n          matTooltip=\\\"Edit User\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </a>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(user)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let user; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"table-wrapper\\\">\\r\\n\\r\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">{{'COMMON.ACCOUNT_DETAILS' | translate}}</h2>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FIRST_NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\"\\r\\n            #firstName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && firstName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LAST_NAME' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\"\\r\\n            #lastName=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && lastName.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.EMAIL' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\"\\r\\n            #email=\\\"ngModel\\\" autocomplete=\\\"off\\\" required email>\\r\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid && email.errors.required\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }} </mat-error>\\r\\n          <mat-error *ngIf=\\\"f.submitted && email.invalid && email.errors.email\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.EMAIL_INVALID' | translate }} </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.PHONE' | translate}}<font color=\\\"red\\\">*</font>\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"user.homePhone\\\" name=\\\"homePhone\\\"\\r\\n            #homePhone=\\\"ngModel\\\" required>\\r\\n          <mat-error *ngIf=\\\"f.submitted && homePhone.invalid\\\" severity=\\\"error\\\">\\r\\n            {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-radio-group id=\\\"sex\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.sex\\\" name=\\\"sex\\\" #sex=\\\"ngModel\\\" required>\\r\\n          <mat-radio-button value=\\\"F\\\">\\r\\n            {{'COMMON.MALE' | translate }}\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button value=\\\"M\\\">\\r\\n            {{'COMMON.FEMALE' | translate }}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-label>{{'COMMON.USER_TYPE' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.USER_TYPE' | translate }}\\\" id=\\\"userGroup\\\" name=\\\"userGroup\\\"\\r\\n            [(ngModel)]=\\\"user.userGroup.id\\\" #userGroup=\\\"ngModel\\\" required>\\r\\n            <mat-option *ngFor=\\\"let userGroup of userGroups\\\" [value]=\\\"userGroup.id\\\">\\r\\n              {{userGroup.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"f.submitted && userGroup.invalid\\\" severity=\\\"error\\\">\\r\\n            {{'VALIDATION.USER_TYPE_REQUIRED' | translate }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-label>{{'COMMON.POSITION' | translate }}</mat-label>\\r\\n          <mat-select placeholder=\\\"{{'COMMON.POSITION' | translate }}\\\" id=\\\"position\\\" [compareWith]=\\\"compareObjects\\\"\\r\\n            name=\\\"position\\\" [(ngModel)]=\\\"user.position\\\" #position=\\\"ngModel\\\">\\r\\n            <mat-option *ngFor=\\\"let posDesc of activePositions\\\" [value]=\\\"posDesc.position\\\">\\r\\n              {{posDesc.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!--\\r\\n        <div ngModelGroup=\\\"passwordGroup\\\" password-matcher #passwordGroup=\\\"ngModelGroup\\\"\\r\\n          *ngIf=\\\"tokenStorage.getRole() === '1'\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.PASSWORD' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n              name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && password.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label> {{'COMMON.CONFIRM_PASSWORD' | translate}}<font color=\\\"red\\\">*</font>\\r\\n            </mat-label>\\r\\n            <input matInput type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" [(ngModel)]=\\\"user.confirmPassword\\\"\\r\\n              name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" autocomplete=\\\"off\\\" required>\\r\\n            <mat-error *ngIf=\\\"f.submitted && confirmPassword.invalid\\\" severity=\\\"error\\\">\\r\\n              {{ 'VALIDATION.FIELD_REQUIRED' | translate }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-error *ngIf=\\\"passwordGroup.control?.errors\\\" [ngStyle]=\\\"{'color': '#ff5252'}\\\">\\r\\n            <div [hidden]=\\\"!passwordGroup.control?.errors.noMatch\\\">Passwords do not match</div>\\r\\n          </mat-error>\\r\\n        </div>\\r\\n\\r\\n      -->\\r\\n      \\r\\n        <mat-slide-toggle [(ngModel)]=\\\"user.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n          {{ 'COMMON.ENABLE' | translate }}\\r\\n        </mat-slide-toggle>\\r\\n        <br />\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">{{'COMMON.SOCIAL_MEDIA' | translate}}</h2>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.COMPANY' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" [(ngModel)]=\\\"user.companyName\\\"\\r\\n            name=\\\"companyName\\\" #companyName=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.FACEBOOK' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"facebook\\\" [(ngModel)]=\\\"user.facebook\\\" name=\\\"facebook\\\"\\r\\n            #facebook=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.TWITTER' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitter\\\" [(ngModel)]=\\\"user.twitter\\\" name=\\\"twitter\\\"\\r\\n            #twitter=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.LINKEDIN' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"linkedin\\\" [(ngModel)]=\\\"user.linkedin\\\" name=\\\"linkedin\\\"\\r\\n            #linkedin=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.INSTAGRAM' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"instagram\\\" [(ngModel)]=\\\"user.instagram\\\" name=\\\"instagram\\\"\\r\\n            #instagram=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label> {{'COMMON.WEBSITE' | translate}}</mat-label>\\r\\n          <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"website\\\" [(ngModel)]=\\\"user.website\\\" name=\\\"website\\\"\\r\\n            #website=\\\"ngModel\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br />\\r\\n        <h2 class=\\\"text-muted text-left fw-600 mb-3\\\">{{'COMMON.MY_PHOTO'|translate}}</h2>\\r\\n\\r\\n        <input-file [(ngModel)]=\\\"picture\\\" name=\\\"gallery\\\" #gallery=\\\"ngModel\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\"\\r\\n          [linkEnabled]=\\\"true\\\">\\r\\n        </input-file>\\r\\n      </div>\\r\\n      <!-- <mat-label> {{'COMMON.SHORT_RESUME' | translate}}</mat-label>\\r\\n        <quill-editor class=\\\"form-control\\\" id=\\\"shortResume\\\" [(ngModel)]=\\\"user.shortResume\\\" [maxLength]=\\\"500\\\" \\r\\n          name=\\\"shortResume\\\" #shortResume=\\\"ngModel\\\"></quill-editor>\\r\\n\\r\\n      <mat-error *ngIf=\\\"shortResume.invalid\\\" [ngStyle]=\\\"{'color': '#ff5252'}\\\">  \\r\\n        <div fxLayout=\\\"row wrap\\\">{{'VALIDATION.SHORT_RESUME_TOO_LONG' | translate}} </div> <br/>\\r\\n      </mat-error>    -->\\r\\n      <br />\\r\\n      <h2 class=\\\"text-muted text-left fw-600 mb-3\\\">\\r\\n        {{'COMMON.ABOUT_ME' | translate}} </h2>\\r\\n      <quill-editor class=\\\"form-control\\\" id=\\\"resume\\\" [(ngModel)]=\\\"user.resume\\\" name=\\\"resume\\\" #resume=\\\"ngModel\\\">\\r\\n      </quill-editor>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages && hasError\\\">\\r\\n      <p style=\\\"color:#ff5252\\\">{{messages}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages && !hasError\\\">\\r\\n      <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n        <div class=\\\"text-center mt-2\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n            <mat-icon>save</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"<mat-tab-group [selectedIndex]=\\\"selected.value\\\" (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n    <mat-tab label=\\\"{{'COMMON.DETAILS' | translate}}\\\">\\r\\n\\r\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" validate>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"10\\\" class=\\\"p-3\\\">\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"clear()\\\" type=\\\"button\\\"\\r\\n                  matTooltip=\\\"{{'COMMON.ADD' | translate}}\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n              <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"submit\\\">\\r\\n                    <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SAVE' | translate}}</span>\\r\\n                    <mat-icon>save</mat-icon>\\r\\n                </button> \\r\\n              </div>\\r\\n              <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n              <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <mat-label> {{'COMMON.VIDEO_DATE' | translate}}</mat-label><br />\\r\\n              <input matInput [matDatepicker]=\\\"videoDatePicker\\\" class=\\\"form-control\\\" \\r\\n                id=\\\"videoDate\\\" [(ngModel)]=\\\"video.videoDate\\\" name=\\\"videoDate\\\" #videoDate=\\\"ngModel\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"videoDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #videoDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.RANK' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rank\\\" [(ngModel)]=\\\"video.rank\\\" name=\\\"rank\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"video.status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.STATUS' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.URL' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"link\\\" [(ngModel)]=\\\"video.link\\\" name=\\\"link\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-slide-toggle [(ngModel)]=\\\"video.vote\\\" name=\\\"vote\\\" #vote=\\\"ngModel\\\" class=\\\"my-2\\\">\\r\\n                {{ 'COMMON.VOTE' | translate }}\\r\\n            </mat-slide-toggle>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.VOTE_COUNT' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" [disabled]=\\\"true\\\" class=\\\"form-control\\\" id=\\\"voteCount\\\" [(ngModel)]=\\\"video.voteCount\\\" name=\\\"voteCount\\\">\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"p-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\" >\\r\\n              <mat-label> {{'COMMON.DESCRIPTION' | translate}}</mat-label>\\r\\n              <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"video.description\\\" \\r\\n              name=\\\"description\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div fxFlex=\\\"5\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"{{'COMMON.LIST' | translate}}\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"90\\\" class=\\\"p-1\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'COMMON.SEARCH' | translate}}\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center mt-2\\\" *ngIf=\\\"messages\\\">\\r\\n        <p><a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{messages}}</a></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"table-wrapper\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.DESCRIPTION' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.description}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"videoDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VIDEO_DATE' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.videoDate | date: 'mediumDate'}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"rank\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.RANK' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.rank}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.STATUS' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n              {{video?.status ? ('COMMON.ACTIVE'| translate):('COMMON.INACTIVE'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"vote\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VOTE' | translate}}? </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n              {{video?.vote ? ('COMMON.YES'| translate):('COMMON.NO'| translate)}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"voteCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'COMMON.VOTE_COUNT' | translate}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let video\\\"> {{video.voteCount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let video\\\">\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"getVote(video.id)\\\" \\r\\n            matTooltip=\\\"{{'COMMON.EDIT' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(video)\\\" matTooltip=\\\"{{'COMMON.DELETE' | translate}}\\\"\\r\\n              class=\\\"remove\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let video; columns: displayedColumns;\\\"\\r\\n            >\\r\\n          </tr>\\r\\n        </table>\\r\\n        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">{{'MESSAGE.NO_DATA' | translate}}</p>\\r\\n      </div>\\r\\n      <mat-paginator [pageSize]=\\\"10\\\"  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, AfterViewInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit, AfterViewInit {\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation: true\r\n  };\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen = true;\r\n  lang = 'fr';\r\n  public links = [\r\n    { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n    { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n    { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n    { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n    { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n    { name: 'Configuration', href: 'configs', icon: 'build' },\r\n    { name: 'Setting', href: 'settings', icon: 'settings' },\r\n    { name: 'Modifier le site', href: 'sections', icon: 'web' },\r\n    { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' },\r\n    { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n    { name: 'Finances ', href: 'transaction-list', icon: 'view_list' }\r\n    /*\r\n    { name: 'Administration', href: 'admin', icon: 'admin' },\r\n    { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n    { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n    { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n    { name: 'Email', href: 'email', icon: 'email' },\r\n    { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n    { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n  ];\r\n  constructor(public router: Router, public tokenStorage: TokenStorage) {\r\n    console.log(this.tokenStorage);\r\n    if (!this.tokenStorage.hasToken()) {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.tokenStorage);\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    this.lang = lang;\r\n    if (this.tokenStorage.getRole() === '1') { // admin\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: \"Offres d'emploi\", href: 'job-position-list', icon: 'alarm' },\r\n        { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n        { name: 'Finances ', href: 'transaction-list', icon: 'view_list' },\r\n        { name: 'Configuration', href: 'configs', icon: 'build' },\r\n        { name: 'Setting', href: 'settings', icon: 'settings' },\r\n        { name: 'Modifier le site', href: 'sections', icon: 'web' },\r\n        { name: 'Images Principales', href: 'sliders', icon: 'web' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n        /*\r\n        { name: 'Administration', href: 'admin', icon: 'admin' },\r\n        { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n        { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n        { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n        { name: 'Email', href: 'email', icon: 'email' },\r\n        { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n        { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n      ];\r\n    } else if (this.tokenStorage.getRole() === '10') { // editor\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    } else if (this.tokenStorage.getRole() === '20') { // Finance\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Utilisateurs', href: 'user-list', icon: 'groups' },\r\n        { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    } else if (this.tokenStorage.getRole() === '30') { // Membres\r\n      this.links = [\r\n        { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n        { name: 'Projets', href: 'project-list', icon: 'handyman' },\r\n        { name: 'Evenements', href: 'event-list', icon: 'event' },\r\n        { name: 'Deconnexion', href: '/login', icon: 'power_settings_new' }\r\n      ]\r\n    }\r\n\r\n    if (this.lang === 'en') {\r\n      if (this.tokenStorage.getRole() === '1') { // admin\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Job Postings', href: 'job-position-list', icon: 'alarm' },\r\n          { name: 'Sondages & Votes ', href: 'poll-list', icon: 'view_list' },\r\n          { name: 'Finances ', href: 'transaction-list', icon: 'view_list' },\r\n          { name: 'Configuration', href: 'configs', icon: 'build' },\r\n          { name: 'Setting', href: 'settings', icon: 'settings' },\r\n          { name: 'Modify website', href: 'sections', icon: 'web' },\r\n          { name: 'Main Images', href: 'sliders', icon: 'web' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n          /*\r\n          { name: 'Administration', href: 'admin', icon: 'admin' },\r\n          { name: 'Publicites', href: 'publicity-list', icon: 'view_list' },\r\n          { name: 'Videos', href: 'video-list', icon: 'view_list' },\r\n          { name: 'Images', href: 'image-list', icon: 'view_list' },\r\n          { name: 'Email', href: 'email', icon: 'email' },\r\n          { name: 'Rapports de reunion', href: 'meeting-report-list', icon: 'view_list' },\r\n          { name: 'Messages', href: 'cmessages', icon: 'phone' } */\r\n        ];\r\n      } else if (this.tokenStorage.getRole() === '10') { // editor\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      } else if (this.tokenStorage.getRole() === '20') { // Finance\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Users', href: 'user-list', icon: 'groups' },\r\n          { name: 'Articles', href: 'news-list', icon: 'view_list' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      } else if (this.tokenStorage.getRole() === '30') { // Membres\r\n        this.links = [\r\n          { name: 'Profile', href: 'user/' + this.tokenStorage.getUserId(), icon: 'person' },\r\n          { name: 'Projects', href: 'project-list', icon: 'handyman' },\r\n          { name: 'Events', href: 'event-list', icon: 'event' },\r\n          { name: 'Disconnect', href: '/login', icon: 'power_settings_new' }\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n    if (window.innerWidth < 960) {\r\n      this.sidenavOpen = false;\r\n    };\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize(): void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (window.innerWidth < 960) {\r\n          this.sidenav.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  logout() {\r\n    this.tokenStorage.clearAuthData();\r\n    this.router.navigate(['/login/0']);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MyPropertiesComponent } from './my-properties/my-properties.component';\r\nimport { FavoritesComponent } from './favorites/favorites.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { QuillModule } from 'ngx-quill'\r\nimport { ConfigsComponent } from './configs/configs.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { NewsListComponent } from './news-list/news-list.component';\r\nimport { SectionsComponent } from './sections/sections.component';\r\nimport { SectionItemsComponent } from './section-items/section-items.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { FaqListComponent } from './faq-list/faq-list.component';\r\nimport { FaqiComponent } from './faq/faqi.component';\r\nimport { CmessageListComponent } from './cmessage-list/cmessage-list.component';\r\nimport { CmessageComponent } from './cmessage/cmessage.component';\r\nimport { ProjectListComponent } from './projects-list/project-list.component';\r\nimport { ProjectComponent } from './projects/project.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { StatusTextComponent } from './statusText/statusText.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { RegulationComponent } from './regulation/regulation.component';\r\nimport { PositionsComponent } from './positions/Positions.component';\r\nimport { MeetingReportsComponent } from './meetingReport/MeetingReports.component';\r\nimport { PublicitiesComponent } from './publicity/Publicities.component';\r\nimport { VideosComponent } from './video/Videos.component';\r\nimport { ImagesComponent } from './image/Images.component';\r\nimport { PollTypesComponent } from './pollType/PollTypes.component';\r\nimport { PollsComponent } from './poll/Polls.component';\r\nimport { PollQuestionsComponent } from './poll/PollQuestions.component';\r\nimport { TransactionListComponent } from './transaction-list/transaction-list.component';\r\nimport { TransactionComponent } from './transaction/transaction.component';\r\nimport { OnlinePaymentComponent } from './transaction/online-payment.component';\r\nimport { SlidersComponent } from './sliders/sliders.component';\r\nimport { SliderItemsComponent } from './slider-items/slider-items.component';\r\nimport { JobPositionListComponent } from './job-position-list/job-position-list.component';\r\nimport { JobPositionComponent } from './job-position/job-position.component';\r\nimport { JobAppliComponent } from './job-appli/job-appli.component';\r\nimport { JobAppliListComponent } from './job-appli-list/job-appli-list.component';\r\nimport { SettingsComponent } from './settings/Settings.component';\r\nimport { EventComponent } from './event/event.component';\r\nimport { EventListComponent } from './event-list/event-list.component';\r\n\r\nexport const routes = [\r\n  {\r\n    path: '',\r\n    component: AccountComponent, children: [\r\n      { path: '', redirectTo: 'admin', pathMatch: 'full' },\r\n      { path: 'my-articles', component: MyPropertiesComponent },\r\n      { path: 'user-list', component: UserListComponent },\r\n      { path: 'user/:id', component: UserComponent },\r\n      { path: 'news-list', component: NewsListComponent },\r\n      { path: 'project-list', component: ProjectListComponent },\r\n      { path: 'job-appli/:id', component: JobAppliComponent },\r\n      { path: 'job-appli-list/:jobPositionId', component: JobAppliListComponent },\r\n      { path: 'job-position/:id', component: JobPositionComponent },\r\n      { path: 'job-position-list', component: JobPositionListComponent },\r\n      { path: 'event/:id', component: EventComponent },\r\n      { path: 'event-list', component: EventListComponent },\r\n      { path: 'meeting-report-list', component: MeetingReportsComponent },\r\n      { path: 'configs', component: ConfigsComponent },\r\n      { path: 'settings', component: SettingsComponent },\r\n      { path: 'news/:id', component: NewsComponent },\r\n      { path: 'project/:id', component: ProjectComponent },\r\n      { path: 'sections', component: SectionsComponent },\r\n      { path: 'sections/:id', component: SectionItemsComponent },\r\n      { path: 'sliders', component: SlidersComponent },\r\n      { path: 'sliders/:id', component: SliderItemsComponent },\r\n      { path: 'faqs', component: FaqListComponent },\r\n      { path: 'faq/:id', component: FaqiComponent },\r\n      { path: 'cmessages', component: CmessageListComponent },\r\n      { path: 'cmessage/:id', component: CmessageComponent },\r\n      { path: 'email', component: EmailComponent },\r\n      { path: 'regulation', component: RegulationComponent },\r\n      { path: 'statusText', component: StatusTextComponent },\r\n      { path: 'publicity-list', component: PublicitiesComponent },\r\n      { path: 'video-list', component: VideosComponent },\r\n      { path: 'image-list', component: ImagesComponent },\r\n      { path: 'poll-list', component: PollsComponent },\r\n      { path: 'transaction-list', component: TransactionListComponent },\r\n      { path: 'online-payment', component: OnlinePaymentComponent },\r\n      { path: 'admin', component: AdminComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    AccountComponent,\r\n    MyPropertiesComponent,\r\n    FavoritesComponent,\r\n    ProfileComponent,\r\n    ConfigsComponent,\r\n    NewsComponent,\r\n    ProjectComponent,\r\n    SectionsComponent,\r\n    SectionItemsComponent,\r\n    SlidersComponent,\r\n    SliderItemsComponent,\r\n    NewsListComponent,\r\n    ProjectListComponent,\r\n    UserListComponent,\r\n    UserComponent,\r\n    FaqListComponent,\r\n    FaqiComponent,\r\n    CmessageListComponent,\r\n    CmessageComponent,\r\n    EmailComponent,\r\n    RegulationComponent,\r\n    StatusTextComponent,\r\n    AdminComponent,\r\n    PositionsComponent,\r\n    MeetingReportsComponent,\r\n    PublicitiesComponent,\r\n    VideosComponent,\r\n    ImagesComponent,\r\n    PollTypesComponent,\r\n    PollsComponent,\r\n    PollQuestionsComponent,\r\n    TransactionListComponent,\r\n    TransactionComponent,\r\n    OnlinePaymentComponent,\r\n    JobPositionListComponent,\r\n    JobPositionComponent,\r\n    JobAppliComponent,\r\n    JobAppliListComponent,\r\n    SettingsComponent,\r\n    EventComponent,\r\n    EventListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    InputFileModule,\r\n    AgmCoreModule,\r\n    FormsModule,\r\n    TranslateModule,\r\n    QuillModule.forRoot({\r\n      theme: 'snow',\r\n      modules: {\r\n        syntax: false,\r\n        toolbar: [\r\n          ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n          ['blockquote', 'code-block'],\r\n          [{ header: 1 }, { header: 2 }],               // custom button values\r\n          [{ list: 'ordered'}, { list: 'bullet' }],\r\n          [{ script: 'sub'}, { script: 'super' }],      // superscript/subscript\r\n          [{ indent: '-1'}, { indent: '+1' }],          // outdent/indent\r\n          [{ direction: 'rtl' }],                       // text direction\r\n          [{ size: ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          [{ color: [] }, { background: [] }],          // dropdown with defaults from theme\r\n          [{ font: [] }],\r\n          [{ align: [] }],\r\n          ['clean'],                                         // remove formatting button\r\n          ['link', 'image', 'video']                         // link and image, newsVideo\r\n        ]\r\n      }\r\n    })\r\n  ],\r\n  exports:[\r\n    JobAppliComponent\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hZG1pbi9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGFkbWluXFxhZG1pbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9hZG1pbi9hZG1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLHdCQUFBO0FDQ0QiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2FkbWluL2FkbWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnFsLXNub3cge1xyXG5cdGhlaWdodDogNTAwcHggIWltcG9ydGFudDtcclxufSIsIi5xbC1zbm93IHtcbiAgaGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-admin-component',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent extends BaseComponent implements OnInit {\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY21lc3NhZ2UtbGlzdC9jbWVzc2FnZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { ContactUsMessage } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-cmessage-list',\r\n  templateUrl: './cmessage-list.component.html',\r\n  styleUrls: ['./cmessage-list.component.scss']\r\n})\r\n\r\nexport class CmessageListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'email', 'phone', 'actions' ];\r\n  dataSource: MatTableDataSource<ContactUsMessage>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('ContactUsMessage', parameters, ' ORDER BY e.id DESC ')\r\n      .subscribe((data: ContactUsMessage[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(contactUsMessage : ContactUsMessage) {\r\n    const index: number = this.dataSource.data.indexOf(contactUsMessage);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(contactUsMessage.id, 'ContactUsMessage')\r\n      .subscribe(data => {\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<ContactUsMessage>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY21lc3NhZ2UvY21lc3NhZ2UuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { ContactUsMessage } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cmessage-component',\r\n  templateUrl: './cmessage.component.html',\r\n  styleUrls: ['./cmessage.component.scss']\r\n})\r\nexport class CmessageComponent extends BaseComponent implements OnInit {\r\n  dataSource: MatTableDataSource<ContactUsMessage>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  cmessage: ContactUsMessage = new ContactUsMessage();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.getCmessage(params.id);\r\n    });\r\n  }\r\n\r\n\r\n  getCmessage(cmessageId: number) {\r\n    if (cmessageId === 0) {\r\n      this.cmessage = new ContactUsMessage();\r\n    }\r\n\r\n    if (cmessageId > 0)\r\n      this.appService.getOneWithChildsAndFiles(cmessageId, 'ContactUsMessage')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.cmessage = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvY29uZmlncy9jb25maWdzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { Company, CompanyLocation, SectionItem } from 'src/app/app.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './configs.component.html',\r\n  styleUrls: ['./configs.component.scss']\r\n})\r\nexport class ConfigsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'telephone', 'actions'];\r\n  dataSource: MatTableDataSource<CompanyLocation>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public toolbarTypes = [0, 1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public footerTypes = ['Footer-1', 'Footer-2', 'Footer-3'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  formData = new FormData();\r\n  flag: any;\r\n  company: Company = new Company();\r\n  companies: Company[] = [];\r\n  location: CompanyLocation = new CompanyLocation();\r\n  messages: any;\r\n  logos: any;\r\n  favicons: any;\r\n  careers: any;\r\n  polls: any;\r\n  projects: any;\r\n  settings: Settings;\r\n  selectedTab = 0;s\r\n  selectedMainTabIndex = 0;\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    private translate: TranslateService) {\r\n    this.settings = appService.appSettings.settings;\r\n  }\r\n\r\n  edit(si: CompanyLocation) {\r\n    this.location = si;\r\n    this.selectedTab = 1;\r\n  }\r\n  public changeTheme(theme) {\r\n    this.settings.theme = theme;\r\n    this.company.themeColor = theme;\r\n    this.appService.appSettings.settings.theme = theme;\r\n  }\r\n\r\n  public chooseToolbarType() {\r\n    this.settings.toolbar = this.company.headerTextPosition;\r\n    this.appService.appSettings.settings.toolbar = this.company.headerTextPosition;\r\n    // window.scrollTo(0, 0);\r\n  }\r\n\r\n  public chooseHeaderType() {\r\n    this.settings.header = this.company.headerImageType;\r\n    this.appService.appSettings.settings.header = this.company.headerImageType;\r\n    // window.scrollTo(0, 0);\r\n    // this.router.navigate(['/']);\r\n  }\r\n\r\n  public chooseFooterType() {\r\n    this.appService.company.footerType = this.company.footerType;\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    let found = false;\r\n    this.flag = flag;\r\n    this.companies.forEach(aCompany => {\r\n      if (flag.code === aCompany.language) {\r\n        this.company = aCompany;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.company = new Company();\r\n      this.company.language = flag.code;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Company', parameters)\r\n      .subscribe((data: Company[]) => {\r\n        this.companies = data;\r\n        let found = false;\r\n        if (this.companies.length > 0) {\r\n          this.companies.forEach(aCompany => {\r\n            if (lang === aCompany.language) {\r\n              this.company = aCompany;\r\n              found = true;\r\n            }\r\n          });\r\n        }\r\n        if (!found) {\r\n          this.company = new Company();\r\n          this.company.language = lang;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get Company complete'));\r\n\r\n\r\n    this.appService.getAllByCriteria('Location', parameters, 'order by e.rank ')\r\n      .subscribe((data: CompanyLocation[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get locatioms complete'));\r\n\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 5) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n  save() {\r\n    this.formData = new FormData();\r\n    let nbFiles = 0;\r\n    const isNew = !(this.company.id > 0);\r\n    if (this.company.fixedMenu.toString() === 'true') {\r\n      this.company.fixedMenu = 1;\r\n    }\r\n    if (this.company.leftToRight.toString() === 'true') {\r\n      this.company.leftToRight = 1;\r\n    }\r\n    if (this.company.fixedMenu.toString() === 'false') {\r\n      this.company.fixedMenu = 0;\r\n    }\r\n    if (this.company.leftToRight.toString() === 'false') {\r\n      this.company.leftToRight = 0;\r\n    }\r\n\r\n    for (let i = 0; i < this.favicons.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.favicons[i].file, 'favicon.ico');\r\n    }\r\n\r\n    for (let i = 0; i < this.logos.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.logos[i].file, 'logo.png');\r\n    }\r\n\r\n    for (let i = 0; i < this.careers.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.careers[i].file, 'careers.jpg');\r\n    }\r\n\r\n    for (let i = 0; i < this.polls.length; i++) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', this.polls[i].file, 'polls.jpg');\r\n    }\r\n\r\n    for (const prj of  this.projects) {\r\n      nbFiles++;\r\n      this.formData.append('file[]', prj.file, 'projects.jpg');\r\n    }\r\n\r\n    try {\r\n      console.log('Nomber of files: ' + nbFiles);\r\n      console.log(this.formData);\r\n      console.log(this.company);\r\n      if (nbFiles > 0) {\r\n        this.appService.saveWithFile(this.company, 'Company', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.company = result;\r\n              this.appService.initCompany();\r\n              if (isNew) {\r\n                this.companies.push(this.company);\r\n              }\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.company, 'Company')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.company = result;\r\n              this.appService.initCompany();\r\n              if (isNew) {\r\n                this.companies.push(this.company);\r\n              }\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } catch (e) {\r\n      this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n        this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n      });\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.location = new CompanyLocation();\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  addLocation() {\r\n    this.selectedTab = 1;\r\n    this.location = new CompanyLocation();\r\n  }\r\n\r\n  public remove(location: CompanyLocation) {\r\n    this.messages = '';\r\n    this.appService.delete(location.id, 'com.wack.model.Location')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(location);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<CompanyLocation>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n  saveLocation() {\r\n    this.messages = '';\r\n    try {\r\n      this.messages = '';\r\n      const index: number = this.dataSource.data.indexOf(this.location);\r\n      this.appService.save(this.location, 'Location')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.location = new CompanyLocation();\r\n            this.selectedTab = 0;\r\n            if (index !== -1) {\r\n              this.dataSource.data.splice(index, 1);\r\n            }\r\n            this.dataSource.data.push(result);\r\n            this.dataSource = new MatTableDataSource<CompanyLocation>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.selectedTab = 1;\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9lbWFpbC9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGVtYWlsXFxlbWFpbC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9lbWFpbC9lbWFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLHdCQUFBO0FDQ0QiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2VtYWlsL2VtYWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnFsLXNub3cge1xyXG5cdGhlaWdodDogNTAwcHggIWltcG9ydGFudDtcclxufSIsIi5xbC1zbm93IHtcbiAgaGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Email } from 'src/app/app.models';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-email-component',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.scss']\r\n})\r\nexport class EmailComponent extends BaseComponent implements OnInit {\r\n\r\n  email: Email = new Email();\r\n  messages: any;\r\n  error: string;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n  }\r\n\r\n  sendEmail() {\r\n      this.appService.saveWithUrl('/service/user/email/sendMassEmail', this.email)\r\n        .subscribe(data => {\r\n          this.processResult(data, this.email, null);\r\n          if (data.errors === null || data.errors.length === 0) {\r\n            //this.contactForm.reset();\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.email = new Email();\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZXZlbnQtbGlzdC9ldmVudC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { EventDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-event-list',\r\n  templateUrl: './event-list.component.html',\r\n  styleUrls: ['./event-list.component.scss']\r\n})\r\nexport class EventListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'title', 'desc', 'startDatetime', 'endDatetime', 'actions'];\r\n  dataSource: MatTableDataSource<EventDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const searchCrit = {\r\n      language: this.appService.getFlag().code\r\n    }\r\n\r\n    // this.appService.saveWithUrl('/service/career/eventDesc/search', searchCrit)\r\n    //   .subscribe((data: EventDesc[]) => {\r\n    //     this.dataSource = new MatTableDataSource(data);\r\n    //     this.dataSource.paginator = this.paginator;\r\n    //     this.dataSource.sort = this.sort;\r\n    //   });\r\n\r\n    const parameters: string[] = [];\r\n    if(this.tokenStorage.getRole()==='30'){\r\n      parameters.push('e.coordinator.id = |abc|' + this.tokenStorage.getUserId() + '|Long');\r\n    }\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteriaWithFiles('EventDesc', parameters).subscribe((data: EventDesc[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(eventDesc: EventDesc) {\r\n    const index: number = this.dataSource.data.indexOf(eventDesc);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(eventDesc.event.id, 'Event')\r\n        .subscribe(data => {\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource = new MatTableDataSource<EventDesc>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".mat-select-panel {\\n  min-width: calc(20% + 17px) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ldmVudC9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGV2ZW50XFxldmVudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9ldmVudC9ldmVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHNDQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L2V2ZW50L2V2ZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zZWxlY3QtcGFuZWxcclxue1xyXG4gICAgbWluLXdpZHRoOiBjYWxjKDIwJSArIDE3cHgpICFpbXBvcnRhbnQ7XHJcbn0iLCIubWF0LXNlbGVjdC1wYW5lbCB7XG4gIG1pbi13aWR0aDogY2FsYygyMCUgKyAxN3B4KSAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Event, EventDesc, User } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-event-component',\r\n  templateUrl: './event.component.html',\r\n  styleUrls: ['./event.component.scss']\r\n})\r\nexport class EventComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'actions'];\r\n  dataSource: MatTableDataSource<EventDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  event: Event = new Event();\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  hours: string[];\r\n  minutes: string[];\r\n\r\n  hour: string;\r\n  minute: string;\r\n  activeUsers: User[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.getActiveUsers();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getDescriptions(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.minutes = ['00', '15', '30', '45'];\r\n    this.hours = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.event = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.event = new Event();\r\n    this.event.eventDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const ed = new EventDesc();\r\n      ed.language = flag.code;\r\n      this.event.eventDescs.push(ed);\r\n    }\r\n  }\r\n\r\n  getDescriptions(eventId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(eventId, 'com.wack.model.Event')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.event = result;\r\n          this.setHours();\r\n          const images: any[] = [];\r\n          this.event.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/events/' + eventId + '/' + item,\r\n              preview: 'assets/images/events/' + eventId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all event desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.event.status = (this.event.status == null\r\n      || this.event.status.toString() === 'false'\r\n      || this.event.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  setHours() {\r\n    this.event.beginHour = '0' + new Date(this.event.beginDate).getHours() + '';\r\n    if (this.event.beginHour.length === 1) {\r\n      this.event.beginHour += '0';\r\n    }\r\n    this.event.beginMinute = new Date(this.event.beginDate).getMinutes() + '';\r\n    if (this.event.beginMinute.length === 1) {\r\n      this.event.beginMinute += '0';\r\n    }\r\n    this.event.endHour = '0' + new Date(this.event.endDate).getHours() + '';\r\n    if (this.event.endHour.length === 1) {\r\n      this.event.endHour += '0';\r\n    }\r\n    this.event.endMinute = new Date(this.event.endDate).getMinutes() + '';\r\n    if (this.event.endMinute.length === 1) {\r\n      this.event.endMinute += '0';\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    this.event.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n    this.event.remainingFileNames = [];\r\n\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        console.log('Additional file added: ' + 'picture.' + this.files[i].file.name);\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      } else {\r\n        console.log(this.files[i]);\r\n        const pathSplitArray = this.files[i].link.split('/');\r\n        this.event.remainingFileNames.push(pathSplitArray[pathSplitArray.length - 1]);\r\n      }\r\n    }\r\n\r\n    this.setToggles();\r\n    const beginDateStr = new Date(this.event.beginDate)\r\n      .toISOString()\r\n      .split('T')[0];\r\n    const endDateStr = new Date(this.event.beginDate)\r\n      .toISOString()\r\n      .split('T')[0];\r\n\r\n    this.event.beginDate = new Date(beginDateStr + 'T' + this.event.beginHour + ':' + this.event.beginMinute + ':00');\r\n    this.event.endDate = new Date(endDateStr + 'T' + this.event.endHour + ':' + this.event.endMinute + ':00');\r\n    const thisEvent = { ...this.event };\r\n    this.cleanDescriptions(thisEvent);\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(thisEvent, 'Event', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.event, null);\r\n            this.event = { ...result };\r\n            this.onSave(this.event);\r\n            this.setHours();\r\n            this.clear();\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(thisEvent, 'Event')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.event, null);\r\n            this.event = { ...result };\r\n            this.onSave(this.event);\r\n            this.setHours();\r\n            this.clear();\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  cleanDescriptions(e: Event) {\r\n    e.eventDescs.forEach(element => {\r\n      element.event = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(eDesc: EventDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(eDesc.event.id, 'Event')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(eDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<EventDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const ev = $event;\r\n\r\n    let i = 0;\r\n    ev.eventDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const edesc = { ...ev.eventDescs[i] }\r\n        edesc.event = ev;\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n\r\n\r\n  hourSelectionChange(event) {\r\n\r\n  }\r\n\r\n  minuteSelectionChange(event) {\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmFxLWxpc3QvZmFxLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Faq } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-faq-list',\r\n  templateUrl: './faq-list.component.html',\r\n  styleUrls: ['./faq-list.component.scss']\r\n})\r\nexport class FaqListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'language', 'question', 'noCount', 'yesCount', 'actions' ];\r\n  dataSource: MatTableDataSource<Faq>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('com.wack.model.website.Faq', parameters).subscribe((data: Faq[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(faq : Faq) {\r\n    const index: number = this.dataSource.data.indexOf(faq);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(faq.id, 'Faq')\r\n      .subscribe(data => {\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Faq>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmFxL2ZhcWkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Faq } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-faqi-component',\r\n  templateUrl: './faqi.component.html',\r\n  styleUrls: ['./faqi.component.scss']\r\n})\r\nexport class FaqiComponent extends BaseComponent implements OnInit {\r\n  dataSource: MatTableDataSource<Faq>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  faq: Faq = new Faq();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  picture: any[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  \r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.getFaq(params.id);\r\n    });\r\n  }\r\n\r\n\r\n  getFaq(faqId: number) {\r\n    if (faqId === 0) {\r\n      this.faq = new Faq();\r\n    }\r\n\r\n    if (faqId > 0)\r\n      this.appService.getOneWithChildsAndFiles(faqId, 'com.wack.model.website.Faq')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.faq = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  save() {\r\n\r\n    this.faq.language = this.flag.name;\r\n    this.faq.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.appService.save(this.faq, 'com.wack.model.website.Faq')\r\n      .subscribe(data => {\r\n        this.processResult(data, this.faq, null)\r\n        this.faq = data;\r\n      });\r\n\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvZmF2b3JpdGVzL2Zhdm9yaXRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  \r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.appService.Data.favorites);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public remove(property:News) {\r\n    const index: number = this.dataSource.data.indexOf(property);    \r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    } \r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9pbWFnZS9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXGltYWdlXFxJbWFnZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaW1hZ2UvSW1hZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvaW1hZ2UvSW1hZ2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Image } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-images-component',\r\n  templateUrl: './Images.component.html',\r\n  styleUrls: ['./Images.component.scss']\r\n})\r\nexport class ImagesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'rank', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<Image>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  image: Image = new Image();\r\n  selected = new FormControl(0);\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Image', parameters)\r\n      .subscribe((data: Image[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Image complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setImage($event) {\r\n    this.image = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.image = new Image();\r\n  }\r\n\r\n  getImage(imageId: number) {\r\n    this.appService.getOneWithChildsAndFiles(imageId, 'Image')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.image = result;\r\n          const images: any[] = [];\r\n          this.image.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/images/' + imageId + '/' + item,\r\n              preview: 'assets/images/images/' + imageId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.image.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.image, 'Image', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.image, null);\r\n          this.image = result;\r\n          this.onSave(this.image);\r\n        });\r\n    } else {\r\n      this.appService.save(this.image, 'Image')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.image, null);\r\n          this.image = result;\r\n          this.onSave(this.image);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  public remove(im: Image) {\r\n    this.messages = '';\r\n    this.appService.delete(im.id, 'Image')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(im);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Image>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLWFwcGxpLWxpc3Qvam9iLWFwcGxpLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { JobPositionDesc, JobAppli } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-appli-list',\r\n  templateUrl: './job-appli-list.component.html',\r\n  styleUrls: ['./job-appli-list.component.scss']\r\n})\r\nexport class JobAppliListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'name', 'phone', 'email', 'createDatetime', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<JobAppli>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (Number(params.jobPositionId) > 0) {\r\n        this.getJobApplis(params.jobPositionId);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public getJobApplis(jobPositionId: number) {\r\n    const parameters: string[] = [];\r\n    if (jobPositionId > 0) { \r\n      parameters.push('e.jobPosition.id = |jobPositionId|' + jobPositionId + '|Long');\r\n    }\r\n\r\n    this.appService.getAllByCriteria('JobAppli', parameters)\r\n    .subscribe((data: JobAppli[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLWFwcGxpL2pvYi1hcHBsaS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, JobPositionDesc, JobAppli } from 'src/app/app.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-appli-component',\r\n  templateUrl: './job-appli.component.html',\r\n  styleUrls: ['./job-appli.component.scss']\r\n})\r\nexport class JobAppliComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  jobAppli: JobAppli = new JobAppli();\r\n  jobPositionDesc: JobPositionDesc = new JobPositionDesc();\r\n  jobPositionId: number;\r\n  //messages: any;\r\n  error: string;\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n  action = 'submitting';\r\n\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (Number(params.id) === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getJobAppli(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  clear() {\r\n    this.jobAppli = new JobAppli();\r\n  }\r\n\r\n\r\n  getJobPositionDesc(jobPositionDescId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobPositionDescId, 'JobPositionDesc')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobPositionDesc = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job position desc complete'));\r\n  }\r\n\r\n  getJobAppli(jobAppliId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobAppliId, 'JobAppli')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobAppli = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job application complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.jobAppli.status = (this.jobAppli.status == null\r\n      || this.jobAppli.status.toString() === 'false'\r\n      || this.jobAppli.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    const userId = +this.tokenStorage.getUserId();\r\n    if (userId > 0) {\r\n      this.jobAppli.applicant = new User();\r\n      this.jobAppli.modifiedBy = userId;\r\n      this.jobAppli.applicant.id = userId;\r\n    }\r\n    this.jobAppli.jobPosition = this.jobPositionDesc.jobPosition;\r\n\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.jobAppli.status = (this.jobAppli.status == null || this.jobAppli.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.jobAppli, 'JobAppli', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResultBasedOnId(result, this.jobAppli);\r\n        });\r\n    } else {\r\n      this.appService.save(this.jobAppli, 'JobAppli')\r\n        .subscribe(result => {\r\n          this.processResultBasedOnId(result, this.jobAppli);\r\n          this.action = 'success';\r\n        });\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLXBvc2l0aW9uLWxpc3Qvam9iLXBvc2l0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, JobPositionDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-job-position-list',\r\n  templateUrl: './job-position-list.component.html',\r\n  styleUrls: ['./job-position-list.component.scss']\r\n})\r\nexport class JobPositionListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'title', 'desc', 'createDatetime', 'resumeCnt', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService: AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const searchCrit = {\r\n      language: this.appService.getFlag().code\r\n    }\r\n\r\n    this.appService.saveWithUrl('/service/career/jobPositionDesc/search', searchCrit)\r\n      .subscribe((data: JobPositionDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  public remove(jobPositionDesc: JobPositionDesc) {\r\n    const index: number = this.dataSource.data.indexOf(jobPositionDesc);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(jobPositionDesc.jobPosition.id, 'com.wack.model.JobPosition')\r\n        .subscribe(data => {\r\n          console.info(data);\r\n\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource = new MatTableDataSource<JobPositionDesc>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvam9iLXBvc2l0aW9uL2pvYi1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, User, Video, JobPositionDesc, JobPosition } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job-position-component',\r\n  templateUrl: './job-position.component.html',\r\n  styleUrls: ['./job-position.component.scss']\r\n})\r\nexport class JobPositionComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<JobPositionDesc>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  jobPosition: JobPosition = new JobPosition();\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag: any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clear();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getDescriptions(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.jobPosition = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.jobPosition = new JobPosition();\r\n    this.jobPosition.jobPositionDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const jpd = new JobPositionDesc();\r\n      jpd.language = flag.code;\r\n      this.jobPosition.jobPositionDescs.push(jpd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(jobPositionId: number) {\r\n    this.messages = '';\r\n\r\n    this.appService.getOneWithChildsAndFiles(jobPositionId, 'com.wack.model.JobPosition')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          console.log(result);\r\n          this.jobPosition = result;\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all job position desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.jobPosition.status = (this.jobPosition.status == null\r\n      || this.jobPosition.status.toString() === 'false'\r\n      || this.jobPosition.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisJobposition = { ...this.jobPosition };\r\n      this.cleanDescriptions(thisJobposition);\r\n\r\n      this.appService.save(thisJobposition, 'JobPosition')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.jobPosition, null);\r\n            this.jobPosition = { ...result };\r\n            this.onSave(this.jobPosition);\r\n            console.log(this.jobPosition)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(jp: JobPosition) {\r\n    jp.jobPositionDescs.forEach(element => {\r\n      element.jobPosition = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(jpDesc: JobPositionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(jpDesc.jobPosition.id, 'JobPosition')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(jpDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<JobPositionDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const jobPos = $event;\r\n\r\n    let i = 0;\r\n    jobPos.jobPositionDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const jpdesc = { ...jobPos.jobPositionDescs[i] }\r\n        jpdesc.jobPosition = jobPos;\r\n        if (!this.dataSource.data) {\r\n          this.dataSource.data = [];\r\n        }\r\n        this.updateDatasourceData(this.dataSource, this.paginator, this.sort, jpdesc);\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9tZWV0aW5nUmVwb3J0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxcbWVldGluZ1JlcG9ydFxcTWVldGluZ1JlcG9ydHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbWVldGluZ1JlcG9ydC9NZWV0aW5nUmVwb3J0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L21lZXRpbmdSZXBvcnQvTWVldGluZ1JlcG9ydHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MeetingReport, MeetingReportDesc, User } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-mreport-component',\r\n  templateUrl: './MeetingReports.component.html',\r\n  styleUrls: ['./MeetingReports.component.scss']\r\n})\r\nexport class MeetingReportsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['meetingDate', 'title', 'author', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<MeetingReportDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  meetingReport: MeetingReport = new MeetingReport();\r\n  activeUsers: User[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n    this.getActiveUsers();\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |uStat|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('MeetingReportDesc', parameters)\r\n      .subscribe((data: MeetingReportDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all MeetingReportDesc complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setMeetingReport($event) {\r\n    this.meetingReport = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.meetingReport = new MeetingReport();\r\n    this.meetingReport.meetingReportDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const mrd = new MeetingReportDesc();\r\n      mrd.language = flag.code;\r\n      mrd.title = '';\r\n      this.meetingReport.meetingReportDescs.push(mrd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(meetingReportId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (meetingReportId != null) {\r\n      parameters.push('e.meetingReport.id = |meetingReportId|' + meetingReportId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('MeetingReportDesc', parameters)\r\n      .subscribe((data: MeetingReportDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.meetingReport = data[0].meetingReport;\r\n          this.meetingReport.meetingReportDescs = data;\r\n\r\n          this.selected.setValue(0);\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all meeting report desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.meetingReport.status = (this.meetingReport.status == null\r\n      || this.meetingReport.status.toString() === 'false'\r\n      || this.meetingReport.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisMeetingReport = {...this.meetingReport};\r\n      this.cleanDescriptions(thisMeetingReport);\r\n\r\n      this.appService.save(thisMeetingReport, 'MeetingReport')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.meetingReport, null);\r\n            this.meetingReport = {...result};\r\n            this.onSave(this.meetingReport);\r\n            console.log(this.meetingReport)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(mr: MeetingReport) {\r\n    mr.meetingReportDescs.forEach(element => {\r\n       element.meetingReport = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(mrDesc: MeetingReportDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(mrDesc.meetingReport.id, 'MeetingReport')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(mrDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<MeetingReportDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const mReport = $event;\r\n\r\n    let i = 0;\r\n    mReport.meetingReportDescs.forEach(element => {\r\n        if (element.language === this.appService.getFlag().code) {\r\n          const mrdesc = {...mReport.meetingReportDescs[i]}\r\n          mrdesc.meetingReport = mReport;\r\n          if (!this.dataSource.data) {\r\n            this.dataSource.data = [];\r\n          }\r\n          this.updateDatasourceData(this.dataSource, this.paginator, this.sort, mrdesc);\r\n        }\r\n        i++;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbXktcHJvcGVydGllcy9teS1wcm9wZXJ0aWVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './my-properties.component.html',\r\n  styleUrls: ['./my-properties.component.scss']\r\n})\r\nexport class MyPropertiesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views','rating', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.appService.getProperties().subscribe(res => {\r\n      this.dataSource = new MatTableDataSource(res);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(property:News) {\r\n    const index: number = this.dataSource.data.indexOf(property);\r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbmV3cy1saXN0L25ld3MtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-news-list',\r\n  templateUrl: './news-list.component.html',\r\n  styleUrls: ['./news-list.component.scss']\r\n})\r\nexport class NewsListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'lang', 'title', 'publicationDatetime', 'actions' ];\r\n  dataSource: MatTableDataSource<News>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('com.wack.model.News', parameters).subscribe((data: News[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(news : News) {\r\n    const index: number = this.dataSource.data.indexOf(news);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(news.id, 'com.wack.model.News')\r\n      .subscribe(data => {\r\n          console.info(data);\r\n          \r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<News>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbmV3cy9uZXdzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, User, Video } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-news-component',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<News>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  news: News = new News();\r\n  newss: News[] = [];\r\n  messages: any;\r\n  error: string;\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  public flag : any;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.news === null) {\r\n      this.clear();\r\n    } else {\r\n      this.news.language = flag.code;\r\n    }\r\n  }\r\n\r\n  public addNewsVideo(): void {\r\n    if(!this.news.videos){\r\n      this.news.videos =[];\r\n    }\r\n    this.news.videos.push(new Video());\r\n  }\r\n\r\n  public deleteNewsVideo(id: number, index: number) {\r\n\r\n    if (id === undefined || id === null) {\r\n      this.removeItem(this.news.videos, id);\r\n      return;\r\n    }\r\n\r\n    this.appService.delete(id, 'com.wack.model.Video')\r\n      .subscribe(data => {\r\n        this.removeItem(this.news.videos, id);\r\n        this.processDeleteResult(data, this.messages);\r\n      });\r\n  }\r\n\r\n  public deleteFile(news: News, fileName: string) {\r\n    const vo = { id: news.id, name: fileName };\r\n    this.appService.deleteFile('com.wack.model.News', vo)\r\n      .subscribe(data => {\r\n        this.removeElement(this.news.fileNames, fileName);\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const lang = this.appService.getFlag();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n        this.flag = this.flags[0];\r\n      } else {\r\n        this.getNews(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getNews(newsId: number) {\r\n    this.appService.getOneWithChildsAndFiles(newsId, 'com.wack.model.News')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.news = result;\r\n          console.log(result);\r\n          const images: any[] = [];\r\n          if(this.news.language==='fr'){\r\n            this.flag = this.flags[0];\r\n          }else{\r\n            this.flag = this.flags[1];\r\n          }\r\n          console.log(this.news);\r\n          this.news.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/news/' + newsId + '/' + item,\r\n              preview: 'assets/images/news/' + newsId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.news.author = new User();\r\n    this.news.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.news.author.id = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.news.status = (this.news.status == null || this.news.status.toString() === 'false') ? 0 : 1;\r\n    this.news.featured = (this.news.featured == null || this.news.featured.toString() === 'false') ? 0 : 1;\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.news, 'News', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            console.log('saveWithFile');\r\n            this.news = result;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(this.news, 'News')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.news = result;\r\n            console.log('Saved');\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.news = new News();\r\n    this.news.author = new User();\r\n    this.news.author.id = +this.tokenStorage.getUserId();\r\n    this.news.language = this.flag.code;\r\n    this.news.fileNames = [];\r\n    this.news.videos = [];\r\n  }\r\n\r\n}","import { Component, OnInit, ViewChild, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { Poll, PollQuestion, PollQuestionDesc, PositionDesc, PollChoice, PollChoiceDesc, User } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-pollquestion-component',\r\n  templateUrl: './PollQuestions.component.html',\r\n  styleUrls: ['./Polls.component.scss']\r\n})\r\nexport class PollQuestionsComponent extends BaseComponent implements OnInit {\r\n\r\n  messages = '';\r\n\r\n  @Input() poll: Poll;\r\n  pollQuestion: PollQuestion = new PollQuestion();\r\n  pollQuestions: PollQuestion[] = [];\r\n\r\n  pollQuestionDescs: PollQuestionDesc[] = [];\r\n\r\n  activePositions: PositionDesc[];\r\n  activeUsers: User[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getDescriptions(undefined);\r\n    this.getActivePositions();\r\n    this.getActiveUsers();\r\n  }\r\n\r\n\r\n  public getActivePositions() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.position.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('PositionDesc', parameters).subscribe((data: PositionDesc[]) => {\r\n      this.activePositions = data;\r\n    });\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.activeUsers = data;\r\n    });\r\n  }\r\n\r\n  getPollQuestions() {\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollQuestionDescs', {\r\n          language: this.appService.getFlag().code,\r\n          //status: 1,\r\n          pollId: this.poll.id\r\n        })\r\n        .subscribe(data => {\r\n          this.pollQuestionDescs = data;\r\n        });\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPoll($event) {\r\n    this.poll = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.pollQuestion = new PollQuestion();\r\n    this.pollQuestion.pollQuestionDescs = [];\r\n    this.pollQuestion.pollChoices = [];\r\n    this.pollQuestion.pollChoices.push(new PollChoice());\r\n    for (const flag of this.appService.flags) {\r\n      const pqd = new PollQuestionDesc();\r\n      pqd.language = flag.code;\r\n      pqd.description = '';\r\n      this.pollQuestion.pollQuestionDescs.push(pqd);\r\n\r\n      const pcd = new PollChoiceDesc();\r\n      pcd.language = flag.code;\r\n      pcd.description = '';\r\n      this.pollQuestion.pollChoices[0].pollChoiceDescs.push(pcd);\r\n    }\r\n  }\r\n\r\n  addChoice() {\r\n    const pollChoice = new PollChoice();\r\n    for (const flag of this.appService.flags) {\r\n      const pcd = new PollChoiceDesc();\r\n      pcd.language = flag.code;\r\n      pcd.description = '';\r\n      pollChoice.pollChoiceDescs.push(pcd);\r\n    }\r\n\r\n\r\n    this.pollQuestion.pollChoices.push(pollChoice);\r\n\r\n  }\r\n\r\n\r\n  getDescriptions(pollQuestionId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollQuestionId !== undefined) {\r\n      parameters.push('e.pollQuestion.id = |pollQuestionId|' + pollQuestionId + '|Long');\r\n\r\n      this.appService.getAllByCriteria('PollQuestionDesc', parameters)\r\n        .subscribe((data: PollQuestionDesc[]) => {\r\n\r\n          if (data !== null && data.length > 0) {\r\n            this.pollQuestion = data[0].pollQuestion;\r\n            this.pollQuestion.pollQuestionDescs = data;\r\n\r\n            this.selected.setValue(1);\r\n\r\n          }\r\n        },\r\n          error => console.log(error),\r\n          () => console.log('Get all pollQuestion desc complete'));\r\n    } else {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  setToggles() {\r\n    this.poll.status = (this.poll.status == null\r\n      || this.poll.status.toString() === 'false'\r\n      || this.poll.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.pollQuestion.poll = new Poll();\r\n      this.pollQuestion.poll.id = this.poll.id;\r\n      this.setToggles();\r\n      const thisPollQuestion = {...this.pollQuestion};\r\n      this.cleanDescriptions(thisPollQuestion);\r\n\r\n      this.appService.save(thisPollQuestion, 'PollQuestion')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.pollQuestion, null);\r\n            this.pollQuestion = {...result};\r\n            this.onSave(this.pollQuestion);\r\n            this.selected.setValue(2);\r\n            console.log(this.pollQuestion)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n\r\n  edit(pollQuestionId: number) {\r\n    this.messages = '';\r\n\r\n    const parameters: string[] = [];\r\n    this.appService.getOneWithChildsAndFiles(pollQuestionId, 'com.wack.poll.PollQuestion').subscribe((data: PollQuestion) => {\r\n      this.pollQuestion = data\r\n    });\r\n }\r\n\r\n\r\n  cleanDescriptions(pq: PollQuestion) {\r\n    pq.pollQuestionDescs.forEach(element => {\r\n       element.pollQuestion = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(pqDesc: PollQuestionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pqDesc.pollQuestion.id, 'PollQuestion')\r\n      .subscribe(resp => {\r\n        \r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    // if (this.dataSource.paginator) {\r\n    //   this.dataSource.paginator.firstPage();\r\n    // }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pq = $event;\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollQuestionDescs', {\r\n      id: pq.id,\r\n      language: this.appService.getFlag().code\r\n    })\r\n    .subscribe(data => {\r\n      if (data && data.length > 0) {\r\n        this.pollQuestionDescs.push(data[0]);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  onToggleGroupChange(event) {\r\n    this.pollQuestion.status = event.value;\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb2xsL0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccG9sbFxcUG9sbHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbC9Qb2xscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3BvbGwvUG9sbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { PollDesc, Poll, PollTypeDesc, PollQuestion } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PollQuestionsComponent } from './PollQuestions.component';\r\n\r\n@Component({\r\n  selector: 'app-poll-component',\r\n  templateUrl: './Polls.component.html',\r\n  styleUrls: ['./Polls.component.scss']\r\n})\r\nexport class PollsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['pollTypeDescName', 'title', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PollDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  @ViewChild(PollQuestionsComponent, { static: false }) pollQuestionsView: PollQuestionsComponent;\r\n\r\n  messages = '';\r\n  poll: Poll;\r\n  pollQuestion: PollQuestion = new PollQuestion();\r\n\r\n  pollTypes: PollTypeDesc[];\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private changeDetectedRef: ChangeDetectorRef) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getPolls();\r\n    this.getDescriptions(undefined);\r\n    this.getPollTypes();\r\n  }\r\n\r\n  public getPollTypes() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.pollType.status = |uStat|1|Short');\r\n    this.appService.getAllByCriteriaWithFiles('PollTypeDesc', parameters).subscribe((data: PollTypeDesc[]) => {\r\n      this.pollTypes = data;\r\n      console.log(this.pollTypes);\r\n    });\r\n  }\r\n\r\n  getPolls() {\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollDescs', {\r\n      language: this.appService.getFlag().code,\r\n      //status: 1\r\n    })\r\n        .subscribe(data => {\r\n          this.dataSource = new MatTableDataSource(data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          // if (data.errors === null || data.errors.length === 0) {\r\n          //   //this.contactForm.reset();\r\n          // }\r\n        });\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPoll($event) {\r\n    this.poll = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.poll = new Poll();\r\n    this.poll.pollDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PollDesc();\r\n      pd.language = flag.code;\r\n      pd.title = '';\r\n      pd.description = '';\r\n      pd.endNote = '';\r\n      this.poll.pollDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  addNew() {\r\n    this.clear();\r\n    this.selected.setValue(1);\r\n  }\r\n\r\n  getDescriptions(pollId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollId) {\r\n      parameters.push('e.poll.id = |pollId|' + pollId + '|Long');\r\n      this.appService.getAllByCriteria('PollDesc', parameters)\r\n      .subscribe((data: PollDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.poll = data[0].poll;\r\n          this.poll.pollDescs = data;\r\n\r\n          this.selected.setValue(1);\r\n\r\n          this.changeDetectedRef.detectChanges();\r\n\r\n          setTimeout(() => {\r\n            this.pollQuestionsView.poll = this.poll;\r\n            this.pollQuestionsView.getPollQuestions();\r\n          }, 500);\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all poll desc complete'));\r\n    }\r\n  }\r\n\r\n  setToggles() {\r\n    this.poll.status = (this.poll.status == null\r\n      || this.poll.status.toString() === 'false'\r\n      || this.poll.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      //this.setToggles();\r\n      const thisPoll = {...this.poll};\r\n      this.cleanDescriptions(thisPoll);\r\n\r\n      this.appService.save(thisPoll, 'Poll')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.poll, null);\r\n            this.poll = {...result};\r\n            this.onSave(this.poll);\r\n            this.selected.setValue(2);\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: Poll) {\r\n    p.pollDescs.forEach(element => {\r\n       element.poll = undefined;\r\n    });\r\n  }\r\n\r\n\r\n  public remove(pDesc: PollDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.poll.id, 'Poll')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PollDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const p = $event;\r\n\r\n    this.appService.saveWithUrl('/service/poll/getPollDescs', {\r\n      id: p.id,\r\n      language: this.appService.getFlag().code\r\n    })\r\n    .subscribe(data => {\r\n      this.updateDatasourceData(this.dataSource, this.paginator, this.sort, data[0]);\r\n      this.selected.setValue(2);\r\n    });\r\n  }\r\n\r\n\r\n  onToggleGroupChange(event) {\r\n    this.poll.status = event.value;\r\n  }\r\n\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb2xsVHlwZS9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHBvbGxUeXBlXFxQb2xsVHlwZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbFR5cGUvUG9sbFR5cGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9sbFR5cGUvUG9sbFR5cGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PollTypeDesc, PollType } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pollTypes-component',\r\n  templateUrl: './PollTypes.component.html',\r\n  styleUrls: ['./PollTypes.component.scss']\r\n})\r\nexport class PollTypesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PollTypeDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  pollType: PollType = new PollType();\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('PollTypeDesc', parameters)\r\n      .subscribe((data: PollTypeDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all PollTypeDesc complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPollType($event) {\r\n    this.pollType = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.pollType = new PollType();\r\n    this.pollType.pollTypeDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PollTypeDesc();\r\n      pd.language = flag.code;\r\n      pd.name = '';\r\n      this.pollType.pollTypeDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(pollTypeId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (pollTypeId != null) {\r\n      parameters.push('e.pollType.id = |pollTypeId|' + pollTypeId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('PollTypeDesc', parameters)\r\n      .subscribe((data: PollTypeDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.pollType = data[0].pollType;\r\n          this.pollType.pollTypeDescs = data;\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all pollType desc complete'));\r\n  }\r\n\r\n\r\n  setToggles() {\r\n    this.pollType.status = (this.pollType.status == null\r\n      || this.pollType.status.toString() === 'false'\r\n      || this.pollType.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thispollType = {...this.pollType};\r\n      this.cleanDescriptions(thispollType);\r\n\r\n      this.appService.save(thispollType, 'PollType')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.pollType, null);\r\n            this.pollType = {...result};\r\n            this.onSave(this.pollType);\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: PollType) {\r\n    p.pollTypeDescs.forEach(element => {\r\n       element.pollType = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(pDesc: PollTypeDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.pollType.id, 'PollType')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PollTypeDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pol = $event;\r\n\r\n    let i = 0;\r\n    pol.pollTypeDescs.forEach(element => {\r\n        if (element.language === this.appService.getFlag().code) {\r\n          const pdesc = {...pol.pollTypeDescs[i]}\r\n          pdesc.pollType = pol;\r\n          if (!this.dataSource.data) {\r\n            this.dataSource.data = [];\r\n          }\r\n          this.updateDatasourceData(this.dataSource, this.paginator, this.sort, pdesc);\r\n        }\r\n        i++;\r\n    });\r\n  }\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb3NpdGlvbnMvQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxhY2NvdW50XFxwb3NpdGlvbnNcXFBvc2l0aW9ucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wb3NpdGlvbnMvUG9zaXRpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcG9zaXRpb25zL1Bvc2l0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PositionDesc, Position } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-positions-component',\r\n  templateUrl: './Positions.component.html',\r\n  styleUrls: ['./Positions.component.scss']\r\n})\r\nexport class PositionsComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<PositionDesc>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  position: Position = new Position();\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n    super(translate, tokenStorage);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n    this.getDescriptions(undefined);\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |langCode|' + this.appService.getFlag().code + '|String');\r\n    this.appService.getAllByCriteria('PositionDesc', parameters)\r\n      .subscribe((data: PositionDesc[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all PositionDesc complete'));\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = '';\r\n  }\r\n\r\n  setPosition($event) {\r\n    this.position = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.position = new Position();\r\n    this.position.positionDescs = [];\r\n    for (const flag of this.appService.flags) {\r\n      const pd = new PositionDesc();\r\n      pd.language = flag.code;\r\n      pd.name = '';\r\n      this.position.positionDescs.push(pd);\r\n    }\r\n  }\r\n\r\n  getDescriptions(positionId: number) {\r\n    this.messages = '';\r\n    const parameters: string[] = [];\r\n    if (positionId != null) {\r\n      parameters.push('e.position.id = |positionId|' + positionId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('PositionDesc', parameters)\r\n      .subscribe((data: PositionDesc[]) => {\r\n\r\n        if (data !== null && data.length > 0) {\r\n          this.position = data[0].position;\r\n          this.position.positionDescs = data;\r\n\r\n        }\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all position desc complete'));\r\n  }\r\n\r\n  setToggles() {\r\n    this.position.status = (this.position.status == null\r\n      || this.position.status.toString() === 'false'\r\n      || this.position.status.toString() === '0') ? 0 : 1;\r\n\r\n    this.position.leadership = (this.position.leadership == null\r\n      || this.position.leadership.toString() === 'false'\r\n      || this.position.leadership.toString() === '0') ? 0 : 1;\r\n\r\n\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    try {\r\n      this.setToggles();\r\n      const thisposition = { ...this.position };\r\n      this.cleanDescriptions(thisposition);\r\n\r\n      this.appService.save(thisposition, 'Position')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.processResult(result, this.position, null);\r\n            this.position = { ...result };\r\n            this.onSave(this.position);\r\n            console.log(this.position)\r\n            this.clear();\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  cleanDescriptions(p: Position) {\r\n    p.positionDescs.forEach(element => {\r\n      element.position = undefined;\r\n    });\r\n  }\r\n\r\n  public remove(pDesc: PositionDesc) {\r\n    this.messages = '';\r\n    this.appService.delete(pDesc.position.id, 'Position')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pDesc);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<PositionDesc>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    const pos = $event;\r\n\r\n    let i = 0;\r\n    pos.positionDescs.forEach(element => {\r\n      if (element.language === this.appService.getFlag().code) {\r\n        const pdesc = { ...pos.positionDescs[i] }\r\n        pdesc.position = pos;\r\n        if (!this.dataSource.data) {\r\n          this.dataSource.data = [];\r\n        }\r\n        this.updateDatasourceData(this.dataSource, this.paginator, this.sort, pdesc);\r\n      }\r\n      i++;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from 'src/app/theme/utils/app-validators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public infoForm: FormGroup;\r\n  public passwordForm: FormGroup;\r\n  public resumeForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.infoForm = this.formBuilder.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      phone: ['', Validators.required],\r\n      currentPassword: ['', Validators.required],\r\n      newPassword: ['', Validators.required],\r\n      image: null,\r\n      organization: null,\r\n      facebook: null,\r\n      twitter: null,\r\n      linkedin: null,\r\n      instagram: null,\r\n      website: null,\r\n      shortResume: null,\r\n      longResume: null,\r\n      confirmNewPassword: ['', Validators.required]\r\n    }, { validator: matchingPasswords('newPassword', 'confirmNewPassword') });    \r\n  }\r\n\r\n  public onInfoFormSubmit(values: Object): void {\r\n    if (this.infoForm.valid) {\r\n      this.snackBar.open('Your account information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onPasswordFormSubmit(values: Object): void {\r\n    if (this.passwordForm.valid) {\r\n      this.snackBar.open('Your password changed successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy1saXN0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccHJvamVjdHMtbGlzdFxccHJvamVjdC1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3Byb2plY3RzLWxpc3QvcHJvamVjdC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcHJvamVjdHMtbGlzdC9wcm9qZWN0LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XHJcbn1cclxuXHJcbi5tYXQtcm93OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcbn1cblxuLm1hdC1yb3c6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, Project } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.scss']\r\n})\r\nexport class ProjectListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'title', 'budget','owner', 'createDate','status'];\r\n  dataSource: MatTableDataSource<Project>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    if(this.tokenStorage.getRole()==='30'){\r\n      parameters.push('e.user.id = |abc|' + this.tokenStorage.getUserId() + '|Long');\r\n    }\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(proj : Project) {\r\n    const index: number = this.dataSource.data.indexOf(proj);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(proj.id, 'Project')\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Project>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".ng-tns-c11-6 .ng-star-inserted .ui-autocomplete-list-item span {\\n  overflow: auto;\\n  min-width: 360px;\\n  min-height: 25px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHByb2plY3RzXFxwcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3Byb2plY3RzL3Byb2plY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0gsZ0JBQUE7RUFDQSwyQkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9wcm9qZWN0cy9wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXRucy1jMTEtNiAubmctc3Rhci1pbnNlcnRlZCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSBzcGFue1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcblx0bWluLXdpZHRoOiAzNjBweDtcclxuXHRtaW4taGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7IFxyXG59IiwiLm5nLXRucy1jMTEtNiAubmctc3Rhci1pbnNlcnRlZCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSBzcGFuIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1pbi13aWR0aDogMzYwcHg7XG4gIG1pbi1oZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Project } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-project-component',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent extends BaseComponent implements OnInit {\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public flag: any;\r\n  project: Project = new Project();\r\n  projects: Project[] = [];\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.project === null) {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  public deleteFile(project: Project, fileName: string) {\r\n    const vo = { id: project.id, name: fileName };\r\n    this.appService.deleteFile('Project', vo)\r\n      .subscribe(data => {\r\n        this.removeElement(this.project.fileNames, fileName);\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.clear();\r\n      } else {\r\n        this.getProject(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getProject(projectId: number) {\r\n    this.appService.getOneWithChildsAndFiles(projectId, 'Project')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.project = result;\r\n\r\n          console.log(this.project);\r\n          const images: any[] = [];\r\n          this.project.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/projects/' + projectId + '/' + item,\r\n              preview: 'assets/images/projects/' + projectId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.project.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n    this.project.remainingFileNames = [];\r\n\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        console.log('Additional file added: ' + 'picture.' + this.files[i].file.name);\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      } else {\r\n        console.log(this.files[i]);\r\n        const pathSplitArray = this.files[i].link.split('/');\r\n        this.project.remainingFileNames.push(pathSplitArray[pathSplitArray.length - 1]);\r\n      }\r\n    }\r\n\r\n\r\n    //this.project.status = (this.project.status == null || this.project.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.project, 'Project', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            console.log('saveWithFile');\r\n            this.project = result;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.appService.save(this.project, 'Pwroject')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.project = result;\r\n            console.log('Saved');\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.project = new Project();\r\n  }\r\n\r\n  onToggleGroupChange(event) {\r\n    this.project.status = event.value;\r\n  }\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9wdWJsaWNpdHkvQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxhY2NvdW50XFxwdWJsaWNpdHlcXFB1YmxpY2l0aWVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hY2NvdW50L3B1YmxpY2l0eS9QdWJsaWNpdGllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3B1YmxpY2l0eS9QdWJsaWNpdGllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UxZWFmNztcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIubWF0LXJvdzpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLm1hdC1yb3c6bnRoLWNoaWxkKG9kZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xufVxuXG4ubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjU3MjI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Publicity } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-publicities-component',\r\n  templateUrl: './Publicities.component.html',\r\n  styleUrls: ['./Publicities.component.scss']\r\n})\r\nexport class PublicitiesComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'url', 'beginDate', 'endDate', 'rank', 'cost', 'status', 'actions'];\r\n  dataSource: MatTableDataSource<Publicity>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  publicity: Publicity = new Publicity();\r\n  selected = new FormControl(0);\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Publicity', parameters)\r\n      .subscribe((data: Publicity[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Publicity complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setMeetingReport($event) {\r\n    this.publicity = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.publicity = new Publicity();\r\n  }\r\n\r\n  getPublicity(publicityId: number) {\r\n    this.appService.getOneWithChildsAndFiles(publicityId, 'Publicity')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.publicity = result;\r\n          const images: any[] = [];\r\n          this.publicity.fileNames.forEach(item => {\r\n            const image = {\r\n              link: 'assets/images/publicitys/' + publicityId + '/' + item,\r\n              preview: 'assets/images/publicitys/' + publicityId + '/' + item\r\n            }\r\n            images.push(image);\r\n          })\r\n          this.files = images;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  setToggles() {\r\n    this.publicity.status = (this.publicity.status == null\r\n      || this.publicity.status.toString() === 'false'\r\n      || this.publicity.status.toString() === '0') ? 0 : 1;\r\n  }\r\n\r\n  save() {\r\n    this.publicity.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      if (this.files[i].file) {\r\n        this.formData.append('file[]', this.files[i].file, 'picture.' + this.files[i].file.name);\r\n      }\r\n    }\r\n\r\n    this.publicity.status = (this.publicity.status == null || this.publicity.status.toString() === 'false') ? 0 : 1;\r\n    if (this.files.length > 0) {\r\n      this.appService.saveWithFile(this.publicity, 'Publicity', this.formData, 'saveWithFile')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.publicity, null);\r\n          this.publicity = result;\r\n          this.onSave(this.publicity);\r\n        });\r\n    } else {\r\n      this.appService.save(this.publicity, 'Publicity')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.publicity, null);\r\n          this.publicity = result;\r\n          this.onSave(this.publicity);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  public remove(pub: Publicity) {\r\n    this.messages = '';\r\n    this.appService.delete(pub.id, 'Publicity')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(pub);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Publicity>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxccmVndWxhdGlvblxccmVndWxhdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL3JlZ3VsYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyx3QkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9yZWd1bGF0aW9uL3JlZ3VsYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucWwtc25vdyB7XHJcblx0aGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xyXG59IiwiLnFsLXNub3cge1xuICBoZWlnaHQ6IDUwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { StatusText, Regulation } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-regulation-component',\r\n  templateUrl: './regulation.component.html',\r\n  styleUrls: ['./regulation.component.scss']\r\n})\r\nexport class RegulationComponent extends BaseComponent implements OnInit {\r\n\r\n  regulation: Regulation = new Regulation();\r\n  messages: any;\r\n  error: string;\r\n  flag : any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flag = this.appService.getFlag();\r\n    this.regulation.language = this.flag.code;\r\n    this.getRegulation(this.flag);\r\n  }\r\n\r\n getRegulation(flag: any) {\r\n   this.messages = '';\r\n   this.regulation = new Regulation();\r\n   this.flag = flag ? flag : this.appService.getFlag();\r\n   this.regulation.language = this.flag.code;\r\n\r\n   const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('Regulation', parameters).subscribe((data: Regulation[]) => {\r\n      data.forEach((regulation) => {\r\n        if ( this.flag.code === regulation.language) {\r\n          this.regulation = regulation;\r\n        }\r\n      });\r\n\r\n    });\r\n }\r\n\r\n\r\n save() {\r\n    this.regulation.modifiedBy = +this.tokenStorage.getUserId();\r\n      this.appService.save(this.regulation, 'Regulation')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.regulation, undefined);\r\n        });\r\n    }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2VjdGlvbi1pdGVtcy9zZWN0aW9uLWl0ZW1zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Section, SectionItem } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-section-items',\r\n  templateUrl: './section-items.component.html',\r\n  styleUrls: ['./section-items.component.scss']\r\n})\r\nexport class SectionItemsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'lang', 'actions'];\r\n  dataSource: MatTableDataSource<SectionItem>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  section: Section = new Section();\r\n  menus = [{ name: 'SERVICES' }, { name: 'EXPERTISE' }, { name: 'ABOUTUS' }];\r\n  sectionItem: SectionItem = new SectionItem();\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n  formData = new FormData();\r\n  flag: any;\r\n  sectionImages: any;\r\n  messages = '';\r\n  selectedTab = 1;\r\n  selectedMainTabIndex = 1;\r\n  icons: string[] = ['build', 'add', 'add_circle', 'cancel', 'trending_up', 'business',\r\n    'school', 'record_voice_over', 'search', 'dashboard', 'radio', 'touch_app', 'movie',\r\n    'person','people','addchart','extension','language','psychology','wb_sunny','highlight',\r\n    'thumbs_up_down','share','public','science','self_improvement','model_training',\r\n    'headset','hearing','headset_mic','biotech','miscellaneous_services','analytics'];\r\n  constructor(public appService: AppService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.setLang();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id == 0) {\r\n        this.section = new Section();\r\n        this.section.language = this.flag.code;\r\n        this.sectionItem = new SectionItem();\r\n        this.dataSource = new MatTableDataSource();\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      } else {\r\n        this.getAll(params.id);\r\n        this.getSection(params.id);\r\n      }\r\n    });\r\n  }\r\n  public changeLang(flag) {\r\n    this.flag = flag;\r\n    if (this.section === null) {\r\n      this.section = new Section();\r\n    }\r\n    this.section.language = flag.code;\r\n  }\r\n\r\n  setLang() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 1) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n  getAll(sectionId: number) {\r\n    const parameters: string[] = [];\r\n    if (sectionId != null) {\r\n      parameters.push('e.section.id = |sectionId|' + sectionId + '|Long');\r\n    }\r\n    this.appService.getAllByCriteria('com.wack.model.website.SectionItem', parameters)\r\n      .subscribe((data: SectionItem[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Section Item complete'));\r\n  }\r\n\r\n  public remove(section: SectionItem) {\r\n    this.messages = '';\r\n    this.appService.delete(section.id, 'com.wack.model.website.SectionItem')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(section);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<SectionItem>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getSection(sectionId: number) {\r\n    if (sectionId > 0)\r\n      this.appService.getOne(sectionId, 'com.wack.model.website.Section')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.section = result;\r\n            if (this.section.language === 'fr') {\r\n              this.flag = this.flags[0];\r\n            } else {\r\n              this.flag = this.flags[1];\r\n            }\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.section = new Section();\r\n    this.section.language = this.flag.code;\r\n    this.sectionItem = new SectionItem();\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  addSectionItem() {\r\n    this.selectedTab = 1;\r\n    this.sectionItem = new SectionItem();\r\n  }\r\n  saveSection() {\r\n    this.messages = '';\r\n    try {\r\n      let nbFiles = 0;\r\n      for (const img of this.sectionImages) {\r\n        nbFiles++;\r\n        this.formData.append('file[]', img.file, 'picture.jpg');\r\n      }\r\n      console.log('Lang == ' + this.section.language);\r\n      if (this.section.language == null || this.section.language == '' ||\r\n        this.section.language == 'undefined') {\r\n        this.section.language = this.flag.code;\r\n      }\r\n      this.section.status = (this.section.status == null || this.section.status.toString() === 'false') ? 0 : 1;\r\n      this.section.showInMenu = (this.section.showInMenu == null || this.section.showInMenu.toString() === 'false') ? 0 : 1;\r\n\r\n      if (this.sectionImages.length > 0) {\r\n        this.appService.saveWithFile(this.section, 'Section', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              console.log('saveWithFile');\r\n              this.section = result;\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.section, 'Section')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.section = result;\r\n              console.log('Saved');\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  edit(si: SectionItem) {\r\n    this.sectionItem = si;\r\n    this.selectedTab = 1;\r\n  }\r\n  saveSectionItem() {\r\n    this.messages = '';\r\n    try {\r\n      this.messages = '';\r\n      this.sectionItem.section = this.section;\r\n      this.sectionItem.language = this.section.language;\r\n      const index: number = this.dataSource.data.indexOf(this.sectionItem);\r\n      this.sectionItem.status = (this.sectionItem.status == null || this.sectionItem.status.toString() === 'false') ? 0 : 1;\r\n      this.sectionItem.showInMenu = (this.sectionItem.showInMenu == null || this.sectionItem.showInMenu.toString() === 'false') ? 0 : 1;\r\n      this.appService.save(this.sectionItem, 'SectionItem')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.sectionItem = new SectionItem();\r\n            this.selectedTab = 0;\r\n            if (index !== -1) {\r\n              this.dataSource.data.splice(index, 1);\r\n            }\r\n            this.dataSource.data.push(result);\r\n            this.dataSource = new MatTableDataSource<SectionItem>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n            });\r\n          } else {\r\n            this.selectedTab = 1;\r\n            this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n              this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n            });\r\n          }\r\n        });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2VjdGlvbnMvc2VjdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Section } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.scss']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'name', 'title', 'lang', 'actions'];\r\n  dataSource: MatTableDataSource<Section>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\nmessages='';\r\n  constructor(public appService: AppService,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('com.wack.model.website.Section', parameters)\r\n      .subscribe((data: Section[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Section complete'));\r\n  }\r\n\r\n  public remove(section: Section) {\r\n    this.messages = '';\r\n        this.appService.delete(section.id, 'com.wack.model.website.Section')\r\n      .subscribe(resp => {\r\n        if (resp.result === 'SUCCESS') {\r\n          const index: number = this.dataSource.data.indexOf(section);\r\n          if (index !== -1) {\r\n            this.dataSource.data.splice(index, 1);\r\n            this.dataSource = new MatTableDataSource<Section>(this.dataSource.data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        } else if (resp.result === 'FOREIGN_KEY_FAILURE') {\r\n          this.translate.get(['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.DELETE_UNSUCCESS_FOREIGN_KEY'];\r\n          });\r\n        } else {\r\n          this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n            this.messages = res['MESSAGE.ERROR_OCCURRED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zZXR0aW5ncy9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHNldHRpbmdzXFxTZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zZXR0aW5ncy9TZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3NldHRpbmdzL1NldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-settings-component',\r\n  templateUrl: './Settings.component.html',\r\n  styleUrls: ['./Settings.component.scss']\r\n})\r\nexport class SettingsComponent extends BaseComponent implements OnInit {\r\n\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private changeDetectedRef: ChangeDetectorRef) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2xpZGVyLWl0ZW1zL3NsaWRlci1pdGVtcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Slider } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-slider-items',\r\n  templateUrl: './slider-items.component.html',\r\n  styleUrls: ['./slider-items.component.scss']\r\n})\r\nexport class SliderItemsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  slider: Slider = new Slider();\r\n  menus = [{ name: 'SERVICES' }, { name: 'EXPERTISE' }];\r\n  \r\n  formData = new FormData();\r\n  flag: any;\r\n  sliderImages: any;\r\n  messages = '';\r\n  selectedTab = 1;\r\n  selectedMainTabIndex = 1;\r\n  icons: string[] = ['build', 'add', 'add_circle', 'cancel', 'trending_up', 'business',\r\n    'school', 'record_voice_over', 'search', 'dashboard', 'radio', 'touch_app', 'movie',\r\n    'person','people','addchart','extension','language','psychology','wb_sunny','highlight',\r\n    'thumbs_up_down','share','public','science','self_improvement','model_training',\r\n    'headset','hearing','headset_mic','biotech','miscellaneous_services','analytics'];\r\n\r\n  constructor(public appService: AppService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.setLang();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id === 0) {\r\n        this.slider = new Slider();\r\n      } else {\r\n        this.getSlider(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  setLang() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n  }\r\n\r\n  onMainTabChanged($event) {\r\n    console.log('Selectd main = ' + this.selectedMainTabIndex);\r\n    this.messages = '';\r\n    if (this.selectedMainTabIndex === 1) {\r\n      this.selectedTab = 0;\r\n    }\r\n  }\r\n\r\n\r\n  getSlider(sliderId: number) {\r\n    if (sliderId > 0)\r\n      this.appService.getOne(sliderId, 'com.wack.model.website.Slider')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.slider = result;\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  clear() {\r\n    this.slider = new Slider();\r\n  }\r\n\r\n\r\n  saveSlider() {\r\n    this.messages = '';\r\n    try {\r\n      let nbFiles = 0;\r\n      for (const img of this.sliderImages) {\r\n        nbFiles++;\r\n        this.formData.append('file[]', img.file, 'picture.jpg');\r\n      }\r\n\r\n      this.slider.status = (this.slider.status == null || this.slider.status.toString() === 'false') ? 0 : 1;\r\n      \r\n      if (this.sliderImages.length > 0) {\r\n        this.appService.saveWithFile(this.slider, 'Slider', this.formData, 'saveWithFile')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              console.log('saveWithFile');\r\n              this.slider = result;\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.appService.save(this.slider, 'Slider')\r\n          .subscribe(result => {\r\n            if (result.id > 0) {\r\n              this.slider = result;\r\n              console.log('Saved');\r\n              this.translate.get(['MESSAGE.SAVE_SUCCESS', 'COMMON.SUCCESS']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_SUCCESS'];\r\n              });\r\n            } else {\r\n              this.translate.get(['MESSAGE.SAVE_UNSUCCESS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.messages = res['MESSAGE.SAVE_UNSUCCESS'];\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvc2xpZGVycy9zbGlkZXJzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Slider } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './sliders.component.html',\r\n  styleUrls: ['./sliders.component.scss']\r\n})\r\nexport class SlidersComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'rank', 'image', 'name', 'actions'];\r\n  dataSource: MatTableDataSource<Slider>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\nmessages='';\r\n  constructor(public appService: AppService,\r\n    private translate: TranslateService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('com.wack.model.website.Slider', parameters)\r\n      .subscribe((data: Slider[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Slider complete'));\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \".ql-snow {\\n  height: 500px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xcYWNjb3VudFxcc3RhdHVzVGV4dFxcc3RhdHVzVGV4dC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L3N0YXR1c1RleHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyx3QkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWNjb3VudC9zdGF0dXNUZXh0L3N0YXR1c1RleHQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucWwtc25vdyB7XHJcblx0aGVpZ2h0OiA1MDBweCAhaW1wb3J0YW50O1xyXG59IiwiLnFsLXNub3cge1xuICBoZWlnaHQ6IDUwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { StatusText } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-statusText-component',\r\n  templateUrl: './statusText.component.html',\r\n  styleUrls: ['./statusText.component.scss']\r\n})\r\nexport class StatusTextComponent extends BaseComponent implements OnInit {\r\n\r\n  statusText: StatusText = new StatusText();\r\n  messages: any;\r\n  error: string;\r\n  flag : any;\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flag = this.appService.getFlag();\r\n    this.statusText.language = this.flag.code;\r\n    this.getStatusText(this.flag);\r\n  }\r\n\r\n getStatusText(flag: any) {\r\n   this.messages = '';\r\n   this.statusText = new StatusText();\r\n   this.flag = flag ? flag : this.appService.getFlag();\r\n   this.statusText.language = this.flag.code;\r\n\r\n   console.log('Flag is set ...');\r\n\r\n   const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('StatusText', parameters).subscribe((data: StatusText[]) => {\r\n      data.forEach((statusText) => {\r\n        if ( this.flag.code === statusText.language) {\r\n          this.statusText = statusText;\r\n        }\r\n      });\r\n\r\n    });\r\n }\r\n\r\n\r\n save() {\r\n    this.statusText.modifiedBy = +this.tokenStorage.getUserId();\r\n      this.appService.save(this.statusText, 'StatusText')\r\n        .subscribe(result => {\r\n          this.processResult(result, this.statusText, undefined);\r\n        });\r\n    }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdHJhbnNhY3Rpb24tbGlzdC90cmFuc2FjdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { News, Transaction } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TransactionComponent } from '../transaction/transaction.component';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss']\r\n})\r\nexport class TransactionListComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['id', 'tranDate', 'memberName', 'projectTitle', 'amount', 'actions' ];\r\n  dataSource: MatTableDataSource<Transaction>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  @ViewChild(TransactionComponent, { static: false }) transactionView: TransactionComponent;\r\n\r\n  selected = new FormControl(0);\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('Transaction', parameters).subscribe((data: Transaction[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(transaction : Transaction) {\r\n    const index: number = this.dataSource.data.indexOf(transaction);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(transaction.id, 'Transaction')\r\n      .subscribe(data => {\r\n          this.processDeleteResult(data, this.messages);\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<Transaction>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.transactionView.getTransaction(id);\r\n    this.selected.setValue(1);\r\n  }\r\n\r\n  saveEventListener(trans: Transaction) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, trans);\r\n  }\r\n}","import { Component, OnInit, EventEmitter, Output, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Transaction, User, Project } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'app-onlinepayment-component',\r\n  templateUrl: './online-payment.component.html',\r\n  styleUrls: ['./transaction.component.scss']\r\n})\r\nexport class OnlinePaymentComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('stepper') private myStepper: MatStepper;\r\n\r\n  transaction: Transaction = new Transaction();\r\n  result = {};\r\n  @Output() saveEvent = new EventEmitter<any>();\r\n\r\n  currentProjectOption: string;\r\n  projectOptions: Project[];\r\n  filteredProjectOptions: Project[];\r\n\r\n  stripe;\r\n  errors: string;\r\n  data: any;\r\n\r\n  action = 'processing';\r\n\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getActiveProjects();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      setTimeout(() => {\r\n         this.setStripeSecret();\r\n      }, 500);\r\n\r\n      this.transaction.currencyCode = 'USD';\r\n   }\r\n\r\n  setStripeSecret() {\r\n     this.appService.getObject('/service/Payment/stripe-key').toPromise()\r\n      .then(result => {\r\n        this.stripe = Stripe(result.publishableKey);\r\n      });\r\n  }\r\n\r\n  createPaymentIntent() {\r\n\r\n     this.appService.saveWithUrl('/service/Payment/clientSecret', this.transaction).toPromise()\r\n      .then(result => {\r\n        return result;\r\n      })\r\n      .then(data => {\r\n          return this.setupElements(data);\r\n      })\r\n      .then(data => {\r\n        this.data = data;\r\n        document.querySelector('button').disabled = false;\r\n        document.getElementById('submit').removeAttribute('disabled');\r\n\r\n        const form = document.getElementById('payment-form');\r\n        form.addEventListener('submit', this.handleCardSave.bind(this));\r\n      });\r\n  }\r\n\r\n  setupElements(data) {\r\n      // this.stripe = Stripe(data.publishableKey);\r\n\r\n      /* ------- Set up Stripe Elements to use in checkout form ------- */\r\n      const elements = this.stripe.elements();\r\n      const style = {\r\n         base: {\r\n            color: '#32325d',\r\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n            fontSmoothing: 'antialiased',\r\n            fontSize: '16px',\r\n            '::placeholder': {\r\n               color: '#aab7c4'\r\n            }\r\n         },\r\n         invalid: {\r\n            color: '#fa755a',\r\n            iconColor: '#fa755a'\r\n         }\r\n      };\r\n\r\n      const card = elements.create('card', { style });\r\n      const element = document.getElementById('card-element')\r\n      card.mount('#card-element');\r\n\r\n      return {\r\n         stripe: this.stripe,\r\n         card,\r\n         clientSecret: data.clientSecret\r\n      };\r\n   }\r\n\r\n   handleCardSave(event) {\r\n      event.preventDefault();\r\n      document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n      this.submitPayment(this.data.stripe, this.data.card, this.data.clientSecret, this.translate,\r\n        this.result, this.myStepper, this.save, this.appService, this.transaction, this.tokenStorage.getUserId(), this.processResult);\r\n   }\r\n\r\n  submitPayment(stripe, card, clientSecret, translate, myResult, myStepper, saveFct, appService, transaction, userId, processResult) {\r\n    this.errors = '';\r\n    stripe\r\n         .confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card\r\n      }\r\n    })\r\n    .then(function(result) {\r\n      if (result.error) {\r\n        // Show error to your customer\r\n        //showError(result.error.message);\r\n        translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n          myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n        });\r\n        document.getElementById('submit').setAttribute('disabled', 'disabled');\r\n      } else {\r\n        // The payment succeeded!\r\n        //orderComplete(result.paymentIntent.id);\r\n        translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n          myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n        });\r\n        saveFct(appService, transaction, userId, translate, myResult);\r\n      }\r\n      myStepper.selected.completed = true;\r\n      myStepper.next();\r\n    });\r\n  }\r\n\r\n  public getActiveProjects() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.projectOptions = data;\r\n      this.filteredProjectOptions = data;\r\n    });\r\n  }\r\n\r\n  save(appService, transaction, userId, translate, myResult) {\r\n\r\n    myResult.errors = undefined;\r\n    myResult.messages = undefined;\r\n\r\n    transaction.modifiedBy = +userId;\r\n    transaction.user = new User();\r\n    transaction.user.id = +userId;\r\n    transaction.io = 0;\r\n\r\n    appService.save(transaction, 'Transaction')\r\n      .subscribe(result => {\r\n        if (result.errors === null || result.errors.length === 0) {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n          });\r\n        } else {\r\n          translate.get(['MESSAGE.CARD_PAYMENT_FAILED']).subscribe(res => {\r\n            myResult.messages = res['MESSAGE.CARD_PAYMENT_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  filterProjectOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();\r\n        this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredProjectOptions = this.projectOptions;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.transaction = new Transaction();\r\n  }\r\n\r\n  goBack(){\r\n    this.myStepper.previous();\r\n  }\r\n\r\n  goForward(){\r\n    this.myStepper.selected.completed = true;\r\n    this.myStepper.next();\r\n\r\n    if (this.myStepper.selectedIndex === 2) {\r\n      this.createPaymentIntent();\r\n    }\r\n  }\r\n\r\n  saveTransaction() {\r\n\r\n    this.myStepper.next();\r\n    this.transaction.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.transaction.user = new User();\r\n    this.transaction.user.id = +this.tokenStorage.getUserId();\r\n\r\n\r\n      this.appService.saveWithUrl('/service/Payment/saveTransaction', this.transaction)\r\n        .subscribe(data => {\r\n          if (data.errors === null || data.errors.length === 0) {\r\n            this.translate.get(['MESSAGE.CARD_PAYMENT_SUCCEDED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.CARD_PAYMENT_SUCCEDED'];\r\n            });\r\n          } else {\r\n            this.translate.get(['MESSAGE.CARD_PAYMENT_FAILED', 'MESSAGE.' + data.errors[0]]).subscribe(res => {\r\n            this.errors = res['MESSAGE.' + data.errors[0]];\r\n            console.log('Erreur ' + data.errors[0]);\r\n          });\r\n          }\r\n\r\n          this.action = 'complete';\r\n          this.myStepper.selected.completed = true;\r\n          this.myStepper.next();\r\n        });\r\n  }\r\n\r\n}","export default \".mat-radio-button ~ .mat-radio-button {\\n  margin-left: 42px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC90cmFuc2FjdGlvbi9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHRyYW5zYWN0aW9uXFx0cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWNjb3VudC90cmFuc2FjdGlvbi90cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY2NvdW50L3RyYW5zYWN0aW9uL3RyYW5zYWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yYWRpby1idXR0b24gfiAubWF0LXJhZGlvLWJ1dHRvbiB7ICBcclxuICBtYXJnaW4tbGVmdDogNDJweDsgIFxyXG59ICAiLCIubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDQycHg7XG59Il19 */\";","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Transaction, User, Project } from 'src/app/app.models';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-transaction-component',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.scss']\r\n})\r\nexport class TransactionComponent extends BaseComponent implements OnInit {\r\n\r\n  public flag: any;\r\n  transaction: Transaction = new Transaction();\r\n  messages: any;\r\n  error: string;\r\n  @Output() saveEvent = new EventEmitter<any>();\r\n\r\n  formData: FormData;\r\n  files: any[];\r\n  picture: any;\r\n\r\n  currentUserOption: string;\r\n  userOptions: User[];\r\n  filteredUserOptions: User[];\r\n\r\n  currentProjectOption: string;\r\n  projectOptions: Project[];\r\n  filteredProjectOptions: Project[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n\r\n    super(translate, tokenStorage);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getActiveUsers();\r\n    this.getActiveProjects();\r\n  }\r\n\r\n  public getActiveUsers() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.userOptions = data;\r\n      this.filteredUserOptions = data;\r\n    });\r\n  }\r\n\r\n  public getActiveProjects() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('Project', parameters).subscribe((data: Project[]) => {\r\n      this.projectOptions = data;\r\n      this.filteredProjectOptions = data;\r\n    });\r\n  }\r\n\r\n  getTransaction(transactionId: number) {\r\n\r\n    if (transactionId) {\r\n      this.appService.getOneWithChildsAndFiles(transactionId, 'Transaction')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.transaction = result;\r\n            console.log(this.transaction);\r\n            this.currentUserOption = this.transaction.user.name;\r\n            this.currentProjectOption = this.transaction.project.title;\r\n\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n              this.messages = res['MESSAGE.READ_FAILED'];\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.transaction = new Transaction();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.transaction.modifiedBy = +this.tokenStorage.getUserId();\r\n\r\n    this.appService.save(this.transaction, 'Transaction')\r\n      .subscribe(result => {\r\n        this.processResult(result, this.transaction, null);\r\n        this.transaction = {...result};\r\n        this.saveEvent.emit(this.transaction);\r\n      });\r\n  }\r\n\r\n\r\n  filterUserOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.name.toLowerCase();\r\n        this.filteredUserOptions = this.userOptions.filter(element => element.name.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredUserOptions = this.userOptions;\r\n    }\r\n  }\r\n\r\n  filterProjectOptions(val) {\r\n    if (val) {\r\n        const filterValue = typeof val === 'string' ? val.toLowerCase() : val.title.toLowerCase();\r\n        this.filteredProjectOptions = this.projectOptions.filter(element => element.title.toLowerCase().startsWith(filterValue));\r\n    } else {\r\n        this.filteredProjectOptions = this.projectOptions;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.transaction = new Transaction();\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, Employee } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'name', 'email', 'phone', 'actions' ];\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  messages: any;\r\n\r\n  constructor(public appService:AppService,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteriaWithFiles('User', parameters).subscribe((data: User[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  public remove(user : User) {\r\n    const index: number = this.dataSource.data.indexOf(user);\r\n\r\n    if (index !== -1) {\r\n      this.appService.delete(user.id, 'User')\r\n      .subscribe(data => {\r\n          \r\n          this.processDeleteResult(data, this.messages);\r\n\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource = new MatTableDataSource<User>(this.dataSource.data);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User, Employee, PositionDesc } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-component',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent extends BaseComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'published', 'views', 'actions'];\r\n  dataSource: MatTableDataSource<User>;\r\n  public toolbarTypes = [1, 2];\r\n  public headerTypes = ['default', 'image', 'carousel'];\r\n  public flags = [\r\n    { name: 'Francais', image: 'assets/images/flags/fr.svg', code: 'fr' },\r\n    { name: 'English', image: 'assets/images/flags/gb.svg', code: 'en' }\r\n  ];\r\n\r\n  public userGroups = [];\r\n  public flag: any;\r\n  user: User = new User();\r\n  messages: any;\r\n  error: string;\r\n  public settings: Settings;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  formData: FormData;\r\n  picture: any[] =[];\r\n  activePositions: PositionDesc[];\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    public translate: TranslateService,\r\n    public tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n    super(translate, tokenStorage);\r\n    if (this.translate.currentLang === 'fr') {\r\n      this.userGroups = [\r\n        { id: 1, name: 'Admin', type: 'UserGroup'},\r\n        { id: 10, name: 'Editeur', type: 'UserGroup' },\r\n        { id: 20, name: 'Financier', type: 'UserGroup' },\r\n        { id: 30, name: 'Membre', type: 'UserGroup' }\r\n      ];\r\n    } else {\r\n      this.userGroups = [\r\n        { id: 1, name: 'Admin', type: 'UserGroup' },\r\n        { id: 10, name: 'Editor', type: 'UserGroup' },\r\n        { id: 20, name: 'Finance', type: 'UserGroup' },\r\n        { id: 30, name: 'Member', type: 'UserGroup' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  public deleteFile(user: User, fileName: string) {\r\n    const vo = {id: user.id, name: fileName};\r\n    this.appService.deleteFile('com.wack.model.User', vo)\r\n      .subscribe(data => {\r\n      });\r\n  }\r\n  ngOnInit() {\r\n    let lang = navigator.language;\r\n    if (lang) {\r\n      lang = lang.substring(0, 2);\r\n    }\r\n    if (Cookie.get('lang')) {\r\n      lang = Cookie.get('lang');\r\n      console.log('Using cookie lang=' + Cookie.get('lang'));\r\n    } else if (lang) {\r\n      console.log('Using browser lang=' + lang);\r\n      // this.translate.use(lang);\r\n    } else {\r\n      lang = 'fr';\r\n      console.log('Using default lang=fr');\r\n    }\r\n    if (lang === 'fr') {\r\n      this.flag = this.flags[0];\r\n    } else {\r\n      this.flag = this.flags[1];\r\n    }\r\n\r\n    this.getActivePositions();\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.id !== undefined) {\r\n        this.getUser(params.id);\r\n      } else {\r\n        this.getUser(+this.tokenStorage.getUserId());\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getUser(userId: number) {\r\n    if (userId === 0) {\r\n      this.user = new User();\r\n    }\r\n\r\n    if (userId > 0)\r\n      this.appService.getOneWithChildsAndFiles(userId, 'User')\r\n        .subscribe(result => {\r\n          if (result.id > 0) {\r\n            this.user = result;\r\n            this.user.confirmPassword = this.user.password;\r\n            const images: any[] = [];\r\n            this.user.fileNames.forEach(item=>{\r\n              const image = {\r\n                link: 'assets/images/users/' + userId + '/' + item,\r\n              preview: 'assets/images/users/' + userId + '/' + item\r\n              }\r\n              images.push(image);\r\n            })\r\n\r\n            this.picture = images;\r\n\r\n            if (this.user.employees && this.user.employees.length > 0) {\r\n              this.user.shortResume = this.user.employees[0].shortResume;\r\n              this.user.resume = this.user.employees[0].resume;\r\n            }\r\n\r\n          } else {\r\n            this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n\r\n              this.error = res['MESSAGE.READ_FAILED'];\r\n\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  public getActivePositions() {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |language|' + this.appService.getFlag().code + '|String');\r\n    parameters.push('e.position.status = |status|1|Integer');\r\n    this.appService.getAllByCriteriaWithFiles('PositionDesc', parameters).subscribe((data: PositionDesc[]) => {\r\n      this.activePositions = data;\r\n    });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.messages = '';\r\n    this.user.modifiedBy = +this.tokenStorage.getUserId();\r\n    this.formData = new FormData();\r\n\r\n    this.user.status = (this.user.status == null || this.user.status.toString() === 'false') ? 0 : 1;\r\n\r\n    if  (this.picture && this.picture.length>0 && this.picture[0].file) {\r\n      this.formData.append('file[]', this.picture[0].file, 'picture.' + this.picture[0].file.name);\r\n    }\r\n\r\n    if (this.user.userGroup.id !== 4 && this.user.employees) {\r\n      if (this.user.employees.length === 0) {\r\n        // Adding an employee model to user\r\n        const employee = new Employee();\r\n        employee.resume = this.user.resume;\r\n        employee.shortResume = this.user.shortResume;\r\n        this.user.employees.push(employee);\r\n      } else {\r\n        this.user.employees[0].shortResume = this.user.shortResume;\r\n        this.user.employees[0].resume = this.user.resume;\r\n      }\r\n    }\r\n\r\n    this.appService.saveWithFile(this.user, 'User', this.formData, 'saveWithFile')\r\n      .subscribe(data => {\r\n        this.processResult(data, this.user, null)\r\n        this.user = data;\r\n\r\n        this.user.confirmPassword = this.user.password;\r\n        if (this.user.employees && this.user.employees.length > 0) {\r\n          this.user.shortResume = this.user.employees[0].shortResume;\r\n          this.user.resume = this.user.employees[0].resume;\r\n        }\r\n\r\n      });\r\n\r\n  }\r\n\r\n  clear() {\r\n\r\n  }\r\n\r\n}","export default \".mat-row:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-row:nth-child(odd) {\\n  background-color: #e1eaf7;\\n}\\n\\n.mat-row:hover {\\n  background-color: #ff5722;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC92aWRlby9DOlxcRGV2ZWxvcG1lbnRcXGFyYmFtby9zcmNcXGFwcFxccGFnZXNcXGFjY291bnRcXHZpZGVvXFxWaWRlb3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdmlkZW8vVmlkZW9zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvdmlkZW8vVmlkZW9zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlYWY3O1xyXG59XHJcblxyXG4ubWF0LXJvdzpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzIyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5tYXQtcm93Om50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJvdzpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMWVhZjc7XG59XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNTcyMjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MeetingReport, MeetingReportDesc, User, Publicity, Video } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { BaseComponent } from 'src/app/shared/baseComponent';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-videos-component',\r\n  templateUrl: './Videos.component.html',\r\n  styleUrls: ['./Videos.component.scss']\r\n})\r\nexport class VideosComponent extends BaseComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['description', 'videoDate', 'rank', 'status', 'vote', 'voteCount', 'actions'];\r\n  dataSource: MatTableDataSource<Publicity>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  messages = '';\r\n  video: Video = new Video();\r\n  selected = new FormControl(0);\r\n\r\n  constructor(public appService: AppService,\r\n    public appSettings: AppSettings,\r\n    protected translate: TranslateService,\r\n    protected tokenStorage: TokenStorage,\r\n    private activatedRoute: ActivatedRoute) {\r\n      super(translate, tokenStorage);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  getAll() {\r\n    const parameters: string[] = [];\r\n    this.appService.getAllByCriteria('Video', parameters)\r\n      .subscribe((data: Publicity[]) => {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n        error => console.log(error),\r\n        () => console.log('Get all Video complete'));\r\n  }\r\n\r\n  clearMessages($event) {\r\n    this.messages = '';\r\n  }\r\n\r\n  setVideo($event) {\r\n    this.video = $event;\r\n  }\r\n\r\n  clear() {\r\n    this.video = new Video();\r\n  }\r\n\r\n  getVote(videoId: number) {\r\n    this.appService.getOneWithChildsAndFiles(videoId, 'Video')\r\n      .subscribe(result => {\r\n        if (result.id > 0) {\r\n          this.video = result;\r\n          this.selected.setValue(0);\r\n        } else {\r\n          this.translate.get(['COMMON.READ', 'MESSAGE.READ_FAILED']).subscribe(res => {\r\n            this.messages = res['MESSAGE.READ_FAILED'];\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  save() {\r\n    this.video.modifiedBy = +this.tokenStorage.getUserId();\r\n\r\n    this.appService.save(this.video, 'Video')\r\n      .subscribe(result => {\r\n        this.processResult(result, this.video, null);\r\n        this.video = result;\r\n        this.onSave(this.video);\r\n      });\r\n  }\r\n\r\n\r\n  public remove(video: Video) {\r\n    this.messages = '';\r\n    this.appService.delete(video.id, 'Video')\r\n      .subscribe(resp => {\r\n        this.processDeleteResult(resp, this.messages);\r\n      });\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  onSave($event) {\r\n    this.updateDatasourceData(this.dataSource, this.paginator, this.sort, $event);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}