{"version":3,"sources":["webpack:///src/app/pages/polls/poll-question-details/poll-question-details.component.html","webpack:///src/app/pages/polls/poll-question-details/poll-question-details.component.scss","webpack:///src/app/pages/polls/poll-question-details/poll-question-details.component.ts","webpack:///src/app/pages/polls/poll-question-details/poll-question-details.module.ts"],"names":["PollQuestionDetailsComponent","appSettings","appService","translate","mediaObserver","activatedRoute","tokenStorage","sidenavOpen","psConfig","wheelPropagation","operation","viewType","viewCol","count","lang","pagination","settings","watcher","media$","subscribe","change","mqAlias","params","Number","id","pollQuestionId","getPollChoiceDescs","unsubscribe","parameters","push","getAllByCriteriaWithFiles","data","pollChoiceDescs","console","log","length","message","getVotes","pollChoice","voted","paginator","pageIndex","total","totalPages","filterData","searchFields","sort","page","perPage","field","removedSearchField","resetPagination","obj","e","window","scrollTo","pollChoiceId","vote","user","getUserId","saveWithUrl","error","selectedVote","status","save","result","getAllByCriteria","myVotes","pc","v","selector","template","routes","path","component","pathMatch","PollQuestionDetailsModule","declarations","exports","imports","forChild"],"mappings":"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","file":"pages-polls-poll-question-details-poll-question-details-module-es5.js","sourcesContent":["export default \"<app-header-image-small [backgroundImage]=\\\"'assets/images/others/polls.jpg'\\\" [bgImageAnimate]=\\\"false\\\"\\r\\n    [contentOffsetToTop]=\\\"false\\\" desc=\\\"{{ 'COMMON.MAKE_YOUR_CHOICE' | translate }}\\\" [contentMinHeight]=\\\"200\\\">\\r\\n</app-header-image-small>\\r\\n\\r\\n<div class=\\\"px-3\\\">\\r\\n\\r\\n    <div class=\\\"theme-container\\\">\\r\\n        <mat-sidenav-container class=\\\"all-properties mt-3\\\">\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                        <mat-chip-list [ngClass]=\\\"(settings.rtl) ? 'ml-2' : 'mr-2'\\\">\\r\\n                            <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                                {{ pagination?.total }} {{'COMMON.CHOICES'|translate}}\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                        <app-blogs-search-results-filters [searchFields]=\\\"searchFields\\\"\\r\\n                            (onRemoveSearchField)=\\\"removeSearchField($event)\\\">\\r\\n                        </app-blogs-search-results-filters>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                        \\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submitVote()\\\" type=\\\"button\\\"\\r\\n                            *ngIf=\\\"selectedVote?.status < 5 && operation === 'scrutin'\\\" matTooltip=\\\"{{'COMMON.SUBMIT' | translate}}\\\"\\r\\n                            class=\\\"remove\\\">\\r\\n                            <span class=\\\"mx-1 uppercase\\\">{{'COMMON.SUBMIT' | translate}}</span>\\r\\n                            <mat-icon>save</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row wrap\\\" class=\\\"properties-wrapper mt-0\\\">\\r\\n                    <div *ngFor=\\\"let pollChoiceDesc of pollChoiceDescs\\\" [fxFlex]=\\\"(viewType=='grid') ? viewCol : 100\\\"\\r\\n                        class=\\\"item\\\">\\r\\n                        <mat-card class=\\\"property-item p-0\\\" fxLayout=\\\"row wrap\\\" style=\\\"display: block;\\\">\\r\\n\\r\\n                            <div fxFlex=\\\"100\\\" [fxFlex.gt-sm]=\\\"(viewType=='list') ? 60 : 100\\\"\\r\\n                                [fxFlex.sm]=\\\"(viewType=='list') ? 50 : 100\\\" class=\\\"p-3\\\">\\r\\n\\r\\n                                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" class=\\\"h-100\\\">\\r\\n                                    <mat-card-content class=\\\"mb-0\\\">\\r\\n                                        <div fxLayout=\\\"row wrap\\\">\\r\\n                                            <div fxFlex.xs=\\\"75\\\" fxFlex.sm=\\\"75\\\" fxFlex.md=\\\"75\\\" fxFlex.lg=\\\"75\\\"\\r\\n                                                fxFlex.xl=\\\"75\\\" class=\\\"p-3\\\">\\r\\n\\r\\n                                                <a color=\\\"accent\\\" style=\\\"width: 100%; text-decoration: none;\\\"\\r\\n                                                    [routerLink]=\\\"['/polls', pollChoiceDesc.pollChoice.id]\\\">\\r\\n                                                    <h4 class=\\\"title\\\">\\r\\n                                                        <span>N<sup>o</sup>:<span\\r\\n                                                                class=\\\"fw-500 mx-2\\\">{{pollChoiceDesc.pollChoice?.rank |number:'3.0'}}</span></span>\\r\\n                                                        : {{pollChoiceDesc.pollChoice?.user.firstName}}\\r\\n                                                        {{pollChoiceDesc.pollChoice?.user.lastName}}</h4>\\r\\n                                                </a>\\r\\n                                            </div>\\r\\n                                            <div fxFlex.xs=\\\"25\\\" fxFlex.sm=\\\"25\\\" fxFlex.md=\\\"25\\\" fxFlex.lg=\\\"25\\\"\\r\\n                                                fxFlex.xl=\\\"25\\\" class=\\\"p-3\\\">\\r\\n                                                <img src=\\\"assets/images/users/{{pollChoiceDesc.pollChoice?.user.id}}/{{pollChoiceDesc.pollChoice?.user.picture}}\\\"\\r\\n                                                    alt=\\\"\\\" width=\\\"50\\\">\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <hr />\\r\\n                                        <div fxShow=\\\"false\\\" fxShow.gt-sm class=\\\"mt-3\\\">\\r\\n                                            <div [innerHTML]=\\\"pollChoiceDesc.description | safehtml\\\"></div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </mat-card-content>\\r\\n                                    <div class=\\\"sticky-footer-helper\\\" fxFlex=\\\"grow\\\"></div>\\r\\n                                    <mat-card-actions class=\\\"m-0 p-0\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                        <p fxLayout=\\\"row\\\" class=\\\"date mb-0\\\">\\r\\n                                            <span class=\\\"mx-2\\\" *ngIf=\\\"operation === 'results'\\\"\\r\\n                                                style=\\\"color:blue;font-size:30px;font-weight: bold;\\\">{{pollChoiceDesc.pollChoice.voteCounts}}\\r\\n                                                {{'COMMON.VOTE' | translate}}s</span>\\r\\n\\r\\n                                        </p>\\r\\n                                        <div>\\r\\n                                            <button mat-icon-button color=\\\"green\\\" type=\\\"button\\\" [disabled]=\\\"true\\\"\\r\\n                                                *ngIf=\\\"pollChoiceDesc.pollChoice.voted\\\"\\r\\n                                                matTooltip=\\\"{{'COMMON.VOTED' | translate}}\\\" class=\\\"remove\\\">\\r\\n                                                <mat-icon color=\\\"green\\\" class=\\\"green-icon mat-icon-xlg\\\">check_box\\r\\n                                                </mat-icon>\\r\\n                                            </button>\\r\\n                                            <button mat-icon-button color=\\\"red\\\" type=\\\"button\\\" [disabled]=\\\"true\\\" *ngIf=\\\"(!pollChoiceDesc.pollChoice.voted && (selectedVote?.status === 5\\r\\n                                                || pollChoiceDesc.pollChoice.pollQuestion.poll.status >= 2))\\\"\\r\\n                                                matTooltip=\\\"{{'COMMON.NOT_VOTED' | translate}}\\\" class=\\\"remove\\\">\\r\\n                                                <mat-icon color=\\\"red\\\" class=\\\"red-icon mat-icon-xlg\\\">cancel\\r\\n                                                </mat-icon>\\r\\n                                            </button>\\r\\n                                        \\r\\n                                            <button mat-icon-button color=\\\"primary\\\" *ngIf=\\\"pollChoiceDesc.pollChoice.pollQuestion.poll.status < 2 && \\r\\n                                            (!pollChoiceDesc.pollChoice.voted && (!selectedVote || (selectedVote && selectedVote?.status < 5)))\\\"\\r\\n                                                (click)=\\\"performVote(pollChoiceDesc.pollChoice.id)\\\" type=\\\"button\\\"\\r\\n                                                matTooltip=\\\"{{'COMMON.VOTE' | translate}}\\\" class=\\\"remove\\\">\\r\\n                                                <mat-icon color=\\\"primary\\\" class=\\\"mat-icon-xlg\\\">thumb_up_alt</mat-icon>\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </mat-card-actions>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </mat-card>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"pollChoiceDescs?.length == 0\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                        [style.min-height.px]=\\\"200\\\">\\r\\n                        <mat-spinner *ngIf=\\\"!message\\\"></mat-spinner>\\r\\n                        <mat-chip-list *ngIf=\\\"message\\\">\\r\\n                            <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                                {{message}}\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n    </div>\\r\\n</div>\\r\\n<app-get-in-touch></app-get-in-touch>\";","export default \".green-icon {\\n  color: green;\\n}\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.green-icon svg {\\n  fill: green;\\n}\\n\\n.red-icon {\\n  color: red;\\n}\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.red-icon svg {\\n  fill: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcG9sbHMvcG9sbC1xdWVzdGlvbi1kZXRhaWxzL0M6XFxEZXZlbG9wbWVudFxcYXJiYW1vL3NyY1xcYXBwXFxwYWdlc1xccG9sbHNcXHBvbGwtcXVlc3Rpb24tZGV0YWlsc1xccG9sbC1xdWVzdGlvbi1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9wb2xscy9wb2xsLXF1ZXN0aW9uLWRldGFpbHMvcG9sbC1xdWVzdGlvbi1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBRENBLDRGQUFBOztBQUNBO0VBQ0ksV0FBQTtBQ0VKOztBRENBO0VBQ0ksVUFBQTtBQ0VKOztBREFBLDRGQUFBOztBQUNBO0VBQ0ksU0FBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcG9sbHMvcG9sbC1xdWVzdGlvbi1kZXRhaWxzL3BvbGwtcXVlc3Rpb24tZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmVlbi1pY29uIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cclxuLmdyZWVuLWljb24gc3ZnIHtcclxuICAgIGZpbGw6IGdyZWVuO1xyXG59XHJcblxyXG4ucmVkLWljb24ge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cclxuLnJlZC1pY29uIHN2ZyB7XHJcbiAgICBmaWxsOiByZWQ7XHJcbn0iLCIuZ3JlZW4taWNvbiB7XG4gIGNvbG9yOiBncmVlbjtcbn1cblxuLyogTm90ZTogSWYgeW91J3JlIHVzaW5nIGFuIFNWRyBpY29uLCB5b3Ugc2hvdWxkIG1ha2UgdGhlIGNsYXNzIHRhcmdldCB0aGUgYDxzdmc+YCBlbGVtZW50ICovXG4uZ3JlZW4taWNvbiBzdmcge1xuICBmaWxsOiBncmVlbjtcbn1cblxuLnJlZC1pY29uIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLyogTm90ZTogSWYgeW91J3JlIHVzaW5nIGFuIFNWRyBpY29uLCB5b3Ugc2hvdWxkIG1ha2UgdGhlIGNsYXNzIHRhcmdldCB0aGUgYDxzdmc+YCBlbGVtZW50ICovXG4ucmVkLWljb24gc3ZnIHtcbiAgZmlsbDogcmVkO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PollQuestionDesc, Pagination, PollChoiceDesc, Vote, PollChoice, User } from 'src/app/app.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Settings, AppSettings } from 'src/app/app.settings';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\n\r\n@Component({\r\n  selector: 'app-poll-question-details',\r\n  templateUrl: './poll-question-details.component.html',\r\n  styleUrls: ['./poll-question-details.component.scss']\r\n})\r\nexport class PollQuestionDetailsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation: true\r\n  };\r\n  pollQuestionDesc: PollQuestionDesc;\r\n  pollChoiceDescs: PollChoiceDesc[];\r\n  myVotes: Vote[];\r\n  pollQuestionId: number;\r\n  operation = 'scrutin';\r\n  selectedVote: Vote;\r\n\r\n  public viewType = 'grid';\r\n  public viewCol = 33.3;\r\n  public count = 12;\r\n  public sort: string;\r\n  public searchFields: any;\r\n  public removedSearchField: string;\r\n  public pagination: any;\r\n  public message: string;\r\n  public watcher: Subscription;\r\n  lang = 'fr';\r\n\r\n  public settings: Settings\r\n\r\n  constructor(public appSettings: AppSettings,\r\n    public appService: AppService,\r\n    protected translate: TranslateService,\r\n    public mediaObserver: MediaObserver,\r\n    private activatedRoute: ActivatedRoute,\r\n    protected tokenStorage: TokenStorage) {\r\n\r\n    this.pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n    this.settings = appService.appSettings.settings;\r\n    this.watcher = mediaObserver.media$.subscribe((change: MediaChange) => {\r\n      if (change.mqAlias === 'xs') {\r\n        this.sidenavOpen = false;\r\n        this.viewCol = 100;\r\n      }\r\n      else if (change.mqAlias === 'sm') {\r\n        this.sidenavOpen = false;\r\n        this.viewCol = 50;\r\n      }\r\n      else if (change.mqAlias === 'md') {\r\n        this.viewCol = 50;\r\n        this.sidenavOpen = true;\r\n      }\r\n      else {\r\n        this.viewCol = 33.3;\r\n        this.sidenavOpen = true;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      if (params.operation) {\r\n        this.operation = params.operation;\r\n      }\r\n\r\n      if (Number(params.id) > 0) {\r\n        this.pollQuestionId = params.id;\r\n        this.getPollChoiceDescs(params.id);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.watcher.unsubscribe();\r\n  }\r\n\r\n  getPollChoiceDescs(pollQuestionId: number) {\r\n    const parameters: string[] = [];\r\n    parameters.push('e.language = |language|' + this.lang + '|String');\r\n    //parameters.push('e.pollQuestion.status = |stb|1|Integer');\r\n    parameters.push('e.pollChoice.pollQuestion.id = |pollQuestionId|' + pollQuestionId + '|Long');\r\n    this.appService.getAllByCriteriaWithFiles('com.wack.poll.PollChoiceDesc', parameters,\r\n      this.operation === 'scrutin' ? ' order by e.pollChoice.pollQuestion.rank asc'\r\n      : ' order by e.pollChoice.voteCounts desc')\r\n      .subscribe((data: PollChoiceDesc[]) => {\r\n        this.pollChoiceDescs = data;\r\n        console.log(this.pollChoiceDescs);\r\n        this.count = this.pollChoiceDescs.length;\r\n        this.pagination = new Pagination(1, this.count, null, 2, this.count, 0);\r\n        this.message = null;\r\n\r\n        if (this.operation === 'scrutin') {\r\n          this.getVotes(pollQuestionId);\r\n        } else if (this.operation === 'results' && this.pollChoiceDescs.length > 0) {\r\n          this.pollChoiceDescs[0].pollChoice.voted = true;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  public resetPagination() {\r\n    if (this.paginator) {\r\n      this.paginator.pageIndex = 0;\r\n    }\r\n    this.pagination = new Pagination(1, this.count, null, null, this.pagination.total, this.pagination.totalPages);\r\n  }\r\n\r\n  public filterData(data) {\r\n    console.log(data);\r\n    return this.appService.filterData(data, this.searchFields, this.sort, this.pagination.page, this.pagination.perPage);\r\n  }\r\n\r\n\r\n\r\n  public removeSearchField(field) {\r\n    this.message = null;\r\n    this.removedSearchField = field;\r\n  }\r\n\r\n  public changeCount(count) {\r\n    this.count = count;\r\n    this.pollChoiceDescs.length = 0;\r\n    this.resetPagination();\r\n  }\r\n  public changeSorting(sort) {\r\n    this.sort = sort;\r\n  }\r\n  public changeViewType(obj) {\r\n    this.viewType = obj.viewType;\r\n    this.viewCol = obj.viewCol;\r\n  }\r\n\r\n  public onPageChange(e) {\r\n    this.pagination.page = e.pageIndex + 1;\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  performVote(pollChoiceId: number) {\r\n    const vote = new Vote();\r\n    vote.pollChoice = new PollChoice();\r\n    vote.pollChoice.id = pollChoiceId;\r\n    vote.user = new User();\r\n    vote.user.id = +this.tokenStorage.getUserId();\r\n\r\n    this.appService.saveWithUrl('/service/poll/vote/', vote)\r\n      .subscribe(() => {\r\n\r\n        this.getPollChoiceDescs(this.pollQuestionId);\r\n\r\n      }, (error) => console.log(error),\r\n        () => console.log('Perform vote complete'));\r\n  }\r\n\r\n  submitVote() {\r\n    this.selectedVote.status = 5;\r\n\r\n    this.appService.save(this.selectedVote, 'Vote')\r\n      .subscribe(result => {\r\n        this.getPollChoiceDescs(this.pollQuestionId);\r\n      });\r\n  }\r\n\r\n  getVotes(pollQuestionId: number) {\r\n\r\n    const parameters: string[] = [];\r\n    parameters.push('e.pollChoice.pollQuestion.id = |pollQuestionId|' + pollQuestionId + '|Long');\r\n    parameters.push('e.user.id = |userId|' + this.tokenStorage.getUserId() + '|Long');\r\n\r\n    this.appService.getAllByCriteria('com.wack.poll.Vote', parameters,\r\n      ' ').subscribe((data: Vote[]) => {\r\n        this.myVotes = data;\r\n\r\n        for (const pc of this.pollChoiceDescs) {\r\n          for (const v of this.myVotes) {\r\n            if (pc.pollChoice.id === v.pollChoice.id) {\r\n              pc.pollChoice.voted = true;\r\n              this.selectedVote = v;\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { MatVideoModule } from 'mat-video';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { PollQuestionDetailsComponent } from './poll-question-details.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: PollQuestionDetailsComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PollQuestionDetailsComponent\r\n  ],\r\n  exports: [\r\n    PollQuestionDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n    AgmCoreModule,\r\n    MatVideoModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class PollQuestionDetailsModule { }\r\n"]}