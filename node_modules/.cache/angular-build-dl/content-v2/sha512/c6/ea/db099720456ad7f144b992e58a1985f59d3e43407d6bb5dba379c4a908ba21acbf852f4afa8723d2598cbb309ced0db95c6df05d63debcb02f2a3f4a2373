{"version":3,"sources":["webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.component.scss","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.module.ts"],"names":["LoginComponent","fb","router","tokenStorage","translate","appService","route","hide","action","params","subscribe","console","log","loginForm","group","email","compose","required","password","minLength","rememberMe","valid","navigate","values","user","userName","controls","value","error","lang","currentLang","authenticate","data","token","saveAuthData","updateToken","getUserId","get","res","e","resetPassword","selector","template","routes","path","component","pathMatch","LoginModule","declarations","imports","forChild"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\r\\n  <div class=\\\"theme-container\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-3\\\">\\r\\n      <mat-card [style.max-width.px]=\\\"500\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"uppercase\\\">{{'COMMON.SIGN_IN' | translate }}</h1>\\r\\n          <a mat-button [routerLink]=\\\"['/register', action]\\\" color=\\\"accent\\\" class=\\\"w-100\\\">{{'COMMON.NEW_REGISTER' | translate }}</a>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">person</mat-icon>\\r\\n            <mat-label>{{'COMMON.E_MAIL' | translate }}</mat-label>\\r\\n           <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n          <mat-error *ngIf=\\\"loginForm.controls.email.errors?.required\\\">\\r\\n          {{'VALIDATION.EMAIL_REQUIRED' | translate }}</mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.controls.email.hasError('invalidEmail')\\\">\\r\\n              {{'VALIDATION.EMAIL_INVALID' | translate }}\\r\\n          </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">lock</mat-icon>\\r\\n            <mat-label>{{'COMMON.PASSWORD' | translate }}</mat-label>\\r\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required\\r\\n              [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">\\r\\n              {{'VALIDATION.PASSWORD_REQUIRED' | translate }}</mat-error>\\r\\n            <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">\\r\\n              {{'VALIDATION.MINIMUM_LENGTH' | translate }} 6</mat-error>\\r\\n            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" type=\\\"button\\\" class=\\\"text-muted\\\">\\r\\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <div class=\\\"text-center mt-2\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" class=\\\"uppercase\\\" type=\\\"submit\\\">\\r\\n              {{'COMMON.SIGN_IN' | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"text-center\\\" *ngIf=\\\"error\\\">\\r\\n          <a mat-button color=\\\"accent\\\" class=\\\"w-100\\\">{{error}}</a>\\r\\n        </div>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-button (click) =\\\"sendPassword()\\\"> \\r\\n            <mat-icon class=\\\"text-muted\\\">vpn_key</mat-icon>\\r\\n            <span class=\\\"mx-1\\\">{{'MESSAGE.SEND_PASSWORD' | translate }}</span>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\";","export default \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vQzpcXERldmVsb3BtZW50XFxhcmJhbW8vc3JjXFxhcHBcXHBhZ2VzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoe1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHBhZGRpbmc6IDdweCAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDsgICAgXHJcbn0iLCIuYXV0aCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6IDdweCAxNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\nimport { TokenStorage } from 'src/app/token.storage';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { User } from 'src/app/app.models';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public hide = true;\r\n  error: '';\r\n  public action = 0;\r\n  constructor(public fb: FormBuilder,\r\n    public router: Router,\r\n    private tokenStorage: TokenStorage,\r\n    public translate: TranslateService,\r\n    public appService: AppService,\r\n    private route: ActivatedRoute) {\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.action = params.action;\r\n      console.log('action =' + this.action);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      rememberMe: false\r\n    });\r\n  }\r\n\r\n  public onLoginFormSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n\r\n  public login(values: any) {\r\n    if (this.loginForm.valid) {\r\n      const user: User = new User();\r\n      user.userName = this.loginForm.controls.email.value;\r\n      user.password = this.loginForm.controls.password.value;\r\n      try {\r\n        this.error = ''\r\n        user.lang = this.translate.currentLang;\r\n        console.log('Current lang=' + this.translate.currentLang);\r\n        this.appService.authenticate(user)\r\n          .subscribe(data => {\r\n            console.log(data);\r\n            if (data.token !== '' && data.token !== null) {\r\n              console.log('login successful');\r\n              this.tokenStorage.saveAuthData(data);\r\n              this.appService.updateToken();\r\n              console.log('action = '+this.action);\r\n              if (this.action == 1) {\r\n                this.router.navigate(['/submit-project/0']);\r\n              } else {\r\n                this.router.navigate(['/account/user/'+this.tokenStorage.getUserId()]);\r\n              }\r\n              // this.router.navigate([this.tokenStorage.getHomePage()]);\r\n            } else {\r\n              console.log('login failed');\r\n              this.translate.get(['MESSAGE.INVALID_USER_PASS', 'COMMON.ERROR']).subscribe(res => {\r\n                this.error = res['MESSAGE.INVALID_USER_PASS'];\r\n              });\r\n            }\r\n          });\r\n      } catch (e) {\r\n        console.log('Exception during login...');\r\n        this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n          this.error = res['MESSAGE.ERROR_OCCURRED'];\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public sendPassword() {\r\n    try {\r\n      const user: User = new User();\r\n      user.userName = this.loginForm.controls.userName.value;\r\n      console.log('Sending password for user: ' + user.userName);\r\n      if (user.userName === null || user.userName === '') {\r\n        this.translate.get(['VALIDATION.USER_NAME_REQUIRED', 'COMMON.ERROR']).subscribe(res => {\r\n          this.error = res['VALIDATION.USER_NAME_REQUIRED'];\r\n        });\r\n      } else {\r\n        this.appService.resetPassword(user)\r\n          .subscribe(() => {\r\n            this.translate.get(['MESSAGE.PASSWORD_SENT', 'COMMON.SUCCESS']).subscribe(res => {\r\n              this.error = res['MESSAGE.PASSWORD_SENT'];\r\n            })\r\n          });\r\n      }\r\n    } catch (e) {\r\n      this.translate.get(['MESSAGE.ERROR_OCCURRED', 'COMMON.ERROR']).subscribe(res => {\r\n        this.error = res['MESSAGE.ERROR_OCCURRED'];\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { TranslateModule} from '@ngx-translate/core';\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"]}