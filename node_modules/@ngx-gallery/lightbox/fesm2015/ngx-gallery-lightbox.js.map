{"version":3,"file":"ngx-gallery-lightbox.js.map","sources":["ng://@ngx-gallery/lightbox/lib/lightbox.model.ts","ng://@ngx-gallery/lightbox/lib/lightbox.animation.ts","ng://@ngx-gallery/lightbox/lib/lightbox.component.ts","ng://@ngx-gallery/lightbox/lib/lightbox.default.ts","ng://@ngx-gallery/lightbox/lib/lightbox.service.ts","ng://@ngx-gallery/lightbox/lib/lightbox.directive.ts","ng://@ngx-gallery/lightbox/lib/lightbox.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('lightboxConfig');\n\nexport interface LightboxConfig {\n  backdropClass?: string;\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  keyboardShortcuts?: boolean;\n  closeIcon?: string;\n  role?: string;\n  ariaLabelledBy?: string;\n  ariaLabel?: string;\n  ariaDescribedBy?: string;\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nexport const lightboxAnimation = trigger('lightbox', [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n  state('enter', style({transform: 'none'})),\n  transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n    style({transform: 'none', opacity: 1}))),\n  transition('* => void, * => exit',\n    animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n]);\n\n","import { Component, Optional, ChangeDetectionStrategy, ElementRef, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationEvent } from '@angular/animations';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { lightboxAnimation } from './lightbox.animation';\n\n@Component({\n  selector: 'lightbox',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [lightboxAnimation],\n  styleUrls: ['./lightbox.component.scss'],\n  template: `\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\n    </gallery>\n  `,\n  host: {\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '\"lightbox-\" + id',\n    '[attr.role]': 'role',\n    '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n    '[attr.aria-label]': 'ariaLabel',\n    '[attr.aria-describedby]': 'ariaDescribedBy || null',\n    '[@lightbox]': 'state',\n    '(@lightbox.done)': 'onAnimationDone($event)',\n  }\n})\nexport class LightboxComponent {\n\n  /** Gallery ref id */\n  id: string;\n\n  /** Overlay ref to close the lightbox */\n  overlayRef: OverlayRef;\n\n  /** Close button svg data */\n  closeIcon: string;\n\n  /** State of the lightbox animation. */\n  state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** The ARIA role of the lightbox element. */\n  role: string;\n\n  /** Aria label to assign to the lightbox element */\n  ariaLabel: string;\n\n  /** ID of the element that should be considered as the lightbox's label. */\n  ariaLabelledBy: string;\n\n  /** ID of the element that describes the lightbox. */\n  ariaDescribedBy: string;\n\n  /** The class that traps and manages focus within the lightbox. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement;\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _focusTrapFactory: FocusTrapFactory,\n              private _elementRef: ElementRef,\n              public sanitizer: DomSanitizer) {\n    this._savePreviouslyFocusedElement();\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else {\n      this.overlayRef.dispose();\n      this._restoreFocus();\n    }\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Restores focus to the element that was focused before the lightbox opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n}\n","import { LightboxConfig } from './lightbox.model';\n\nexport const defaultConfig: LightboxConfig = {\n  backdropClass: 'g-backdrop',\n  panelClass: 'g-overlay',\n  hasBackdrop: true,\n  keyboardShortcuts: true,\n  role: 'lightbox',\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\n</svg>\n`\n};\n","import { ComponentRef, Inject, Injectable, Optional } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\nimport { LEFT_ARROW, RIGHT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Gallery } from '@ngx-gallery/core';\nimport { Subject } from 'rxjs';\n\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\nimport { defaultConfig } from './lightbox.default';\nimport { LightboxComponent } from './lightbox.component';\n\n@Injectable()\nexport class Lightbox {\n\n  /** Gallery overlay ref */\n  private _overlayRef: OverlayRef;\n\n  /** Global config */\n  private _config: LightboxConfig;\n\n  /** Stream that emits when lightbox is opened */\n  opened = new Subject<string>();\n\n  /** Stream that emits when lightbox is closed */\n  closed = new Subject<string>();\n\n  constructor(@Optional() @Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\n    this._config = config ? {...defaultConfig, ...config} : defaultConfig;\n  }\n\n  /**\n   * Set Lightbox Config\n   * @param config - LightboxConfig\n   */\n  setConfig(config: LightboxConfig) {\n    this._config = {...this._config, ...config};\n  }\n\n  /**\n   * Open Lightbox Overlay\n   * @param i - Current Index\n   * @param id - Gallery ID\n   * @param config - Lightbox Config\n   */\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\n\n    const _config = config ? {...this._config, ...config} : this._config;\n\n    const overlayConfig: OverlayConfig = {\n      backdropClass: _config.backdropClass,\n      panelClass: _config.panelClass,\n      hasBackdrop: _config.hasBackdrop,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      disposeOnNavigation: true\n    };\n\n    const galleryRef = this._gallery.ref(id);\n    galleryRef.set(i);\n\n    this._overlayRef = this._overlay.create(overlayConfig);\n\n    // overlay opened event\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\n\n    // overlay closed event\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\n\n    // Attach gallery to the overlay\n    const galleryPortal = new ComponentPortal(LightboxComponent);\n    const lightboxRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\n\n    lightboxRef.instance.id = id;\n    lightboxRef.instance.overlayRef = this._overlayRef;\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\n    lightboxRef.instance.role = this._config.role;\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n\n    if (_config.hasBackdrop) {\n      this._overlayRef.backdropClick().subscribe(() => this.close());\n    }\n\n    // Add keyboard shortcuts\n    if (_config.keyboardShortcuts) {\n      this._overlayRef.keydownEvents().subscribe((event: any) => {\n        switch (event.keyCode) {\n          case LEFT_ARROW:\n            galleryRef.prev();\n            break;\n          case RIGHT_ARROW:\n            galleryRef.next();\n            break;\n          case ESCAPE:\n            this.close();\n        }\n      });\n    }\n  }\n\n  /**\n   * Close Lightbox Overlay\n   */\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","import { Directive, ElementRef, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { fromEvent, SubscriptionLike, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Lightbox } from './lightbox.service';\n\n@Directive({\n  selector: '[lightbox]'\n})\nexport class LightboxDirective implements OnInit, OnDestroy {\n\n  clickEvent: SubscriptionLike = Subscription.EMPTY;\n\n  @Input('lightbox') index = 0;\n  @Input('gallery') id = 'root';\n\n  constructor(private _lightbox: Lightbox, private _el: ElementRef, private _renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(\n      tap(() => this._lightbox.open(this.index, this.id))\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.clickEvent.unsubscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { GalleryModule } from '@ngx-gallery/core';\n\nimport { Lightbox } from './lightbox.service';\nimport { LightboxComponent } from './lightbox.component';\nimport { LightboxDirective } from './lightbox.directive';\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    GalleryModule,\n    A11yModule\n  ],\n  declarations: [\n    LightboxComponent,\n    LightboxDirective\n  ],\n  exports: [\n    LightboxDirective\n  ],\n  providers: [\n    Lightbox\n  ],\n  entryComponents: [\n    LightboxComponent\n  ]\n})\nexport class LightboxModule {\n  static withConfig(config: LightboxConfig): ModuleWithProviders {\n    return {\n      ngModule: LightboxModule,\n      providers: [\n        {\n          provide: LIGHTBOX_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
