/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from "@angular/core";
export class SecondsToTimePipe {
    constructor() {
        this.times = {
            year: 31557600,
            month: 2629746,
            day: 86400,
            hour: 3600
        };
    }
    /**
     * @param {?} seconds
     * @return {?}
     */
    transform(seconds) {
        if (!seconds) {
            return "0:00";
        }
        else {
            /** @type {?} */
            let timeString = "";
            for (const key in this.times) {
                if (Math.floor(seconds / this.times[key]) > 0) {
                    timeString += Math.floor(seconds / this.times[key]).toString() + ":";
                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);
                }
            }
            timeString += Math.floor(seconds / 60).toString() + ":";
            seconds = seconds - 60 * Math.floor(seconds / 60);
            if (Math.floor(seconds) < 10) {
                timeString += "0";
            }
            timeString += Math.floor(seconds).toString();
            return timeString;
        }
    }
}
SecondsToTimePipe.decorators = [
    { type: Pipe, args: [{
                name: "secondsToTime"
            },] }
];
if (false) {
    /** @type {?} */
    SecondsToTimePipe.prototype.times;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vjb25kcy10by10aW1lLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXQtdmlkZW8vIiwic291cmNlcyI6WyJsaWIvcGlwZXMvc2Vjb25kcy10by10aW1lLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBS3BELE1BQU0sT0FBTyxpQkFBaUI7SUFIOUI7UUFJRSxVQUFLLEdBQUc7WUFDTixJQUFJLEVBQUUsUUFBUTtZQUNkLEtBQUssRUFBRSxPQUFPO1lBQ2QsR0FBRyxFQUFFLEtBQUs7WUFDVixJQUFJLEVBQUUsSUFBSTtTQUNYLENBQUM7SUFzQkosQ0FBQzs7Ozs7SUFwQkMsU0FBUyxDQUFDLE9BQWU7UUFDdkIsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNaLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7YUFBTTs7Z0JBQ0QsVUFBVSxHQUFHLEVBQUU7WUFDbkIsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUM1QixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQzdDLFVBQVUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxDQUFDO29CQUNyRSxPQUFPLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2lCQUM3RTthQUNGO1lBQ0QsVUFBVSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUN4RCxPQUFPLEdBQUcsT0FBTyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsQ0FBQztZQUNsRCxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUM1QixVQUFVLElBQUksR0FBRyxDQUFDO2FBQ25CO1lBQ0QsVUFBVSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDN0MsT0FBTyxVQUFVLENBQUM7U0FDbkI7SUFDSCxDQUFDOzs7WUE5QkYsSUFBSSxTQUFDO2dCQUNKLElBQUksRUFBRSxlQUFlO2FBQ3RCOzs7O0lBRUMsa0NBS0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiBcInNlY29uZHNUb1RpbWVcIlxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2Vjb25kc1RvVGltZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0aW1lcyA9IHtcclxuICAgIHllYXI6IDMxNTU3NjAwLFxyXG4gICAgbW9udGg6IDI2Mjk3NDYsXHJcbiAgICBkYXk6IDg2NDAwLFxyXG4gICAgaG91cjogMzYwMFxyXG4gIH07XHJcblxyXG4gIHRyYW5zZm9ybShzZWNvbmRzOiBudW1iZXIpIHtcclxuICAgIGlmICghc2Vjb25kcykge1xyXG4gICAgICByZXR1cm4gXCIwOjAwXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsZXQgdGltZVN0cmluZyA9IFwiXCI7XHJcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMudGltZXMpIHtcclxuICAgICAgICBpZiAoTWF0aC5mbG9vcihzZWNvbmRzIC8gdGhpcy50aW1lc1trZXldKSA+IDApIHtcclxuICAgICAgICAgIHRpbWVTdHJpbmcgKz0gTWF0aC5mbG9vcihzZWNvbmRzIC8gdGhpcy50aW1lc1trZXldKS50b1N0cmluZygpICsgXCI6XCI7XHJcbiAgICAgICAgICBzZWNvbmRzID0gc2Vjb25kcyAtIHRoaXMudGltZXNba2V5XSAqIE1hdGguZmxvb3Ioc2Vjb25kcyAvIHRoaXMudGltZXNba2V5XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRpbWVTdHJpbmcgKz0gTWF0aC5mbG9vcihzZWNvbmRzIC8gNjApLnRvU3RyaW5nKCkgKyBcIjpcIjtcclxuICAgICAgc2Vjb25kcyA9IHNlY29uZHMgLSA2MCAqIE1hdGguZmxvb3Ioc2Vjb25kcyAvIDYwKTtcclxuICAgICAgaWYgKE1hdGguZmxvb3Ioc2Vjb25kcykgPCAxMCkge1xyXG4gICAgICAgIHRpbWVTdHJpbmcgKz0gXCIwXCI7XHJcbiAgICAgIH1cclxuICAgICAgdGltZVN0cmluZyArPSBNYXRoLmZsb29yKHNlY29uZHMpLnRvU3RyaW5nKCk7XHJcbiAgICAgIHJldHVybiB0aW1lU3RyaW5nO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=