{"version":3,"file":"mat-video.js","sources":["ng://mat-video/lib/services/event.service.ts","ng://mat-video/lib/video.component.ts","ng://mat-video/lib/directives/mat-video-source.directive.ts","ng://mat-video/lib/directives/mat-video-track.directive.ts","ng://mat-video/lib/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/lib/pipes/seconds-to-time.pipe.ts","ng://mat-video/lib/services/fullscreen.service.ts","ng://mat-video/lib/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/lib/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/lib/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/lib/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/lib/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/lib/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/lib/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/lib/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/lib/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/lib/video.module.ts"],"sourcesContent":["import { Injectable, Renderer2 } from \"@angular/core\";\r\nimport { EventHandler } from \"../interfaces/event-handler.interface\";\r\n\r\n@Injectable()\r\nexport class EventService {\r\n  constructor() {}\r\n\r\n  addEvents(renderer: Renderer2, events: EventHandler[]): void {\r\n    for (const event of events) {\r\n      event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n  }\r\n\r\n  removeEvents(events: EventHandler[]): void {\r\n    for (const event of events) {\r\n      if (event.dispose) {\r\n        event.dispose();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from \"@angular/core\";\nimport { ThemePalette } from \"@angular/material/core\";\n\nimport { EventHandler } from \"./interfaces/event-handler.interface\";\nimport { EventService } from \"./services/event.service\";\n\n@Component({\n  selector: \"mat-video\",\n  templateUrl: \"./video.component.html\",\n  styleUrls: [\"./video.component.scss\", \"./styles/icons.scss\"]\n})\nexport class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild(\"player\", { static: false }) private player: ElementRef;\n  @ViewChild(\"video\", { static: false }) private video: ElementRef;\n\n  @Input() src: string | MediaStream | MediaSource | Blob = null;\n  @Input() title: string = null;\n  @Input() autoplay = false;\n  @Input() preload = true;\n  @Input() loop = false;\n  @Input() quality = true;\n  @Input() fullscreen = true;\n  @Input() playsinline = false;\n  @Input() showFrameByFrame = false;\n  @Input() fps = 29.97;\n  @Input() download = false;\n  @Input() color: ThemePalette = \"primary\";\n  @Input() spinner = \"spin\";\n  @Input() poster: string = null;\n  @Input() keyboard = true;\n  @Input() overlay: boolean = null;\n  @Input() muted = false;\n  @Output() mutedChange = new EventEmitter<boolean>();\n\n  @Output() timeChange = new EventEmitter<number>();\n\n  @Input()\n  get time() {\n    return this.getVideoTag().currentTime;\n  }\n\n  set time(val: number) {\n    const video: HTMLVideoElement = this.getVideoTag();\n    if (video && val) {\n      if (val > video.duration) {\n        val = video.duration;\n      }\n      if (val < 0) {\n        val = 0;\n      }\n      if (val !== video.currentTime) {\n        video.currentTime = val;\n      }\n      if (this.lastTime !== video.currentTime) {\n        setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n        this.lastTime = video.currentTime;\n      }\n    }\n  }\n\n  playing = false;\n\n  isFullscreen = false;\n\n  videoWidth: number;\n  videoHeight: number;\n  lastTime: number;\n\n  videoLoaded = false;\n\n  private srcObjectURL: string;\n\n  private isMouseMoving = false;\n  private isMouseMovingTimer: NodeJS.Timer;\n  private isMouseMovingTimeout = 2000;\n\n  private events: EventHandler[];\n\n  constructor(private renderer: Renderer2, private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.events = [\n      {\n        element: this.video.nativeElement,\n        name: \"loadstart\",\n        callback: event => (this.videoLoaded = false),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"loadedmetadata\",\n        callback: event => this.evLoadedMetadata(event),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"error\",\n        callback: event => console.error(\"Unhandled Video Error\", event),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"contextmenu\",\n        callback: event => event.preventDefault(),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"timeupdate\",\n        callback: event => this.evTimeUpdate(event),\n        dispose: null\n      },\n      {\n        element: this.player.nativeElement,\n        name: \"mousemove\",\n        callback: event => this.evMouseMove(event),\n        dispose: null\n      }\n    ];\n\n    this.video.nativeElement.onloadeddata = () => (this.videoLoaded = true);\n\n    this.evt.addEvents(this.renderer, this.events);\n\n    this.setVideoSrc(this.src);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.src) {\n      this.setVideoSrc(this.src);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.video.nativeElement.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n  load(): void {\n    if (this.video && this.video.nativeElement) {\n      this.video.nativeElement.load();\n    }\n  }\n\n  getVideoTag(): HTMLVideoElement | null {\n    return this.video && this.video.nativeElement ? (this.video.nativeElement as HTMLVideoElement) : null;\n  }\n\n  evLoadedMetadata(event: any): void {\n    this.videoWidth = this.video.nativeElement.videoWidth;\n    this.videoHeight = this.video.nativeElement.videoHeight;\n    this.videoLoaded = true;\n  }\n\n  evMouseMove(event: any): void {\n    this.isMouseMoving = true;\n    clearTimeout(this.isMouseMovingTimer);\n    this.isMouseMovingTimer = setTimeout(() => {\n      this.isMouseMoving = false;\n    }, this.isMouseMovingTimeout);\n  }\n\n  evTimeUpdate(event: any): void {\n    this.time = this.getVideoTag().currentTime;\n  }\n\n  getOverlayClass(activeClass: string, inactiveClass: string): any {\n    if (this.overlay === null) {\n      return !this.playing || this.isMouseMoving ? activeClass : inactiveClass;\n    } else {\n      return this.overlay ? activeClass : inactiveClass;\n    }\n  }\n\n  private setVideoSrc(src: string | MediaStream | MediaSource | Blob): void {\n    if (this.srcObjectURL) {\n      URL.revokeObjectURL(this.srcObjectURL);\n      this.srcObjectURL = null;\n    }\n\n    if (!this.video || !this.video.nativeElement) {\n      return;\n    }\n\n    if (!src) {\n      this.video.nativeElement.src = null;\n      if (\"srcObject\" in HTMLVideoElement.prototype) {\n        this.video.nativeElement.srcObject = new MediaStream();\n      }\n    } else if (typeof src === \"string\") {\n      this.video.nativeElement.src = src;\n    } else if (\"srcObject\" in HTMLVideoElement.prototype) {\n      this.video.nativeElement.srcObject = src;\n    } else {\n      this.srcObjectURL = URL.createObjectURL(src);\n      this.video.nativeElement.src = this.srcObjectURL;\n    }\n\n    this.video.nativeElement.muted = this.muted;\n  }\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\n\r\nimport { MatVideoComponent } from \"../video.component\";\r\n\r\n@Directive({\r\n  selector: \"[matVideoSource]\"\r\n})\r\nexport class MatVideoSourceDirective implements OnChanges {\r\n  @Input() src: string = null;\r\n  @Input() type: string = null;\r\n\r\n  private init = true;\r\n  private video: MatVideoComponent;\r\n  private source: HTMLSourceElement;\r\n\r\n  constructor(@Host() private matVideoComponent: MatVideoComponent, private el: ElementRef) {\r\n    this.video = matVideoComponent;\r\n    this.source = el.nativeElement;\r\n    this.init = false;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.source.src = this.src;\r\n    this.source.type = this.type;\r\n\r\n    if (!this.init) {\r\n      this.video.load();\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\n\r\nimport { MatVideoComponent } from \"../video.component\";\r\n\r\n@Directive({\r\n  selector: \"[matVideoTrack]\"\r\n})\r\nexport class MatVideoTrackDirective implements OnChanges {\r\n  @Input() src: string = null;\r\n  @Input() kind: string = null;\r\n  @Input() srclang: string = null;\r\n  @Input() label: string = null;\r\n\r\n  private init = true;\r\n  private video: MatVideoComponent;\r\n  private track: HTMLTrackElement;\r\n\r\n  constructor(@Host() private matVideoComponent: MatVideoComponent, private el: ElementRef) {\r\n    this.video = matVideoComponent;\r\n    this.track = el.nativeElement;\r\n    this.init = false;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.track.src = this.src;\r\n    this.track.kind = this.kind;\r\n    this.track.srclang = this.srclang;\r\n    this.track.label = this.label;\r\n\r\n    if (!this.init) {\r\n      this.video.load();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ElementRef, ChangeDetectorRef, ChangeDetectionStrategy, Optional, Attribute } from \"@angular/core\";\r\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from \"@angular/material/slider\";\r\nimport { FocusMonitor } from \"@angular/cdk/a11y\";\r\nimport { Directionality } from \"@angular/cdk/bidi\";\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\n\r\n@Component({\r\n  selector: \"mat-slider-progress-bar\",\r\n  templateUrl: \"./mat-slider-progress-bar.component.html\",\r\n  styleUrls: [\"./mat-slider-progress-bar.component.scss\"],\r\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n  host: {\r\n    \"(focus)\": \"_onFocus()\",\r\n    \"(blur)\": \"_onBlur()\",\r\n    \"(click)\": 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\r\n    \"(mousedown)\": 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\r\n    \"(keydown)\": \"_onKeydown($event)\",\r\n    \"(keyup)\": \"_onKeyup()\",\r\n    \"(mouseenter)\": \"_onMouseenter()\",\r\n    \"(slide)\": \"_onSlide($event)\",\r\n    \"(slideend)\": \"_onSlideEnd()\",\r\n    \"(slidestart)\": \"_onSlideStart($event)\",\r\n    class: \"mat-slider\",\r\n    role: \"slider\",\r\n    \"[tabIndex]\": \"tabIndex\",\r\n    \"[attr.aria-disabled]\": \"disabled\",\r\n    \"[attr.aria-valuemax]\": \"max\",\r\n    \"[attr.aria-valuemin]\": \"min\",\r\n    \"[attr.aria-valuenow]\": \"value\",\r\n    \"[attr.aria-orientation]\": 'vertical ? \"vertical\" : \"horizontal\"',\r\n    \"[class.mat-slider-disabled]\": \"disabled\",\r\n    \"[class.mat-slider-has-ticks]\": \"tickInterval\",\r\n    \"[class.mat-slider-horizontal]\": \"!vertical\",\r\n    \"[class.mat-slider-axis-inverted]\": \"_invertAxis\",\r\n    \"[class.mat-slider-sliding]\": \"_isSliding\",\r\n    \"[class.mat-slider-thumb-label-showing]\": \"thumbLabel\",\r\n    \"[class.mat-slider-vertical]\": \"vertical\",\r\n    \"[class.mat-slider-min-value]\": \"_isMinValue\",\r\n    \"[class.mat-slider-hide-last-tick]\": \"disabled || _isMinValue && _thumbGap && _invertAxis\"\r\n  },\r\n  inputs: [\"disabled\", \"color\", \"tabIndex\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatSliderProgressBarComponent extends MatSlider {\r\n  @Input() mode = \"buffer\";\r\n  @Input() value = 0;\r\n  /** Buffer value of the progress bar. Defaults to zero. */\r\n  @Input()\r\n  get bufferValue(): number {\r\n    return this.pBufferValue;\r\n  }\r\n  set bufferValue(v: number) {\r\n    this.pBufferValue = clamp(v || 0);\r\n  }\r\n  private pBufferValue = 0;\r\n\r\n  /** The id of the progress bar. */\r\n  sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    focusMonitor: FocusMonitor,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() dir: Directionality,\r\n    @Attribute(\"tabindex\") tabIndex: string\r\n  ) {\r\n    super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\r\n  }\r\n\r\n  /** CSS styles for the track fill element. */\r\n  get _trackBufferStyles(): { [key: string]: string } {\r\n    if (this.mode === \"buffer\") {\r\n      const axis = this.vertical ? \"Y\" : \"X\";\r\n      return {\r\n        transform: `translate${axis}(0px) scale${axis}(${this.pBufferValue / 100})`\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n  return Math.max(min, Math.min(max, v));\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"secondsToTime\"\r\n})\r\nexport class SecondsToTimePipe implements PipeTransform {\r\n  times = {\r\n    year: 31557600,\r\n    month: 2629746,\r\n    day: 86400,\r\n    hour: 3600\r\n  };\r\n\r\n  transform(seconds: number) {\r\n    if (!seconds) {\r\n      return \"0:00\";\r\n    } else {\r\n      let timeString = \"\";\r\n      for (const key in this.times) {\r\n        if (Math.floor(seconds / this.times[key]) > 0) {\r\n          timeString += Math.floor(seconds / this.times[key]).toString() + \":\";\r\n          seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n        }\r\n      }\r\n      timeString += Math.floor(seconds / 60).toString() + \":\";\r\n      seconds = seconds - 60 * Math.floor(seconds / 60);\r\n      if (Math.floor(seconds) < 10) {\r\n        timeString += \"0\";\r\n      }\r\n      timeString += Math.floor(seconds).toString();\r\n      return timeString;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FullscreenControls } from \"../interfaces/fullscreen-controls.interface\";\r\n\r\n@Injectable()\r\nexport class FullscreenService {\r\n  private fnMap: string[][] = [\r\n    // Object keys\r\n    [\"requestFullscreen\", \"exitFullscreen\", \"fullscreenElement\", \"fullscreenEnabled\", \"fullscreenchange\", \"fullscreenerror\"],\r\n    // New WebKit\r\n    [\r\n      \"webkitRequestFullscreen\",\r\n      \"webkitExitFullscreen\",\r\n      \"webkitFullscreenElement\",\r\n      \"webkitFullscreenEnabled\",\r\n      \"webkitfullscreenchange\",\r\n      \"webkitfullscreenerror\"\r\n    ],\r\n    // Old WebKit (Safari 5.1)\r\n    [\r\n      \"webkitRequestFullScreen\",\r\n      \"webkitCancelFullScreen\",\r\n      \"webkitCurrentFullScreenElement\",\r\n      \"webkitCancelFullScreen\",\r\n      \"webkitfullscreenchange\",\r\n      \"webkitfullscreenerror\"\r\n    ],\r\n    // Mozilla\r\n    [\r\n      \"mozRequestFullScreen\",\r\n      \"mozCancelFullScreen\",\r\n      \"mozFullScreenElement\",\r\n      \"mozFullScreenEnabled\",\r\n      \"mozfullscreenchange\",\r\n      \"mozfullscreenerror\"\r\n    ],\r\n    // MS\r\n    [\"msRequestFullscreen\", \"msExitFullscreen\", \"msFullscreenElement\", \"msFullscreenEnabled\", \"MSFullscreenChange\", \"MSFullscreenError\"]\r\n  ];\r\n\r\n  private fn: FullscreenControls;\r\n  private keyboardAllowed: boolean;\r\n\r\n  constructor() {\r\n    this.keyboardAllowed = typeof Element !== \"undefined\" && \"ALLOW_KEYBOARD_INPUT\" in Element;\r\n    const ret: any = {};\r\n    let val;\r\n\r\n    for (let i = 0; i < this.fnMap.length; i++) {\r\n      val = this.fnMap[i];\r\n      if (val && val[1] in document) {\r\n        for (i = 0; i < val.length; i++) {\r\n          // Map everything to the first list of keys\r\n          ret[this.fnMap[0][i].toString()] = val[i];\r\n        }\r\n        this.fn = ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public request(elem: any) {\r\n    const request = this.fn.requestFullscreen;\r\n\r\n    elem = elem || document.documentElement;\r\n\r\n    // Work around Safari 5.1 bug: reports support for\r\n    // keyboard in fullscreen even though it doesn't.\r\n    // Browser sniffing, since the alternative with\r\n    // setTimeout is even worse.\r\n    if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n      elem[request]();\r\n    } else {\r\n      elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\r\n    }\r\n  }\r\n\r\n  public exit() {\r\n    document[this.fn.exitFullscreen]();\r\n  }\r\n\r\n  public toggle(elem: any) {\r\n    if (this.isFullscreen()) {\r\n      this.exit();\r\n    } else {\r\n      this.request(elem);\r\n    }\r\n  }\r\n\r\n  public onChange(callback: any) {\r\n    document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n  }\r\n\r\n  public onError(callback: any) {\r\n    document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n  }\r\n\r\n  public isFullscreen() {\r\n    return Boolean(document[this.fn.fullscreenElement]);\r\n  }\r\n\r\n  public isEnabled() {\r\n    // Coerce to boolean in case of old WebKit\r\n    return Boolean(document[this.fn.fullscreenEnabled]);\r\n  }\r\n\r\n  public getElement() {\r\n    return document[this.fn.fullscreenElement];\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mat-download-button\",\r\n  templateUrl: \"./mat-download-button.component.html\",\r\n  styleUrls: [\"./mat-download-button.component.scss\"]\r\n})\r\nexport class MatDownloadButtonComponent {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() title: string;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mat-frame-by-frame-control\",\r\n  templateUrl: \"./mat-frame-by-frame-control.component.html\",\r\n  styleUrls: [\"./mat-frame-by-frame-control.component.scss\"]\r\n})\r\nexport class MatFrameByFrameControlComponent implements OnInit {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() fps = 29.97;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  seekFrames(nbFrames: number) {\r\n    if (!this.video.paused) {\r\n      this.video.pause();\r\n    }\r\n\r\n    const currentFrames = this.video.currentTime * this.fps;\r\n    const newPos = (currentFrames + nbFrames) / this.fps + 0.00001;\r\n    this.video.currentTime = newPos;\r\n  }\r\n}\r\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from \"@angular/core\";\r\n\r\nimport { EventService } from \"../../services/event.service\";\r\nimport { FullscreenService } from \"../../services/fullscreen.service\";\r\n\r\n@Component({\r\n  selector: \"mat-fullscreen-button\",\r\n  templateUrl: \"./mat-fullscreen-button.component.html\",\r\n  styleUrls: [\"./mat-fullscreen-button.component.scss\"]\r\n})\r\nexport class MatFullscreenButtonComponent implements OnInit {\r\n  canFullscreen = false;\r\n\r\n  @Input() player: HTMLVideoElement;\r\n\r\n  @Input() fullscreen = false;\r\n\r\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard = true;\r\n\r\n  constructor(private fscreen: FullscreenService, private evt: EventService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.fscreen.isEnabled()) {\r\n      this.canFullscreen = true;\r\n    }\r\n\r\n    this.fscreen.onChange(event => (this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false)));\r\n  }\r\n\r\n  setFullscreen(value: boolean) {\r\n    if (this.canFullscreen && this.fullscreen !== value) {\r\n      this.toggleFullscreen();\r\n    }\r\n  }\r\n\r\n  toggleFullscreen(): void {\r\n    this.fullscreen = !this.fullscreen;\r\n    this.updateFullscreen();\r\n  }\r\n\r\n  updateFullscreen(): void {\r\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  onChangesFullscreen(value: boolean): void {\r\n    this.fullscreen = value;\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  @HostListener(\"document:keyup.f\", [\"$event\"])\r\n  onFullscreenKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleFullscreen();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from \"@angular/core\";\r\n\r\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\r\nimport { EventService } from \"../../services/event.service\";\r\n\r\n@Component({\r\n  selector: \"mat-play-button\",\r\n  templateUrl: \"./mat-play-button.component.html\",\r\n  styleUrls: [\"./mat-play-button.component.scss\"]\r\n})\r\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  @Input() play = false;\r\n\r\n  @Output() playChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard = true;\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(private renderer: Renderer2, private evt: EventService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: \"play\", callback: event => this.setVideoPlayback(true), dispose: null },\r\n      { element: this.video, name: \"pause\", callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: \"durationchange\", callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: \"ended\", callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: \"click\", callback: event => this.toggleVideoPlayback(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  setVideoPlayback(value: boolean) {\r\n    if (this.play !== value) {\r\n      this.toggleVideoPlayback();\r\n    }\r\n  }\r\n\r\n  toggleVideoPlayback(): void {\r\n    this.play = !this.play;\r\n    this.updateVideoPlayback();\r\n  }\r\n\r\n  updateVideoPlayback(): void {\r\n    this.play ? this.video.play() : this.video.pause();\r\n    this.playChanged.emit(this.play);\r\n  }\r\n\r\n  @HostListener(\"document:keyup.space\", [\"$event\"])\r\n  onPlayKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleVideoPlayback();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mat-quality-control\",\r\n  templateUrl: \"./mat-quality-control.component.html\",\r\n  styleUrls: [\"./mat-quality-control.component.scss\"]\r\n})\r\nexport class MatQualityControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() {}\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from \"@angular/core\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\n\r\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\r\nimport { EventService } from \"../../services/event.service\";\r\n\r\n@Component({\r\n  selector: \"mat-seek-progress-control\",\r\n  templateUrl: \"./mat-seek-progress-control.component.html\",\r\n  styleUrls: [\"./mat-seek-progress-control.component.scss\"]\r\n})\r\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\r\n  curTimePercent = 0;\r\n  bufTimePercent = 0;\r\n\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = \"primary\";\r\n\r\n  @Input() currentTime = 0;\r\n\r\n  @Output() currentTimeChanged = new EventEmitter<number>();\r\n\r\n  @Input() bufferedTime = 0;\r\n\r\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(private renderer: Renderer2, private evt: EventService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: \"seeking\", callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: \"canplaythrough\", callback: event => this.updateBufferedTime(), dispose: null },\r\n      { element: this.video, name: \"timeupdate\", callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: \"progress\", callback: event => this.updateBufferedTime(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  seekVideo(value: number): void {\r\n    const percentage = value / 100;\r\n    const newTime = this.video.duration * percentage;\r\n    this.video.currentTime = newTime;\r\n  }\r\n\r\n  updateCurrentTime(time: number): void {\r\n    this.currentTime = time;\r\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n  }\r\n\r\n  updateBufferedTime(): void {\r\n    if (this.video.buffered.length > 0) {\r\n      let largestBufferValue = 0;\r\n      for (let i = 0; i < this.video.buffered.length; i++) {\r\n        const cur = this.video.currentTime;\r\n        const start = this.video.buffered.start(i);\r\n        const end = this.video.buffered.end(i);\r\n        if (start <= cur && end > cur && end - start > largestBufferValue) {\r\n          largestBufferValue = end;\r\n        }\r\n      }\r\n      this.bufferedTime = largestBufferValue;\r\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n    }\r\n  }\r\n\r\n  updateTime(emitter: EventEmitter<number>, time: number): number {\r\n    emitter.emit(time);\r\n    return (time / this.video.duration) * 100;\r\n  }\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mat-time-control\",\r\n  templateUrl: \"./mat-time-control.component.html\",\r\n  styleUrls: [\"./mat-time-control.component.scss\"]\r\n})\r\nexport class MatTimeControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() {}\r\n}\r\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from \"@angular/core\";\r\n\r\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\r\nimport { EventService } from \"../../services/event.service\";\r\n\r\n@Component({\r\n  selector: \"mat-video-spinner\",\r\n  templateUrl: \"./mat-video-spinner.component.html\",\r\n  styleUrls: [\r\n    \"./mat-video-spinner.component.scss\",\r\n    \"./indicators/spin.scss\",\r\n    \"./indicators/dot.scss\",\r\n    \"./indicators/split-ring.scss\",\r\n    \"./indicators/hourglass.scss\"\r\n  ]\r\n})\r\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() spinner = \"spin\";\r\n\r\n  videoBuffering = false;\r\n  videoLoaded = false;\r\n\r\n  private events: EventHandler[] = [];\r\n\r\n  constructor(private renderer: Renderer2, private evt: EventService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: \"loadstart\", callback: event => (this.videoLoaded = false), dispose: null },\r\n      { element: this.video, name: \"loadedmetadata\", callback: event => (this.videoLoaded = true), dispose: null },\r\n      { element: this.video, name: \"canplay\", callback: event => (this.videoBuffering = false), dispose: null },\r\n      { element: this.video, name: \"waiting\", callback: event => (this.videoBuffering = true), dispose: null },\r\n      { element: this.video, name: \"durationchange\", callback: event => (this.videoBuffering = true), dispose: null }\r\n    ];\r\n\r\n    this.video.onloadeddata = () => (this.videoLoaded = true);\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.video.onloadeddata = null;\r\n\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { ThemePalette } from \"@angular/material/core\";\n\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"mat-volume-control\",\n  templateUrl: \"./mat-volume-control.component.html\",\n  styleUrls: [\"./mat-volume-control.component.scss\"]\n})\nexport class MatVolumeControlComponent implements AfterViewInit, OnChanges {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = \"primary\";\n\n  @Input() volume = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  @Input() muted = false;\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard = true;\n\n  constructor(private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.updateMuted(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.muted) {\n      this.updateMuted(false);\n    }\n  }\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0) {\n      this.setMuted(false);\n    }\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value) {\n      this.toggleMuted();\n    }\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(emitChange: boolean = true): void {\n    if (this.video) {\n      this.video.muted = this.muted;\n    }\n\n    if (emitChange) {\n      this.mutedChanged.emit(this.muted);\n    }\n  }\n\n  @HostListener(\"document:keyup.m\", [\"$event\"])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\n\r\nimport { MatVideoSourceDirective } from \"./directives/mat-video-source.directive\";\r\nimport { MatVideoTrackDirective } from \"./directives/mat-video-track.directive\";\r\nimport { MatSliderProgressBarComponent } from \"./internal/mat-slider-progress-bar/mat-slider-progress-bar.component\";\r\nimport { SecondsToTimePipe } from \"./pipes/seconds-to-time.pipe\";\r\nimport { EventService } from \"./services/event.service\";\r\nimport { FullscreenService } from \"./services/fullscreen.service\";\r\nimport { MatDownloadButtonComponent } from \"./ui/mat-download-button/mat-download-button.component\";\r\nimport { MatFrameByFrameControlComponent } from \"./ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component\";\r\nimport { MatFullscreenButtonComponent } from \"./ui/mat-fullscreen-button/mat-fullscreen-button.component\";\r\nimport { MatPlayButtonComponent } from \"./ui/mat-play-button/mat-play-button.component\";\r\nimport { MatQualityControlComponent } from \"./ui/mat-quality-control/mat-quality-control.component\";\r\nimport { MatSeekProgressControlComponent } from \"./ui/mat-seek-progress-control/mat-seek-progress-control.component\";\r\nimport { MatTimeControlComponent } from \"./ui/mat-time-control/mat-time-control.component\";\r\nimport { MatVideoSpinnerComponent } from \"./ui/mat-video-spinner/mat-video-spinner.component\";\r\nimport { MatVolumeControlComponent } from \"./ui/mat-volume-control/mat-volume-control.component\";\r\nimport { MatVideoComponent } from \"./video.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SecondsToTimePipe,\r\n    MatVideoComponent,\r\n    MatSliderProgressBarComponent,\r\n    MatPlayButtonComponent,\r\n    MatVolumeControlComponent,\r\n    MatDownloadButtonComponent,\r\n    MatFullscreenButtonComponent,\r\n    MatTimeControlComponent,\r\n    MatQualityControlComponent,\r\n    MatVideoSpinnerComponent,\r\n    MatSeekProgressControlComponent,\r\n    MatVideoSourceDirective,\r\n    MatVideoTrackDirective,\r\n    MatFrameByFrameControlComponent\r\n  ],\r\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatSliderModule],\r\n  exports: [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective],\r\n  providers: [FullscreenService, EventService]\r\n})\r\nexport class MatVideoModule {}\r\n"],"names":[],"mappings":"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"}