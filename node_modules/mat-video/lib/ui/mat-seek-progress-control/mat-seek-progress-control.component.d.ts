import { AfterViewInit, EventEmitter, OnDestroy, Renderer2 } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { EventService } from "../../services/event.service";
import * as ɵngcc0 from '@angular/core';
export declare class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {
    private renderer;
    private evt;
    curTimePercent: number;
    bufTimePercent: number;
    video: HTMLVideoElement;
    color: ThemePalette;
    currentTime: number;
    currentTimeChanged: EventEmitter<number>;
    bufferedTime: number;
    bufferedTimeChanged: EventEmitter<number>;
    private events;
    constructor(renderer: Renderer2, evt: EventService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    seekVideo(value: number): void;
    updateCurrentTime(time: number): void;
    updateBufferedTime(): void;
    updateTime(emitter: EventEmitter<number>, time: number): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatSeekProgressControlComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatSeekProgressControlComponent, "mat-seek-progress-control", never, { "video": "video"; "color": "color"; "currentTime": "currentTime"; "bufferedTime": "bufferedTime"; }, { "currentTimeChanged": "currentTimeChanged"; "bufferedTimeChanged": "bufferedTimeChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXNlZWstcHJvZ3Jlc3MtY29udHJvbC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibWF0LXNlZWstcHJvZ3Jlc3MtY29udHJvbC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9jb3JlXCI7XHJcbmltcG9ydCB7IEV2ZW50U2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9ldmVudC5zZXJ2aWNlXCI7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1hdFNlZWtQcm9ncmVzc0NvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcclxuICAgIHByaXZhdGUgZXZ0O1xyXG4gICAgY3VyVGltZVBlcmNlbnQ6IG51bWJlcjtcclxuICAgIGJ1ZlRpbWVQZXJjZW50OiBudW1iZXI7XHJcbiAgICB2aWRlbzogSFRNTFZpZGVvRWxlbWVudDtcclxuICAgIGNvbG9yOiBUaGVtZVBhbGV0dGU7XHJcbiAgICBjdXJyZW50VGltZTogbnVtYmVyO1xyXG4gICAgY3VycmVudFRpbWVDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuICAgIGJ1ZmZlcmVkVGltZTogbnVtYmVyO1xyXG4gICAgYnVmZmVyZWRUaW1lQ2hhbmdlZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBwcml2YXRlIGV2ZW50cztcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGV2dDogRXZlbnRTZXJ2aWNlKTtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIHNlZWtWaWRlbyh2YWx1ZTogbnVtYmVyKTogdm9pZDtcclxuICAgIHVwZGF0ZUN1cnJlbnRUaW1lKHRpbWU6IG51bWJlcik6IHZvaWQ7XHJcbiAgICB1cGRhdGVCdWZmZXJlZFRpbWUoKTogdm9pZDtcclxuICAgIHVwZGF0ZVRpbWUoZW1pdHRlcjogRXZlbnRFbWl0dGVyPG51bWJlcj4sIHRpbWU6IG51bWJlcik6IG51bWJlcjtcclxufVxyXG4iXX0=