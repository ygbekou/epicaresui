import { AfterViewInit, EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { EventService } from "../../services/event.service";
import * as ɵngcc0 from '@angular/core';
export declare class MatVolumeControlComponent implements AfterViewInit, OnChanges {
    private evt;
    video: HTMLVideoElement;
    color: ThemePalette;
    volume: number;
    volumeChanged: EventEmitter<number>;
    muted: boolean;
    mutedChanged: EventEmitter<boolean>;
    keyboard: boolean;
    constructor(evt: EventService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setVolume(value: number): void;
    setMuted(value: boolean): void;
    toggleMuted(): void;
    updateMuted(emitChange?: boolean): void;
    onMuteKey(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatVolumeControlComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatVolumeControlComponent, "mat-volume-control", never, { "video": "video"; "color": "color"; "volume": "volume"; "muted": "muted"; "keyboard": "keyboard"; }, { "volumeChanged": "volumeChanged"; "mutedChanged": "mutedChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXZvbHVtZS1jb250cm9sLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtYXQtdm9sdW1lLWNvbnRyb2wuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBUaGVtZVBhbGV0dGUgfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZVwiO1xyXG5pbXBvcnQgeyBFdmVudFNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZXZlbnQuc2VydmljZVwiO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXRWb2x1bWVDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIHtcclxuICAgIHByaXZhdGUgZXZ0O1xyXG4gICAgdmlkZW86IEhUTUxWaWRlb0VsZW1lbnQ7XHJcbiAgICBjb2xvcjogVGhlbWVQYWxldHRlO1xyXG4gICAgdm9sdW1lOiBudW1iZXI7XHJcbiAgICB2b2x1bWVDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuICAgIG11dGVkOiBib29sZWFuO1xyXG4gICAgbXV0ZWRDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcbiAgICBrZXlib2FyZDogYm9vbGVhbjtcclxuICAgIGNvbnN0cnVjdG9yKGV2dDogRXZlbnRTZXJ2aWNlKTtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XHJcbiAgICBzZXRWb2x1bWUodmFsdWU6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBzZXRNdXRlZCh2YWx1ZTogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICB0b2dnbGVNdXRlZCgpOiB2b2lkO1xyXG4gICAgdXBkYXRlTXV0ZWQoZW1pdENoYW5nZT86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgb25NdXRlS2V5KGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxufVxyXG4iXX0=