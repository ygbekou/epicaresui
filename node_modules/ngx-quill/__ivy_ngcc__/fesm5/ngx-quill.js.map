{"version":3,"file":"ngx-quill.js","sources":["ng:/ngx-quill/lib/quill-defaults.ts","ng:/ngx-quill/lib/helpers.ts","ng:/ngx-quill/lib/quill-editor.interfaces.ts","ng:/ngx-quill/lib/quill.service.ts","ng:/ngx-quill/lib/quill-editor.component.ts","ng:/ngx-quill/lib/quill-view-html.component.ts","ng:/ngx-quill/lib/quill-view.component.ts","ng:/ngx-quill/lib/quill.module.ts","ng:/ngx-quill/public-api.ts","ng:/ngx-quill/ngx-quill.ts"],"names":[],"mappings":"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","sourcesContent":["export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import {QuillFormat} from './quill-editor.interfaces'\n\nexport const getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n","import { InjectionToken } from '@angular/core'\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface CustomModule {\n  implementation: any\n  path: string\n}\n\nexport type QuillToolbarConfig = Array<Array< string | {\n  indent?: string\n  list?: string\n  direction?: string\n  header?: number | Array<boolean | number>\n  color?: string[] | string\n  background?: string[] | string\n  align?: string[] | string\n  script?: string\n  font?: string[] | string\n  size?: Array<boolean | string>\n}\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    matchers?: any[]\n    matchVisual?: boolean\n  } | boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } | boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig | string | {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } | boolean\n}\n\nexport type QuillFormat = 'object' | 'json' | 'html' | 'text'\n\nexport interface QuillConfig {\n  bounds?: HTMLElement | string\n  customModules?: CustomModule[]\n  customOptions?: CustomOption[]\n  suppressGlobalRegisterWarning?: boolean\n  debug?: 'error' | 'warn' | 'log' | false\n  format?: QuillFormat\n  formats?: string[]\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement | string | null\n  theme?: string\n  strict?: boolean\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config')\n","import { Injectable, Inject } from '@angular/core'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { defaultModules } from './quill-defaults'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuillService {\n  private Quill!: any\n  private $importPromise!: Promise<any>\n  private count = 0\n\n  constructor(\n    @Inject(QUILL_CONFIG_TOKEN) public config: QuillConfig\n  ) {\n    if (!this.config) {\n      this.config = { modules: defaultModules }\n    }\n  }\n\n  getQuill() {\n    this.count++\n    if (!this.Quill && this.count === 1) {\n      this.$importPromise = new Promise(async (resolve) => {\n        const quillImport = await import('quill')\n\n        this.Quill = (quillImport.default ? quillImport.default : quillImport) as any\n\n        // Only register custom options and modules once\n        this.config.customOptions?.forEach((customOption) => {\n          const newCustomOption = this.Quill.import(customOption.import)\n          newCustomOption.whitelist = customOption.whitelist\n          this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning)\n        })\n\n        this.config.customModules?.forEach(({implementation, path}) => {\n          this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning)\n        })\n\n        resolve(this.Quill)\n      })\n    }\n    return this.$importPromise\n  }\n}\n","import {DOCUMENT, isPlatformServer} from '@angular/common'\nimport {DomSanitizer} from '@angular/platform-browser'\n\nimport { QuillModules, CustomOption, CustomModule} from './quill-editor.interfaces'\n\nimport QuillType, { Delta } from 'quill'\n\nimport {\n  AfterViewInit,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms'\nimport {defaultModules} from './quill-defaults'\n\nimport {getFormat} from './helpers'\nimport { QuillService } from './quill.service'\n\nexport interface Range {\n  index: number\n  length: number\n}\n\nexport interface ContentChange {\n  content: any\n  delta: Delta\n  editor: QuillType\n  html: string | null\n  oldDelta: Delta\n  source: string\n  text: string\n}\n\nexport interface SelectionChange {\n  editor: QuillType\n  oldRange: Range | null\n  range: Range | null\n  source: string\n}\n\nexport interface Blur {\n  editor: QuillType\n  source: string\n}\n\nexport interface Focus {\n  editor: QuillType\n  source: string\n}\n\nexport type EditorChangeContent = ContentChange & {event: 'text-change'}\nexport type EditorChangeSelection = SelectionChange & {event: 'selection-change'}\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class QuillEditorBase implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor!: QuillType\n  editorElem!: HTMLElement\n  content: any\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required = false\n  @Input() formats?: string[] | null\n  @Input() customToolbarPosition: 'top' | 'bottom' = 'top'\n  @Input() sanitize = false\n  @Input() styles: any = null\n  @Input() strict = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() customModules: CustomModule[] = []\n  @Input() trackChanges?: 'user' | 'all'\n  @Input() preserveWhitespace = false\n  @Input() classes?: string\n  @Input() trimOnValidation = false\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onEditorChanged: EventEmitter<EditorChangeContent | EditorChangeSelection> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<ContentChange> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<SelectionChange> = new EventEmitter()\n  @Output() onFocus: EventEmitter<Focus> = new EventEmitter()\n  @Output() onBlur: EventEmitter<Blur> = new EventEmitter()\n\n  disabled = false // used to store initial value before ViewInit\n\n  onModelChange: (modelValue?: any) => void\n  onModelTouched: () => void\n  onValidatorChanged: () => void\n\n  constructor(\n    public elementRef: ElementRef,\n    protected domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) protected doc: any,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected renderer: Renderer2,\n    protected zone: NgZone,\n    protected service: QuillService\n  ) {}\n\n  static normalizeClassNames(classes: string): string[] {\n    const classList = classes.trim().split(' ')\n    return classList.reduce((prev: string[], cur: string) => {\n      const trimmed = cur.trim()\n      if (trimmed) {\n        prev.push(trimmed)\n      }\n\n      return prev\n    }, [])\n  }\n\n  @Input()\n  valueGetter = (quillEditor: QuillType, editorElement: HTMLElement): string | any  => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n    let modelValue: string | Delta | null = html\n    const format = getFormat(this.format, this.service.config.format)\n\n    if (format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: QuillType, value: any): any => {\n    const format = getFormat(this.format, this.service.config.format)\n    if (format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  async ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n\n    const Quill = await this.service.getQuill()\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\n      this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = Object.assign({}, this.modules || this.service.config.modules)\n\n    if (toolbarElem) {\n      modules.toolbar = toolbarElem\n    } else if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar\n    }\n\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...'\n    }\n\n    if (this.styles) {\n      Object.keys(this.styles).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.styles[key])\n      })\n    }\n\n    if (this.classes) {\n      this.addClasses(this.classes)\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    this.customModules.forEach(({implementation, path}) => {\n      Quill.register(path, implementation)\n    })\n\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n    if (!bounds) {\n      bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body\n    }\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.service.config.debug) {\n      debug = this.service.config.debug\n    }\n\n    let readOnly = this.readOnly\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false\n    }\n\n    let scrollingContainer = this.scrollingContainer\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer =\n        this.service.config.scrollingContainer === null\n          || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined)\n    }\n\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        bounds,\n        debug: debug as any,\n        formats: formats as any,\n        modules,\n        placeholder,\n        readOnly,\n        scrollingContainer: scrollingContainer as any,\n        strict: this.strict,\n        theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n      })\n    })\n\n    if (this.content) {\n      const format = getFormat(this.format, this.service.config.format)\n      if (format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.getModule('history').clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    // triggered if selection or text changed\n    this.quillEditor.on(\n      'editor-change',\n      this.editorChangeHandler\n    )\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on(\n      'selection-change',\n      this.selectionChangeHandler\n    )\n\n    // update model if text changes\n    this.quillEditor.on(\n      'text-change',\n      this.textChangeHandler\n    )\n\n    // trigger created in a timeout to avoid changed models after checked\n    // if you are using the editor api in created output to change the editor content\n    setTimeout(() => {\n      if (this.onValidatorChanged) {\n        this.onValidatorChanged()\n      }\n      this.onEditorCreated.emit(this.quillEditor)\n    })\n  }\n\n  selectionChangeHandler = (range: Range | null, oldRange: Range | null, source: string) => {\n    const shouldTriggerOnModelTouched = !range && !!this.onModelTouched\n\n    // only emit changes when there's any listener\n    if (!this.onBlur.observers.length &&\n        !this.onFocus.observers.length &&\n        !this.onSelectionChanged.observers.length &&\n        !shouldTriggerOnModelTouched) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (range === null) {\n        this.onBlur.emit({\n          editor: this.quillEditor,\n          source\n        })\n      } else if (oldRange === null) {\n        this.onFocus.emit({\n          editor: this.quillEditor,\n          source\n        })\n      }\n\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (shouldTriggerOnModelTouched) {\n        this.onModelTouched()\n      }\n    })\n  }\n\n  textChangeHandler = (delta: Delta, oldDelta: Delta, source: string): void => {\n    // only emit changes emitted by user interactions\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n\n    const trackChanges = this.trackChanges || this.service.config.trackChanges\n    const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange\n\n    // only emit changes when there's any listener\n    if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n      return\n    }\n\n    this.zone.run(() => {\n      if (shouldTriggerOnModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n    })\n  }\n\n  // tslint:disable-next-line:max-line-length\n  editorChangeHandler = (event: 'text-change' | 'selection-change', current: any | Range | null, old: any | Range | null, source: string): void => {\n    // only emit changes when there's any listener\n    if (!this.onEditorChanged.observers.length) {\n      return\n    }\n\n    // only emit changes emitted by user interactions\n    if (event === 'text-change') {\n      const text = this.quillEditor.getText()\n      const content = this.quillEditor.getContents()\n\n      let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = null\n      }\n\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          content,\n          delta: current,\n          editor: this.quillEditor,\n          event,\n          html,\n          oldDelta: old,\n          source,\n          text\n        })\n      })\n    } else {\n      this.onEditorChanged.emit({\n        editor: this.quillEditor,\n        event,\n        oldRange: old,\n        range: current,\n        source\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.quillEditor) {\n      this.quillEditor.off('selection-change', this.selectionChangeHandler)\n      this.quillEditor.off('text-change', this.textChangeHandler)\n      this.quillEditor.off('editor-change', this.editorChangeHandler)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['styles']) {\n      const currentStyling = changes['styles'].currentValue\n      const previousStyling = changes['styles'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n    }\n    if (changes['classes']) {\n      const currentClasses = changes['classes'].currentValue\n      const previousClasses = changes['classes'].previousValue\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses)\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses)\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  addClasses(classList: string): void {\n    QuillEditorBase.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.addClass(this.editorElem, c)\n    })\n  }\n\n  removeClasses(classList: string): void {\n    QuillEditorBase.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.removeClass(this.editorElem, c)\n    })\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n    const format = getFormat(this.format, this.service.config.format)\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.onValidatorChanged = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const text = this.quillEditor.getText()\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1)\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent extends QuillEditorBase {\n\n  constructor(\n    @Inject(ElementRef) elementRef: ElementRef,\n    @Inject(DomSanitizer) domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) doc: any,\n    @Inject(PLATFORM_ID) platformId: any,\n    @Inject(Renderer2) renderer: Renderer2,\n    @Inject(NgZone) zone: NgZone,\n    @Inject(QuillService) service: QuillService\n  ) {\n    super(\n      elementRef,\n      domSanitizer,\n      doc,\n      platformId,\n      renderer,\n      zone,\n      service\n    )\n  }\n\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser'\nimport { QuillService } from './quill.service'\n\nimport {\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view-html',\n  styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n  template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n})\nexport class QuillViewHTMLComponent implements OnChanges {\n  innerHTML: SafeHtml = ''\n  themeClass = 'ql-snow'\n\n  @Input() content = ''\n  @Input() theme?: string\n\n  constructor(\n    @Inject(DomSanitizer) private sanitizer: DomSanitizer,\n    protected service: QuillService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow')\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow'\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    }\n    if (changes.content) {\n      this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue)\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common'\nimport QuillType from 'quill'\nimport { QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  NgZone,\n  SecurityContext\n} from '@angular/core'\n\nimport { CustomOption, CustomModule } from './quill-editor.interfaces'\nimport {getFormat} from './helpers'\nimport { QuillService } from './quill.service'\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view',\n  styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n  template: `\n`\n})\nexport class QuillViewComponent implements AfterViewInit, OnChanges {\n  quillEditor!: QuillType\n  editorElem!: HTMLElement\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' | 'log' | 'error' | false\n  @Input() formats?: string[] | null\n  @Input() sanitize = false\n  @Input() strict = true\n  @Input() content: any\n  @Input() customModules: CustomModule[] = []\n  @Input() customOptions: CustomOption[] = []\n  @Input() preserveWhitespace = false\n\n  constructor(\n    public elementRef: ElementRef,\n    protected renderer: Renderer2,\n    protected zone: NgZone,\n    protected service: QuillService,\n    protected domSanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) protected platformId: any,\n  ) {}\n\n  valueSetter = (quillEditor: QuillType, value: any): any => {\n    const format = getFormat(this.format, this.service.config.format)\n    let content = value\n    if (format === 'text') {\n      quillEditor.setText(content)\n    } else {\n      if (format === 'html') {\n        if (this.sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n        }\n        content = quillEditor.clipboard.convert(value)\n      } else if (format === 'json') {\n        try {\n          content = JSON.parse(value)\n        } catch (e) {\n          content = [{ insert: value }]\n        }\n      }\n      quillEditor.setContents(content)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.quillEditor) {\n      return\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue)\n    }\n  }\n\n  async ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n\n    const Quill = await this.service.getQuill()\n\n    const modules = Object.assign({}, this.modules || this.service.config.modules)\n    modules.toolbar = false\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    this.customModules.forEach(({implementation, path}) => {\n      Quill.register(path, implementation)\n    })\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.service.config.debug) {\n      debug = this.service.config.debug\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.service.config.formats ?\n        Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined)\n    }\n    const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'afterbegin',\n      this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-view-element]'\n    ) as HTMLElement\n\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        debug: debug as any,\n        formats: formats as any,\n        modules,\n        readOnly: true,\n        strict: this.strict,\n        theme\n      })\n    })\n\n    this.renderer.addClass(this.editorElem, 'ngx-quill-view')\n\n    if (this.content) {\n      this.valueSetter(this.quillEditor, this.content)\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { QuillViewHTMLComponent } from './quill-view-html.component'\nimport { QuillViewComponent } from './quill-view.component'\nimport { QuillService } from './quill.service'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent,\n    QuillViewComponent,\n    QuillViewHTMLComponent\n  ],\n  exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n  imports: [CommonModule],\n  providers: [QuillService]\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders<QuillModule> {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          useValue: config\n        }\n      ]\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-quill\n */\n\nexport * from './lib/quill.module'\nexport * from './lib/quill.service'\nexport * from './lib/quill-defaults'\nexport * from './lib/quill-editor.component'\nexport * from './lib/quill-view.component'\nexport * from './lib/quill-view-html.component'\nexport * from './lib/quill-editor.interfaces'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}